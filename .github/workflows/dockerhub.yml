name: Build and Push Docker Images

on:
  push:
    tags:
      - "v*"

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  DOCKERHUB_REPOSITORY: districtnex

jobs:
  ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and Push UI
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:ui-${{ github.ref_name }}
          context: DistrictNex_UI
          file: DistrictNex_UI/Dockerfile

  admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and Push Admin
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:admin-${{ github.ref_name }}
          context: DistrictNex_Admin
          file: DistrictNex_Admin/Dockerfile

  microservices:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
          [
            Area-Management,
            Asset-Management,
            Cloud-Interface,
            Dimension-Management,
            District-Management,
            Entity-Management,
            File-Management,
            Floor-Management,
            Insights-Management,
            KPI-Extraction-Engine,
            KPI-Management,
            Method-Monitoring,
            Mobility-Dimension,
            Organization-Management,
            Platform-Logging,
            Region-Management,
            Reporting,
            Security-Dimension,
            Settings-Management,
            ShareView,
            Site-Management,
            Smart-Living-Dimension,
            Space-Management,
            Sustainability-Dimension,
            Top-Level-Management,
            User-Authentication,
            User-Management,
            Video-AI-Engine-Management,
            Api-Gateway,
            Data-Creation-Cron,
            Data-Retention-Cron,
            Mobility-Dimension-Cron,
            Security-Dimension-Cron,
            SignalR-Realtime-Server,
            Smart-Living-Dimension-Cron,
            Sustainability-Dimension-Cron,
            Video-AI-Engine-Management-Cron,
            Wifi-Signal-Cron,
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and Push ${{ matrix.name }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ matrix.name }}-${{ github.ref_name }}
          context: Microservices
          file: Microservices/${{ matrix.name }}-Dockerfile

  # api-gateway:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}

  #     - name: Build and Push Api Gateway
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:api-gateway-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Api-Gateway-Dockerfile

  # area-management:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Area Management
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:area-management-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Area-Management-Dockerfile

  # asset-management:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Asset Management
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:asset-management-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Asset-Management-Dockerfile

  # cloud-interface:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Cloud Interface
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:cloud-interface-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Cloud-Interface-Dockerfile

  # correlation-calculation:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}

  #     - name: Build and Push Correlation Calculation
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:correlation-calculation-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Correlation-Calculation-Dockerfile

  # data-creation-cron:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Data Creation Cron
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:data-creation-cron-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Data-Creation-Cron-Dockerfile

  # data-retention-cron:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Data Retention Cron
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:data-retention-cron-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Data-Retention-Cron-Dockerfile

  # dimension-management:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and Push Dimension Management
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:dimension-management-${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/Dimension-Management-Dockerfile
