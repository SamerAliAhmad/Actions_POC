name: Build and Push Docker Images

on:
  push:
    tags:
      - "v*"

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  DOCKERHUB_REPOSITORY: districtnex

jobs:
  slack:
    runs-on: ubuntu-latest

    steps:
      - name: Send POST request
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"${{ github.ref_name }} Deployed"}' https://hooks.slack.com/services/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
  # ui:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and Push UI
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/ui:4.0.3
  #         context: DistrictNex_UI
  #         file: DistrictNex_UI/Dockerfile

  # admin:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}

  #     - name: Build and Push Docker Image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/ui:4.0.0

  # microservices:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       name:
  #         [
  #           Area-Management,
  #           Asset-Management,
  #           Cloud-Interface,
  #           Dimension-Management,
  #           District-Management,
  #           Entity-Management,
  #           File-Management,
  #           Floor-Management,
  #           Insights-Management,
  #           KPI-Extraction-Engine,
  #           KPI-Management,
  #           Method-Monitoring,
  #           Mobility-Dimension,
  #           Organization-Management,
  #           Platform-Logging,
  #           Region-Management,
  #           Reporting,
  #           Security-Dimension,
  #           Settings-Management,
  #           ShareView,
  #           Site-Management,
  #           Smart-Living-Dimension,
  #           Space-Management,
  #           Sustainability-Dimension,
  #           Top-Level-Management,
  #           User-Authentication,
  #           User-Management,
  #           Video-AI-Engine-Management,
  #           Api-Gateway,
  #           Data-Creation-Cron,
  #           Data-Retention-Cron,
  #           Mobility-Dimension-Cron,
  #           Security-Dimension-Cron,
  #           SignalR-Realtime-Server,
  #           Smart-Living-Dimension-Cron,
  #           Sustainability-Dimension-Cron,
  #           Video-AI-Engine-Management-Cron,
  #           Wifi-Signal-Cron,
  #         ]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}

  #     - name: Build and Push ${{ matrix.name }}
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ github.ref_name }}
  #         context: Microservices
  #         file: Microservices/${{ matrix.name }}-Dockerfile
