{{- $existingStorageClass := lookup "storage.k8s.io/v1" "StorageClass" "" "gp3" }}
{{- if not $existingStorageClass }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp3
  labels:
    chartVersion: {{ .Chart.Version }}
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": post-install,post-upgrade
parameters:
  type: gp3
  fsType: {{ .Values.storageclass.gp3.fsType }}
  encrypted: "{{ .Values.storageclass.gp3.encrypted }}"
provisioner: ebs.csi.aws.com
reclaimPolicy: {{ .Values.storageclass.gp3.reclaimPolicy }}
volumeBindingMode: {{ .Values.storageclass.gp3.volumeBindingMode }}
allowVolumeExpansion: {{ .Values.storageclass.gp3.allowVolumeExpansion }}
---
{{- end }}
{{- $existingStorageClass := lookup "storage.k8s.io/v1" "StorageClass" "" "efs-sc" }}
{{- if not $existingStorageClass }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
  labels:
    chartVersion: {{ .Chart.Version }}
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": post-install,post-upgrade
parameters:
  directoryPerms: "700"
  provisioningMode: efs-ap
  fileSystemId: {{ .Values.storageclass.efs.fs_id }}
provisioner: efs.csi.aws.com
reclaimPolicy: {{ .Values.storageclass.efs.reclaimPolicy }}
volumeBindingMode: {{ .Values.storageclass.efs.volumeBindingMode }}
allowVolumeExpansion: {{ .Values.storageclass.efs.allowVolumeExpansion }}
{{- end }}
