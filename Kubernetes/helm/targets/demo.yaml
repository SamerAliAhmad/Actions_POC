global:
  env: "Demo"
  repository: "picacityai"
  project_name: "districtnex"
  namespace: "districtnex-demo"
  autoscaler_role_arn: "arn:aws:iam::072985058576:role/eks-cluster-autoscaler"
  k8s_cluster_name: "districtnex-cluster"
  messages:
    name: messages
    messagesXml: |-
      <?xml version="1.0" encoding="utf-8"?>
      <MESSAGES>
          <ENGLISH>
              <MESSAGE CODE="ER_0001" CONTENT="ACCESS_DENIED" />
              <MESSAGE CODE="ER_0002" CONTENT="SESSION_INVALID" />
              <MESSAGE CODE="ER_0003" CONTENT="SESSION_EXPIRED" />
              <MESSAGE CODE="BR_0000" CONTENT="%1 already exists!" />
              <MESSAGE CODE="BR_0001" CONTENT="%1 With ID %2 Does not Exist!" />
              <MESSAGE CODE="BR_0002" CONTENT="Invalid Ticket!" />
              <MESSAGE CODE="BR_0003" CONTENT="Invalid Email" />
              <MESSAGE CODE="BR_0004" CONTENT="Report Not Found" />
              <MESSAGE CODE="BR_0005" CONTENT="User Not Found" />
              <MESSAGE CODE="BR_0006" CONTENT="Invalid Password! Re-enter and Try Again" />
              <MESSAGE CODE="BR_0007" CONTENT="User Inactive. Please contact support." />
              <MESSAGE CODE="BR_0008" CONTENT="Email Sending Failed! Check your Email and Try Again." />
              <MESSAGE CODE="BR_0009" CONTENT="Report Not Found!" />
              <MESSAGE CODE="BR_0010" CONTENT="The chosen organization does not exist." />
              <MESSAGE CODE="BR_0011" CONTENT="One of the sites chosen does not exist." />
              <MESSAGE CODE="BR_0012" CONTENT="One of the dimensions chosen does not exist." />
              <MESSAGE CODE="BR_0013" CONTENT="One of the entities chosen does not exist." />
              <MESSAGE CODE="BR_0014" CONTENT="The organization does not have access to this site." />
              <MESSAGE CODE="BR_0015" CONTENT="Invalid Input" />
              <MESSAGE CODE="BR_0016" CONTENT="User does not belong to an organization" />
              <MESSAGE CODE="BR_0017" CONTENT="Organization does not have access to this site." />
              <MESSAGE CODE="BR_0018" CONTENT="Organization does not have access to this dimension in the site." />
              <MESSAGE CODE="BR_0019" CONTENT="The organization does not have access to this entity." />
              <MESSAGE CODE="BR_0020" CONTENT="The user does not have access to this entity." />
              <MESSAGE CODE="BR_0021" CONTENT="Organization not found." />
              <MESSAGE CODE="BR_0022" CONTENT="You do not have access to this content." />
              <MESSAGE CODE="BR_0023" CONTENT="You do not belong to an active organization. Please contact support.." />
              <MESSAGE CODE="BR_0024" CONTENT="Site already belongs to an organization." />
              <MESSAGE CODE="BR_0025" CONTENT="Super Admins can't be deleted." />
              <MESSAGE CODE="BR_0026" CONTENT="Upload Failed." />
              <MESSAGE CODE="BR_0027" CONTENT="Delete Failed." />
              <MESSAGE CODE="BR_0028" CONTENT="Invalid Credentials" />
              <MESSAGE CODE="BR_0029" CONTENT="User ID Cannot be Null!" />
              <MESSAGE CODE="BR_0030" CONTENT="An Error has Occured! Contact Support." />
              <MESSAGE CODE="BR_0031" CONTENT="No OTP exists for this username. Try again." />
              <MESSAGE CODE="BR_0032" CONTENT="Codes do not match! Try Again." />
              <MESSAGE CODE="BR_0033" CONTENT="Only Admins Can Log In." />
              <MESSAGE CODE="BR_0034" CONTENT="This feature is currently unavailable" />
              <MESSAGE CODE="BR_0035" CONTENT="Max user quota reached" />
              <MESSAGE CODE="BR_0036" CONTENT="Max admin quota reached" />
              <MESSAGE CODE="BR_0037" CONTENT="No LPR Engine Active" />
              <MESSAGE CODE="BR_0038" CONTENT="Invalid Credentials or Connection Url" />
              <MESSAGE CODE="BR_0039" CONTENT="Cannot Access Video AI" />
              <MESSAGE CODE="BR_0040" CONTENT="Video ai asset with Space asset ID %2 not found" />
              <MESSAGE CODE="BR_0041" CONTENT="Your account is deactivated. Please contact support." />
              <MESSAGE CODE="BR_0042" CONTENT="No FR Engine Active" />
              <MESSAGE CODE="BR_0043" CONTENT="Request is being processed, try again later" />
              <MESSAGE CODE="BR_0044" CONTENT="Data for %1 on date %2 already exists" />
              <MESSAGE CODE="BR_0045" CONTENT="%1 Setup Not Found." />
              <MESSAGE CODE="BR_0046" CONTENT="%1 Does Not Exist!" />
              <MESSAGE CODE="BR_0047" CONTENT="The user does not have access to any level." />
              <MESSAGE CODE="BR_0048" CONTENT="Request resulting in error, jobId has been deleted, try again" />
              <MESSAGE CODE="BR_0049" CONTENT="Invalid Cloud Provider" />
              <MESSAGE CODE="BR_0050" CONTENT="Couldn't Retrieve Secret" />
              <MESSAGE CODE="BR_0051" CONTENT="Google API Token not found" />
              <MESSAGE CODE="BR_0052" CONTENT="An error has occured, please try again later" />
              <MESSAGE CODE="BR_0053" CONTENT="Failed to Assign Dates: %1" />
              <MESSAGE CODE="BR_0054" CONTENT="Delete failed for Kpi_chart_configuration: %1" />
              <MESSAGE CODE="BR_0055" CONTENT="Delete failed for Dimension_chart_configuration: %1" />
              <MESSAGE CODE="BR_0056" CONTENT="Delete failed for Specialized_chart_configuration: %1" />
              <MESSAGE CODE="BR_0057" CONTENT="Unable to send OTP. Please contact support." />
          </ENGLISH>
      </MESSAGES>
storageclass:
  gp3:
    fsType: xfs
    encrypted: "true"
    reclaimPolicy: Retain
    allowVolumeExpansion: true
    volumeBindingMode: WaitForFirstConsumer
  efs:
    fs_id: "fs-001b531b07846d7cf"
    reclaimPolicy: Retain
    allowVolumeExpansion: true
    volumeBindingMode: WaitForFirstConsumer
secrets:
  dockerhub:
    name: "districtnex-dockerhub-registry-key"
    type: "kubernetes.io/dockerconfigjson"
    data:
      dockerconfigjson: "ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImNHbGpZV05wZEhsaGFUcGtZMnR5WDNCaGRGOURkVWhHWW0weFFWVlhka0ZGVEdOWFZXczJUVVZJU2tGUlRraz0iCgkJfQoJfQp9"
  redis:
    name: "redis-password"
    type: "Opaque"
    data:
      redis_passwords: "OGtaamM5OWtpNThNYkhDTmpi"
  mongodb:
    name: "mongodb-secrets"
    type: "Opaque"
    data:
      mongodb_passwords: "b0xuUHZIUVE4MWlMbVEyVFpUNDc="
      mongodb_root_password: "b0xuUHZIUVE4MWlMbVEyVFpUNDc="
      mongodb_metrics_password: "b0xuUHZIUVE4MWlMbVEyVFpUNDc="
      mongodb_replica_set_key: "YlhrdGMyVmpjbVYwTFhKbGNHeHBZMkZ6WlhRdGEyVjU="
  aws_auth:
    name: "cloud-interface-aws-auth-secrets"
    type: "Opaque"
    data:
      Aws_Access_Key_ID: QUtJQVJCN1I3VFVJSko3V0VWTzY=
      Aws_Secret_Access_Key: MkszTkdFdzUxVm5ERHVuaXA2aWQ3ZTlrTndKK1RyZXFzck44eVBTMw==
tag: &globalTag "3.1.3"
mongodb:
  # Global settings
  global:
    storageClass: "gp3"
    namespaceOverride: districtnex-demo
  # MongoDB settings
  architecture: "replicaset"
  replicaSetName: "rs0"
  replicaCount: 3
  auth:
    rootUser: Scbh3Jk7fxfbS8fZ4D84
    existingSecret: "mongodb-secrets"
  # Persistence settings
  persistence:
    enabled: true
    size: 250Gi
    accessModes:
    - ReadWriteOnce
    storageClassName: "gp3"
    annotations:
      ebs.csi.aws.com/fsType: "xfs"
    iops: 13750
    throughput: 250
  # Network settings
  # Security settings
  livenessProbe:
    initialDelaySeconds: 20
  readinessProbe:
    initialDelaySeconds: 20
  # TLS
  tls:
    enabled: false
    autoGenerated: false
  # Affinity
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: mongodb
            app.kubernetes.io/instance: districtnex-demo
        topologyKey: "kubernetes.io/hostname"
  # Autoscaling
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 6
  # MongoDB Extra Flags
  extraFlags:
  - "--wiredTigerCacheSizeGB=2"
redis:
  enabled: true
  # Global settings
  global:
    storageClass: "gp3"
    redis:
      existingSecret: redis-password
  # Master configuration
  master:
    persistence:
      enabled: true
      size: 64Gi
      storageClassName: "gp3"
      accessModes:
      - ReadWriteOnce
      annotations:
        ebs.csi.aws.com/fsType: "xfs"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: node
              app.kubernetes.io/instance: districtnex-demo
          topologyKey: "kubernetes.io/hostname"
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
  # Replica configuration
  replica:
    replicaCount: 3
    persistence:
      enabled: true
      size: 64Gi
      storageClassName: "gp3"
      accessModes:
      - ReadWriteOnce
      annotations:
        ebs.csi.aws.com/fsType: "xfs"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: node
              app.kubernetes.io/instance: districtnex-demo
          topologyKey: "kubernetes.io/hostname"
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
  # Redis Sentinel configuration
  sentinel:
    enabled: true
    masterSet: redis-master
    sentinelCount: 3
    usePassword: true
  # Network policies
  networkPolicy:
    enabled: true
    allowExternal: false
  # Redis service configuration
  service:
    type: ClusterIP
    port: 6379
    clusterIP: None
  # Additional configuration
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
ingress-controller:
  enabled: true
  ingressClass: "alb"
  scheme: "internet-facing"
  listen_ports: '[{"HTTP": 80}, {"HTTPS":443}]'
  ssl_redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  api:
    endpoint: "demo.api.picacity.ai"
    backendServiceName: "districtnex-api-gateway"
    backendServicePort: 80
    certificateARN: "arn:aws:acm:me-central-1:072985058576:certificate/9aaf9db4-ff1d-43ad-848a-e2c5dd7416df"
  websockets:
    endpoint: "demo.websockets.picacity.ai"
    backendServiceName: "districtnex-signalr-realtime-server"
    backendServicePort: 80
    certificateARN: "arn:aws:acm:me-central-1:072985058576:certificate/b6fd056a-af1c-4822-b38d-6e8e4228125d"
  clientsUI:
    endpoint: "demo.districtnex.picacity.ai"
    backendServiceName: "districtnex-client-ui"
    backendServicePort: 80
    certificateARN: "arn:aws:acm:me-central-1:072985058576:certificate/44e2f8f7-0c9c-4e58-84d6-a14ba304f693"
  adminUI:
    endpoint: "demo.admin.districtnex.picacity.ai"
    backendServiceName: "districtnex-admin-ui"
    backendServicePort: 80
    certificateARN: "arn:aws:acm:me-central-1:072985058576:certificate/1a83f9e8-2174-46d7-a1bc-4256bc11fe21"
mgob:
  image: "mgob"
  tag: *globalTag
  containerPort: 8090
  volumeClaims:
    mgobData:
      requests:
        storage: 250Gi
        storageClassName: "gp3"
        accessMode: "ReadWriteOnce"
    mgobStorage:
      requests:
        storage: 250Gi
        storageClassName: "gp3"
        accessMode: "ReadWriteOnce"
  secrets:
    smtpPassword: "UG9xNTU4OTM="
    smtpUsername: "ZGlzdHJpY3RuZXhAcGljYWNpdHkuYWk="
    mongodbUsername: "U2NiaDNKazdmeGZiUzhmWjREODQ="
    mongodbPassword: "b0xuUHZIUVE4MWlMbVEyVFpUNDc="
    awsAccessKey: "QUtJQVJCN1I3VFVJSko3V0VWTzY="
    awsSecretKey: "MkszTkdFdzUxVm5ERHVuaXA2aWQ3ZTlrTndKK1RyZXFzck44eVBTMw=="
    envName: "RGlzdHJpY3ROZXggQVdTIERlbW8gRW52aXJvbm1lbnQ="
  mainDatabase:
    port: 27017
    timeout: "60"
    retention: "10"
    cronSchedule: "0 0 * * *"
    name: "DistrictNex"
    bucket: "districtnex-backups-bucket/MongoDB/demo/DistrictNex"
    retry:
      attempts: 3
      backoffFactor: 60
    smtp:
      port: 587
      warnOnly: false
      tlsEnabled: true
      emailSendRetries: 5
      emailSendRetryDelay: 1
      emailSendDelayUnit: "Minute"
      server: "smtp.office365.com"
      encryptionType: EncryptionSTARTTLS
      to:
      - "dev.lead@picacity.ai"
      - "alec.lai@picacity.ai"
  logsDatabase:
    port: 27017
    timeout: "60"
    retention: "10"
    cronSchedule: "0 0 * * *"
    name: "DistrictNex_Logs"
    bucket: "districtnex-backups-bucket/MongoDB/demo/DistrictNex_Logs"
    retry:
      attempts: 3
      backoffFactor: 60
    smtp:
      port: 587
      warnOnly: false
      tlsEnabled: true
      emailSendRetries: 5
      emailSendRetryDelay: 1
      emailSendDelayUnit: "Minute"
      server: "smtp.office365.com"
      encryptionType: EncryptionSTARTTLS
      to:
      - "dev.lead@picacity.ai"
      - "alec.lai@picacity.ai"

region-management-webapi:
  enabled: true
  name: "region-management-webapi"
  image: "districtnex-picacity-region-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5018
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

method-monitoring-webapi:
  enabled: true
  name: "method-monitoring-webapi"
  image: "districtnex-picacity-method-monitoring-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5001
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
        </appSettings>
    </configuration>

api-gateway:
  enabled: true
  name: "api-gateway"
  image: "districtnex-picacity-api-gateway"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5000
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"


security-dimension-webapi:
  enabled: true
  name: "security-dimension-webapi"
  image: "districtnex-picacity-security-dimension-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5020
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
        </appSettings>
    </configuration>

admin-ui:
  enabled: true
  name: "admin-ui"
  image: "districtnex-picacity-admin-ui"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 80
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    {
        "Environment": "Production",
        "APIUrl": "https://demo.api.picacity.ai",
        "SignalR_Realtime_Server_Endpoint": "https://demo.websockets.picacity.ai"
    }

smart-living-dimension-webapi:
  enabled: true
  name: "smart-living-dimension-webapi"
  image: "districtnex-picacity-smart-living-dimension-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5024
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
        </appSettings>
    </configuration>

signalr-realtime-server-reverse-proxy:
  enabled: true
  name: "signalr-realtime-server-reverse-proxy"
  image: "districtnex-picacity-signalr-realtime-server-reverse-proxy"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 80
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"


correlation-calculation-webapi:
  enabled: true
  name: "correlation-calculation-webapi"
  image: "districtnex-picacity-correlation-calculation-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5000
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"


area-management-webapi:
  enabled: true
  name: "area-management-webapi"
  image: "districtnex-picacity-area-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5003
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

entity-management-webapi:
  enabled: true
  name: "entity-management-webapi"
  image: "districtnex-picacity-entity-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5007
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

user-management-webapi:
  enabled: true
  name: "user-management-webapi"
  image: "districtnex-picacity-user-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5029
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="ASSETS_ORG_IMAGE_PATH" value="Organization_Images" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="SUPPORT_SMTP_EMAIL" value="districtnex-demo-smtp-support-mail" />
            <add key="SUPPORT_SMTP_PASSWORD" value="districtnex-demo-smtp-support-password" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

api-gateway-reverse-proxy:
  enabled: true
  name: "api-gateway-reverse-proxy"
  image: "districtnex-picacity-api-gateway-reverse-proxy"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 80
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"


settings-management-webapi:
  enabled: true
  name: "settings-management-webapi"
  image: "districtnex-picacity-settings-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5021
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="CLOUD_PROVIDER" value="AWS" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="ASSETS_DEFAULT_IMAGE_PATH" value="Default_Images" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="SUPPORT_SMTP_EMAIL" value="districtnex-demo-smtp-support-mail" />
            <add key="SUPPORT_SMTP_PASSWORD" value="districtnex-demo-smtp-support-password" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

signalr-realtime-server:
  enabled: true
  name: "signalr-realtime-server"
  image: "districtnex-picacity-signalr-realtime-server"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5870
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"


user-authentication-webapi:
  enabled: true
  name: "user-authentication-webapi"
  image: "districtnex-picacity-user-authentication-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5028
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="SMTP_EMAIL" value="districtnex-demo-smtp-mail" />
            <add key="SMTP_PASSWORD" value="districtnex-demo-smtp-password" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="OTP_TEMPLATE_PATH" value="./OTPTemplate.html" />
            <add key="ASSETS_ORG_IMAGE_PATH" value="Organization_Images" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="SUPPORT_SMTP_EMAIL" value="districtnex-demo-smtp-support-mail" />
            <add key="SUPPORT_SMTP_PASSWORD" value="districtnex-demo-smtp-support-password" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

platform-logging-webapi:
  enabled: true
  name: "platform-logging-webapi"
  image: "districtnex-picacity-platform-logging-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5017
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex_Logs" />
            <add key="ASSETS_EXCEL_REPORT_PATH" value="Excel_Reports" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

top-level-management-webapi:
  enabled: true
  name: "top-level-management-webapi"
  image: "districtnex-picacity-top-level-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5027
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

mobility-dimension-webapi:
  enabled: true
  name: "mobility-dimension-webapi"
  image: "districtnex-picacity-mobility-dimension-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5014
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
        </appSettings>
    </configuration>

kpi-management-webapi:
  enabled: true
  name: "kpi-management-webapi"
  image: "districtnex-picacity-kpi-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5013
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

reporting-webapi:
  enabled: true
  name: "reporting-webapi"
  image: "districtnex-picacity-reporting-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5019
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="SMTP_EMAIL" value="districtnex-demo-smtp-mail" />
            <add key="SMTP_PASSWORD" value="districtnex-demo-smtp-password" />
            <add key="ASSETS_REPORTS_PATH" value="Static_Reports" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="LINK_SHARE_TEMPLATE_PATH" value="./LinkShareTemplate.html" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

dimension-management-webapi:
  enabled: true
  name: "dimension-management-webapi"
  image: "districtnex-picacity-dimension-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5005
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

space-management-webapi:
  enabled: true
  name: "space-management-webapi"
  image: "districtnex-picacity-space-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5025
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

floor-management-webapi:
  enabled: true
  name: "floor-management-webapi"
  image: "districtnex-picacity-floor-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5009
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

kpi-extraction-engine-webapi:
  enabled: true
  name: "kpi-extraction-engine-webapi"
  image: "districtnex-picacity-kpi-extraction-engine-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5012
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="LIST_DWELL_TIME" value="15-30,30-60,60-120,120-1440" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="EDMONTON_API_KEY" value="districtnex-demo-edmonton-api-app-token" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
            <!-- Telus API Secrets -->
            <add key="TELUS_SCOPE" value="districtnex-demo-telus-scope" />
            <add key="TELUS_CLIENT_ID" value="districtnex-demo-telus-client-id" />
            <add key="TELUS_CUSTOMER_ID" value="districtnex-demo-telus-customer-id" />
            <add key="TELUS_CLIENT_SECRET" value="districtnex-demo-telus-client-secret" />
        </appSettings>
    </configuration>

video-ai-engine-management-webapi:
  enabled: true
  name: "video-ai-engine-management-webapi"
  image: "districtnex-picacity-video-ai-engine-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5030
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="SMTP_EMAIL" value="districtnex-demo-smtp-mail" />
            <add key="SMTP_PASSWORD" value="districtnex-demo-smtp-password" />
            <add key="ALERTS_TEMPLATE" value="./AlertsTemplate.html" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="JSON_PATH" value="https://demo.api.picacity.ai/Api/FileManagement/Files/VideoAi/JSON/" />
            <add key="IMAGE_PATH" value="https://demo.api.picacity.ai/Api/FileManagement/Files/VideoAi/Images/" />
        </appSettings>
    </configuration>

cloud-interface-webapi:
  enabled: true
  name: "cloud-interface-webapi"
  image: "districtnex-picacity-cloud-interface-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5010
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  secrets:
    aws_auth:
      name: "cloud-interface-aws-auth-secrets"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="CLOUD_PROVIDER" value="AWS" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="GCP_PROJECT_ID" value="districtnex-340415" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
        </appSettings>
    </configuration>

file-management-webapi:
  enabled: true
  name: "file-management-webapi"
  image: "districtnex-picacity-file-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5008
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  pvc:
    storage: "100Gi"
    access_mode: "ReadWriteMany"
    storage_class_name: "efs-sc"
    name: "districtnex-file-management-webapi-pvc"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ASSETS_LOCATION" value="/data" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

sustainability-dimension-webapi:
  enabled: true
  name: "sustainability-dimension-webapi"
  image: "districtnex-picacity-sustainability-dimension-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5026
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
        </appSettings>
    </configuration>

asset-management-webapi:
  enabled: true
  name: "asset-management-webapi"
  image: "districtnex-picacity-asset-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5004
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

client-ui:
  enabled: true
  name: "client-ui"
  image: "districtnex-picacity-client-ui"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 80
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    {
        "Environment": "Production",
        "APIUrl": "https://demo.api.picacity.ai",
        "SignalR_Realtime_Server_Endpoint": "https://demo.websockets.picacity.ai",
        "List_Preset_time": [
            {
                "NAME": "Past Week",
                "DAYS_BEHIND": 7,
                "ENUM_TIMESPAN_LIST": [
                    1
                ]
            },
            {
                "NAME": "Past Month",
                "DAYS_BEHIND": 30,
                "ENUM_TIMESPAN_LIST": [
                    1,
                    2
                ]
            },
            {
                "NAME": "Past 6 Months",
                "DAYS_BEHIND": 180,
                "ENUM_TIMESPAN_LIST": [
                    2,
                    3
                ]
            },
            {
                "NAME": "All Time",
                "DAYS_BEHIND": 9999,
                "ENUM_TIMESPAN_LIST": [
                    3
                ]
            }
        ]
    }

site-management-webapi:
  enabled: true
  name: "site-management-webapi"
  image: "districtnex-picacity-site-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5023
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

organization-management-webapi:
  enabled: true
  name: "organization-management-webapi"
  image: "districtnex-picacity-organization-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5016
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="ASSETS_ORG_IMAGE_PATH" value="Organization_Images" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="SUPPORT_SMTP_EMAIL" value="districtnex-demo-smtp-support-mail" />
            <add key="SUPPORT_SMTP_PASSWORD" value="districtnex-demo-smtp-support-password" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

insights-management-webapi:
  enabled: true
  name: "insights-management-webapi"
  image: "districtnex-picacity-insights-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5011
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

shareview-webapi:
  enabled: true
  name: "shareview-webapi"
  image: "districtnex-picacity-shareview-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5022
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="SMTP_EMAIL" value="districtnex-demo-smtp-mail" />
            <add key="SMTP_PASSWORD" value="districtnex-demo-smtp-password" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="LINK_SHARE_TEMPLATE_PATH" value="./LinkShareTemplate.html" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="SHARE_ENDPOINT" value="https://demo.districtnex.picacity.ai/shared/" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="SHARED_FILES_PATH" value="Shared" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
            <add key="ENTITY_SHAREVIEW_ENDPOINT" value="https://demo.districtnex.picacity.ai/entity-share-view" />
        </appSettings>
    </configuration>

district-management-webapi:
  enabled: true
  name: "district-management-webapi"
  image: "districtnex-picacity-district-management-webapi"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  replicas: 1
  isRedisClient: "true"
  resourceLimitation: false
  containerPort: 5006
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  hpa:
    min: 1
    max: 6
    cpu: 80
    memory: 90
    enabled: true
  service:
    port: 80
    protocol: "TCP"
    type: "NodePort"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="ENABLE_TICKET" value="1" />
            <add key="IS_DEBUG_MODE" value="1" />
            <add key="CACHING_ENABLED" value="0" />
            <add key="ENABLE_MONITORING" value="0" />
            <add key="BLC_MESSAGES" value="./Messages.xml" />
            <add key="MONGODB_DATABASE_NAME" value="DistrictNex" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="CONN_STR" value="districtnex-demo-sqlserver-instance-connection-string" />
            <add key="MONGODB_CONN_STR" value="districtnex-demo-mongodb-instance-connection-string" />
            <add key="ASSETS_ENDPOINT" value="https://demo.api.picacity.ai/Api/FileManagement/Files" />
        </appSettings>
    </configuration>

mobility-dimension-cron:
  enabled: true
  name: "mobility-dimension-cron"
  image: "districtnex-picacity-mobility-dimension-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Mobility_Dimension_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

bylaw-complaints-cron:
  enabled: true
  name: "bylaw-complaints-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>

security-dimension-cron:
  enabled: true
  name: "security-dimension-cron"
  image: "districtnex-picacity-security-dimension-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Security_Dimension_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

video-ai-engine-management-cron:
  enabled: true
  name: "video-ai-engine-management-cron"
  image: "districtnex-picacity-video-ai-engine-management-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Video_AI_Engine_Management_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 */12 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="VIDEO_AI_ENGINE_MANAGEMENT_CRON_TIME" value="0 */12 * * *" />
            <add key="REALTIME_SERVER_URL" value="http://districtnex-signalr-realtime-server" />
        </appSettings>
    </configuration>

businesses-cron:
  enabled: true
  name: "businesses-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 2 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>

data-retention-cron:
  enabled: true
  name: "data-retention-cron"
  image: "districtnex-picacity-data-retention-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Retention_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="DATA_RETENTION_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

smart-living-dimension-cron:
  enabled: true
  name: "smart-living-dimension-cron"
  image: "districtnex-picacity-smart-living-dimension-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Smart_Living_Dimension_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

telus-api-data-1-cron:
  enabled: true
  name: "telus-api-data-1-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0,5,10,15,20,25 4 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>

telus-api-data-2-cron:
  enabled: true
  name: "telus-api-data-2-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "30,35,40,45,50,55 4 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>

public-events-cron:
  enabled: true
  name: "public-events-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 1 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>

sustainability-dimension-cron:
  enabled: true
  name: "sustainability-dimension-cron"
  image: "districtnex-picacity-sustainability-dimension-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Sustainability_Dimension_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 0 * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
        </appSettings>
    </configuration>

wifi-signal-cron:
  enabled: true
  name: "wifi-signal-cron"
  image: "districtnex-picacity-wifi-signal-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Wifi_Signal_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "*/3 * * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="WIFI_SIGNAL_CRON_TIME" value="*/3 * * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="REALTIME_SERVER_URL" value="http://districtnex-signalr-realtime-server" />
        </appSettings>
    </configuration>

data-creation-cron:
  enabled: true
  name: "data-creation-cron"
  image: "districtnex-picacity-data-creation-cron"
  tag: *globalTag
  k8s_cluster_name: "districtnex-cluster"
  cron_dll: "Data_Creation_Cron.dll.config"
  isRedisClient: "true"
  resourceLimitation: false
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  ttlSecondsAfterFinished: 3600
  cron_schedule: "0 * * * *"
  resources:
    limits:
      cpu: "100m"
      memory: "150Mi"
    requests:
      cpu: "100m"
      memory: "150Mi"
  config: |-
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
        <appSettings>
            <add key="SCHEDULING_METHOD" value="HostedService" />
            <add key="BUSINESSES_CRON_TIME" value="0 2 * * *" />
            <add key="PUBLIC_EVENTS_CRON_TIME" value="0 1 * * *" />
            <add key="DATA_CREATION_CRON_TIME" value="0 * * * *" />
            <add key="IS_SEND_EMAIL_ON_CRONJOB_START" value="0" />
            <add key="IS_SEND_EMAIL_ON_CRON_EXCEPTION" value="1" />
            <add key="BYLAW_COMPLAINTS_CRON_TIME" value="0 0 * * *" />
            <add key="API_GATEWAY_URL" value="http://districtnex-api-gateway" />
            <add key="TELUS_API_DATA_1_CRON_TIME" value="0,5,10,15,20,25 4 * * *" />
            <add key="TELUS_API_DATA_2_CRON_TIME" value="30,35,40,45,50,55 4 * * *" />
        </appSettings>
    </configuration>
