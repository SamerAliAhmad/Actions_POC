using System;
using SmartrTools;
using System.Data;
using System.Linq;
using System.Dynamic;
using System.Collections.Generic;

namespace DALC
{
    public partial class MSSQL_DALC : DALC
    {
        #region Get_Kpi_By_KPI_ID_Adv
        public Kpi Get_Kpi_By_KPI_ID_Adv(int? KPI_ID)
        {
            Kpi oKpi = null;
            dynamic _params = new ExpandoObject();
            _params.KPI_ID = KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_KPI_BY_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oKpi = new Kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oKpi);
                oKpi.Dimension = new Dimension();
                oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(_query_response, "T_DIMENSION_DIMENSION_ID");
                oKpi.Dimension.NAME = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_NAME");
                oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_DIMENSION_ICON");
                oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_DIMENSION_DIMENSION_ORDER");
                oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_ICON_URL");
                oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DIMENSION_ENTRY_USER_ID");
                oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_ENTRY_DATE");
                oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DIMENSION_LAST_UPDATE");
                oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DIMENSION_IS_DELETED");
                oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DIMENSION_OWNER_ID");
                oKpi.Kpi_type_setup = new Setup();
                oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_TYPE_SETUP_SETUP_ID");
                oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_KPI_TYPE_SETUP_IS_DELETED");
                oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_KPI_TYPE_SETUP_VALUE");
                oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_KPI_TYPE_SETUP_DESCRIPTION");
                oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_TYPE_SETUP_OWNER_ID");
                oKpi.Max_data_level_setup = new Setup();
                oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                oKpi.Min_data_level_setup = new Setup();
                oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                oKpi.Setup_category = new Setup_category();
                oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_DESCRIPTION");
                oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_ENTRY_DATE");
                oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_LAST_UPDATE");
                oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SETUP_CATEGORY_IS_DELETED");
                oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_OWNER_ID");
            }
            return oKpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_Adv
        public Area_kpi_user_access Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_Adv(long? AREA_KPI_USER_ACCESS_ID)
        {
            Area_kpi_user_access oArea_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_KPI_USER_ACCESS_ID = AREA_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea_kpi_user_access = new Area_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea_kpi_user_access);
                oArea_kpi_user_access.Area = new Area();
                oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oArea_kpi_user_access.User = new User();
                oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oArea_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_Adv
        public Site_kpi_user_access Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_Adv(long? SITE_KPI_USER_ACCESS_ID)
        {
            Site_kpi_user_access oSite_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_KPI_USER_ACCESS_ID = SITE_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite_kpi_user_access = new Site_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite_kpi_user_access);
                oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oSite_kpi_user_access.Site = new Site();
                oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
                oSite_kpi_user_access.User = new User();
                oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oSite_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_ORGANIZATION_ID_Adv
        public Organization Get_Organization_By_ORGANIZATION_ID_Adv(int? ORGANIZATION_ID)
        {
            Organization oOrganization = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_ID = ORGANIZATION_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_ORGANIZATION_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oOrganization = new Organization();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oOrganization);
                oOrganization.Organization_type_setup = new Setup();
                oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
            }
            return oOrganization;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_KPI_ID_Adv
        public Entity_kpi Get_Entity_kpi_By_ENTITY_KPI_ID_Adv(long? ENTITY_KPI_ID)
        {
            Entity_kpi oEntity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_KPI_ID = ENTITY_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity_kpi = new Entity_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity_kpi);
                oEntity_kpi.Entity = new Entity();
                oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
                oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oEntity_kpi;
        }
        #endregion
        #region Get_Entity_By_ENTITY_ID_Adv
        public Entity Get_Entity_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            Entity oEntity = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity = new Entity();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity);
                oEntity.Area = new Area();
                oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oEntity.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oEntity.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oEntity.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oEntity.District = new District();
                oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oEntity.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oEntity.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oEntity.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oEntity.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oEntity.Region = new Region();
                oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oEntity.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oEntity.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oEntity.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oEntity.Site = new Site();
                oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oEntity.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oEntity.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oEntity.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
                oEntity.Top_level = new Top_level();
                oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oEntity.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
                oEntity.Entity_type_setup = new Setup();
                oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_VALUE");
                oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_OWNER_ID");
            }
            return oEntity;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_KPI_ID_Adv
        public District_kpi Get_District_kpi_By_DISTRICT_KPI_ID_Adv(long? DISTRICT_KPI_ID)
        {
            District_kpi oDistrict_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_KPI_ID = DISTRICT_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict_kpi = new District_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict_kpi);
                oDistrict_kpi.District = new District();
                oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oDistrict_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_Adv
        public Entity_kpi_user_access Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_Adv(long? ENTITY_KPI_USER_ACCESS_ID)
        {
            Entity_kpi_user_access oEntity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_KPI_USER_ACCESS_ID = ENTITY_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity_kpi_user_access = new Entity_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity_kpi_user_access);
                oEntity_kpi_user_access.Entity = new Entity();
                oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oEntity_kpi_user_access.User = new User();
                oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oEntity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_AREA_ID_Adv
        public Area Get_Area_By_AREA_ID_Adv(long? AREA_ID)
        {
            Area oArea = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_BY_AREA_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea = new Area();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea);
                oArea.District = new District();
                oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oArea.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oArea.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oArea.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oArea.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oArea.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oArea.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oArea.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oArea.Region = new Region();
                oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oArea.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oArea.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oArea.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oArea.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oArea.Top_level = new Top_level();
                oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oArea.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oArea;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_KPI_ID_Adv
        public Site_kpi Get_Site_kpi_By_SITE_KPI_ID_Adv(long? SITE_KPI_ID)
        {
            Site_kpi oSite_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_KPI_ID = SITE_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite_kpi = new Site_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite_kpi);
                oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oSite_kpi.Site = new Site();
                oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
            }
            return oSite_kpi;
        }
        #endregion
        #region Get_Setup_By_SETUP_ID_Adv
        public Setup Get_Setup_By_SETUP_ID_Adv(long? SETUP_ID)
        {
            Setup oSetup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_ID = SETUP_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSetup = new Setup();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSetup);
                oSetup.Setup_category = new Setup_category();
                oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_DESCRIPTION");
                oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_ENTRY_DATE");
                oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_LAST_UPDATE");
                oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SETUP_CATEGORY_IS_DELETED");
                oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_OWNER_ID");
            }
            return oSetup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_KPI_ID_Adv
        public Area_kpi Get_Area_kpi_By_AREA_KPI_ID_Adv(long? AREA_KPI_ID)
        {
            Area_kpi oArea_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_KPI_ID = AREA_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea_kpi = new Area_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea_kpi);
                oArea_kpi.Area = new Area();
                oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oArea_kpi;
        }
        #endregion
        #region Get_Data_source_By_DATA_SOURCE_ID_Adv
        public Data_source Get_Data_source_By_DATA_SOURCE_ID_Adv(int? DATA_SOURCE_ID)
        {
            Data_source oData_source = null;
            dynamic _params = new ExpandoObject();
            _params.DATA_SOURCE_ID = DATA_SOURCE_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_DATA_SOURCE_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oData_source = new Data_source();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oData_source);
                oData_source.Data_source_authentication = new Data_source_authentication();
                oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
            }
            return oData_source;
        }
        #endregion
        #region Get_District_By_DISTRICT_ID_Adv
        public District Get_District_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            District oDistrict = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_DISTRICT_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict = new District();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict);
                oDistrict.Region = new Region();
                oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oDistrict.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oDistrict.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oDistrict.Top_level = new Top_level();
                oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oDistrict;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public Organization_data_source_kpi Get_Organization_data_source_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            Organization_data_source_kpi oOrganization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oOrganization_data_source_kpi = new Organization_data_source_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oOrganization_data_source_kpi);
                oOrganization_data_source_kpi.Data_source = new Data_source();
                oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_DATA_SOURCE_ID");
                oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_NAME");
                oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_API_URL");
                oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_SOURCE_ENTRY_USER_ID");
                oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_ENTRY_DATE");
                oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_SOURCE_LAST_UPDATE");
                oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DATA_SOURCE_IS_DELETED");
                oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_SOURCE_OWNER_ID");
                oOrganization_data_source_kpi.Kpi = new Kpi();
                oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_KPI_ID");
                oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_DIMENSION_ID");
                oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_SETUP_CATEGORY_ID");
                oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(_query_response, "T_KPI_NAME");
                oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(_query_response, "T_KPI_UNIT");
                oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_KPI_TYPE_SETUP_ID");
                oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(_query_response, "T_KPI_HAS_CORRELATION");
                oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_TRENDLINE");
                oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_DECIMAL_VALUE");
                oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(_query_response, "T_KPI_HAS_SQM");
                oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_BY_SEVERITY");
                oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_ADDITIVE_DATA");
                oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(_query_response, "T_KPI_MINIMUM_VALUE");
                oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(_query_response, "T_KPI_MAXIMUM_VALUE");
                oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(_query_response, "T_KPI_LATEST_DATA_CREATION_DATE");
                oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_AUTO_GENERATE");
                oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_EXTERNAL");
                oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(_query_response, "T_KPI_HAS_ALERTS");
                oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_KPI_ENTRY_USER_ID");
                oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_KPI_ENTRY_DATE");
                oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_KPI_LAST_UPDATE");
                oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_KPI_IS_DELETED");
                oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_KPI_OWNER_ID");
                oOrganization_data_source_kpi.Organization = new Organization();
                oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_ORGANIZATION_ID");
                oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_NAME");
                oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATE_DELETED");
                oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ENTRY_USER_ID");
                oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ENTRY_DATE");
                oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LAST_UPDATE");
                oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_ACTIVE");
                oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_DELETED");
                oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_OWNER_ID");
            }
            return oOrganization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_FLOOR_ID_Adv
        public Floor Get_Floor_By_FLOOR_ID_Adv(long? FLOOR_ID)
        {
            Floor oFloor = null;
            dynamic _params = new ExpandoObject();
            _params.FLOOR_ID = FLOOR_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_FLOOR_BY_FLOOR_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oFloor = new Floor();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oFloor);
                oFloor.Entity = new Entity();
                oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oFloor.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oFloor.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
            }
            return oFloor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_Adv
        public District_kpi_user_access Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_Adv(long? DISTRICT_KPI_USER_ACCESS_ID)
        {
            District_kpi_user_access oDistrict_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_KPI_USER_ACCESS_ID = DISTRICT_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict_kpi_user_access = new District_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict_kpi_user_access);
                oDistrict_kpi_user_access.District = new District();
                oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oDistrict_kpi_user_access.User = new User();
                oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oDistrict_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_SPACE_ID_Adv
        public Space Get_Space_By_SPACE_ID_Adv(long? SPACE_ID)
        {
            Space oSpace = null;
            dynamic _params = new ExpandoObject();
            _params.SPACE_ID = SPACE_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SPACE_BY_SPACE_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSpace = new Space();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSpace);
                oSpace.Floor = new Floor();
                oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(_query_response, "T_FLOOR_FLOOR_ID");
                oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_FLOOR_ENTITY_ID");
                oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(_query_response, "T_FLOOR_FLOOR_NUMBER");
                oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_SHELL_GLTF_URL");
                oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_CLIPPED_GLTF_URL");
                oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_ADVANCED_GLTF_URL");
                oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_FLOOR_AREA");
                oSpace.Floor.UNIT = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_UNIT");
                oSpace.Floor.NAME = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_NAME");
                oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_FLOOR_ENTRY_USER_ID");
                oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_ENTRY_DATE");
                oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_FLOOR_LAST_UPDATE");
                oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_FLOOR_IS_DELETED");
                oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_FLOOR_OWNER_ID");
            }
            return oSpace;
        }
        #endregion
        #region Get_Site_By_SITE_ID_Adv
        public Site Get_Site_By_SITE_ID_Adv(long? SITE_ID)
        {
            Site oSite = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_BY_SITE_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite = new Site();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite);
                oSite.Area = new Area();
                oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oSite.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oSite.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oSite.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oSite.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oSite.District = new District();
                oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oSite.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oSite.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oSite.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oSite.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oSite.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oSite.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oSite.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oSite.Region = new Region();
                oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oSite.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oSite.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oSite.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oSite.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oSite.Top_level = new Top_level();
                oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oSite.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oSite;
        }
        #endregion
        #region Get_Kpi_By_KPI_ID_List_Adv
        public List<Kpi> Get_Kpi_By_KPI_ID_List_Adv(IEnumerable<int?> KPI_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.KPI_ID_LIST = string.Join(",", KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> AREA_KPI_USER_ACCESS_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (AREA_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_KPI_USER_ACCESS_ID_LIST = string.Join(",", AREA_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> SITE_KPI_USER_ACCESS_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (SITE_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_KPI_USER_ACCESS_ID_LIST = string.Join(",", SITE_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_ORGANIZATION_ID_List_Adv
        public List<Organization> Get_Organization_By_ORGANIZATION_ID_List_Adv(IEnumerable<int?> ORGANIZATION_ID_LIST)
        {
            List<Organization> oList_Organization = null;
            if (ORGANIZATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_ID_LIST = string.Join(",", ORGANIZATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_ORGANIZATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization = new List<Organization>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization oOrganization = new Organization();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                            oOrganization.Organization_type_setup = new Setup();
                            oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                            oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                            oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                            oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                            oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                            oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                            oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                            oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                            oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                            oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                            oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                            oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                            oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                            oList_Organization.Add(oOrganization);
                        }
                    }
                }
            }
            return oList_Organization;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_KPI_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_KPI_ID_List_Adv(IEnumerable<long?> ENTITY_KPI_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ENTITY_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_KPI_ID_LIST = string.Join(",", ENTITY_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_ENTITY_ID_List_Adv
        public List<Entity> Get_Entity_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_KPI_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_KPI_ID_List_Adv(IEnumerable<long?> DISTRICT_KPI_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (DISTRICT_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_KPI_ID_LIST = string.Join(",", DISTRICT_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> ENTITY_KPI_USER_ACCESS_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ENTITY_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_KPI_USER_ACCESS_ID_LIST = string.Join(",", ENTITY_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_AREA_ID_List_Adv
        public List<Area> Get_Area_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_KPI_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_KPI_ID_List_Adv(IEnumerable<long?> SITE_KPI_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (SITE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_KPI_ID_LIST = string.Join(",", SITE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Setup_By_SETUP_ID_List_Adv
        public List<Setup> Get_Setup_By_SETUP_ID_List_Adv(IEnumerable<long?> SETUP_ID_LIST)
        {
            List<Setup> oList_Setup = null;
            if (SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SETUP_ID_LIST = string.Join(",", SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Setup = new List<Setup>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Setup oSetup = new Setup();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                            oSetup.Setup_category = new Setup_category();
                            oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Setup.Add(oSetup);
                        }
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_KPI_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_KPI_ID_List_Adv(IEnumerable<long?> AREA_KPI_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (AREA_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_KPI_ID_LIST = string.Join(",", AREA_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Data_source_By_DATA_SOURCE_ID_List_Adv
        public List<Data_source> Get_Data_source_By_DATA_SOURCE_ID_List_Adv(IEnumerable<int?> DATA_SOURCE_ID_LIST)
        {
            List<Data_source> oList_Data_source = null;
            if (DATA_SOURCE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DATA_SOURCE_ID_LIST = string.Join(",", DATA_SOURCE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_DATA_SOURCE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Data_source = new List<Data_source>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Data_source oData_source = new Data_source();
                            Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                            oData_source.Data_source_authentication = new Data_source_authentication();
                            oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                            oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                            oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                            oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                            oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                            oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                            oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                            oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                            oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                            oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                            oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                            oList_Data_source.Add(oData_source);
                        }
                    }
                }
            }
            return oList_Data_source;
        }
        #endregion
        #region Get_District_By_DISTRICT_ID_List_Adv
        public List<District> Get_District_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District> oList_District = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                            oOrganization_data_source_kpi.Data_source = new Data_source();
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                            oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                            oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                            oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                            oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                            oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                            oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                            oOrganization_data_source_kpi.Kpi = new Kpi();
                            oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                            oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                            oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                            oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                            oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                            oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                            oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                            oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                            oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                            oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                            oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                            oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                            oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                            oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                            oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                            oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                            oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                            oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                            oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                            oOrganization_data_source_kpi.Organization = new Organization();
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                        }
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_FLOOR_ID_List_Adv
        public List<Floor> Get_Floor_By_FLOOR_ID_List_Adv(IEnumerable<long?> FLOOR_ID_LIST)
        {
            List<Floor> oList_Floor = null;
            if (FLOOR_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.FLOOR_ID_LIST = string.Join(",", FLOOR_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_FLOOR_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Floor = new List<Floor>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Floor oFloor = new Floor();
                            Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                            oFloor.Entity = new Entity();
                            oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oList_Floor.Add(oFloor);
                        }
                    }
                }
            }
            return oList_Floor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> DISTRICT_KPI_USER_ACCESS_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (DISTRICT_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_KPI_USER_ACCESS_ID_LIST = string.Join(",", DISTRICT_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_SPACE_ID_List_Adv
        public List<Space> Get_Space_By_SPACE_ID_List_Adv(IEnumerable<long?> SPACE_ID_LIST)
        {
            List<Space> oList_Space = null;
            if (SPACE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SPACE_ID_LIST = string.Join(",", SPACE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_SPACE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Space = new List<Space>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Space oSpace = new Space();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                            oSpace.Floor = new Floor();
                            oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                            oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                            oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                            oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                            oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                            oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                            oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                            oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                            oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                            oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                            oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                            oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                            oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                            oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                            oList_Space.Add(oSpace);
                        }
                    }
                }
            }
            return oList_Space;
        }
        #endregion
        #region Get_Site_By_SITE_ID_List_Adv
        public List<Site> Get_Site_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Kpi_By_OWNER_ID_Adv
        public List<Kpi> Get_Kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_DIMENSION_ID_Adv
        public List<Kpi> Get_Kpi_By_DIMENSION_ID_Adv(int? DIMENSION_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DIMENSION_ID = DIMENSION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_DIMENSION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_SETUP_CATEGORY_ID_Adv
        public List<Kpi> Get_Kpi_By_SETUP_CATEGORY_ID_Adv(int? SETUP_CATEGORY_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_CATEGORY_ID = SETUP_CATEGORY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_SETUP_CATEGORY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_MIN_DATA_LEVEL_SETUP_ID_Adv
        public List<Kpi> Get_Kpi_By_MIN_DATA_LEVEL_SETUP_ID_Adv(long? MIN_DATA_LEVEL_SETUP_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.MIN_DATA_LEVEL_SETUP_ID = MIN_DATA_LEVEL_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_MIN_DATA_LEVEL_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_MAX_DATA_LEVEL_SETUP_ID_Adv
        public List<Kpi> Get_Kpi_By_MAX_DATA_LEVEL_SETUP_ID_Adv(long? MAX_DATA_LEVEL_SETUP_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.MAX_DATA_LEVEL_SETUP_ID = MAX_DATA_LEVEL_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_MAX_DATA_LEVEL_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Kpi> Get_Kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_KPI_TYPE_SETUP_ID_Adv
        public List<Kpi> Get_Kpi_By_KPI_TYPE_SETUP_ID_Adv(long? KPI_TYPE_SETUP_ID)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.KPI_TYPE_SETUP_ID = KPI_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_KPI_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_OWNER_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_USER_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_OWNER_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_USER_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_OWNER_ID_IS_DELETED_Adv
        public List<Organization> Get_Organization_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Organization> oList_Organization = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization = new List<Organization>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization oOrganization = new Organization();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                        oOrganization.Organization_type_setup = new Setup();
                        oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                        oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                        oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                        oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                        oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                        oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                        oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                        oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                        oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                        oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                        oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                        oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                        oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                        oList_Organization.Add(oOrganization);
                    }
                }
            }
            return oList_Organization;
        }
        #endregion
        #region Get_Organization_By_OWNER_ID_Adv
        public List<Organization> Get_Organization_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Organization> oList_Organization = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization = new List<Organization>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization oOrganization = new Organization();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                        oOrganization.Organization_type_setup = new Setup();
                        oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                        oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                        oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                        oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                        oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                        oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                        oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                        oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                        oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                        oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                        oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                        oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                        oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                        oList_Organization.Add(oOrganization);
                    }
                }
            }
            return oList_Organization;
        }
        #endregion
        #region Get_Organization_By_ORGANIZATION_TYPE_SETUP_ID_Adv
        public List<Organization> Get_Organization_By_ORGANIZATION_TYPE_SETUP_ID_Adv(long? ORGANIZATION_TYPE_SETUP_ID)
        {
            List<Organization> oList_Organization = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_TYPE_SETUP_ID = ORGANIZATION_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_ORGANIZATION_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization = new List<Organization>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization oOrganization = new Organization();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                        oOrganization.Organization_type_setup = new Setup();
                        oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                        oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                        oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                        oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                        oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                        oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                        oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                        oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                        oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                        oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                        oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                        oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                        oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                        oList_Organization.Add(oOrganization);
                    }
                }
            }
            return oList_Organization;
        }
        #endregion
        #region Get_Entity_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_OWNER_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity> Get_Entity_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_OWNER_ID_Adv
        public List<Entity> Get_Entity_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_SITE_ID_Adv
        public List<Entity> Get_Entity_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_AREA_ID_Adv
        public List<Entity> Get_Entity_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_DISTRICT_ID_Adv
        public List<Entity> Get_Entity_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_REGION_ID_Adv
        public List<Entity> Get_Entity_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_TOP_LEVEL_ID_Adv
        public List<Entity> Get_Entity_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_ENTITY_TYPE_SETUP_ID_Adv
        public List<Entity> Get_Entity_By_ENTITY_TYPE_SETUP_ID_Adv(long? ENTITY_TYPE_SETUP_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_TYPE_SETUP_ID = ENTITY_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_OWNER_ID_Adv
        public List<District_kpi> Get_District_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<District_kpi> Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<District_kpi> Get_District_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_ID_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_OWNER_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_USER_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_OWNER_ID_IS_DELETED_Adv
        public List<Area> Get_Area_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_OWNER_ID_Adv
        public List<Area> Get_Area_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_DISTRICT_ID_Adv
        public List<Area> Get_Area_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_REGION_ID_Adv
        public List<Area> Get_Area_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_TOP_LEVEL_ID_Adv
        public List<Area> Get_Area_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Site_kpi_By_OWNER_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Site_kpi> Get_Site_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Setup_By_OWNER_ID_IS_DELETED_Adv
        public List<Setup> Get_Setup_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_Adv
        public List<Setup> Get_Setup_By_SETUP_CATEGORY_ID_Adv(int? SETUP_CATEGORY_ID)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_CATEGORY_ID = SETUP_CATEGORY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_VALUE_Adv
        public Setup Get_Setup_By_SETUP_CATEGORY_ID_VALUE_Adv(int? SETUP_CATEGORY_ID, string VALUE)
        {
            Setup oSetup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_CATEGORY_ID = SETUP_CATEGORY_ID;
            _params.VALUE = VALUE;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_VALUE_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSetup = new Setup();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSetup);
                oSetup.Setup_category = new Setup_category();
                oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_DESCRIPTION");
                oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_ENTRY_DATE");
                oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_LAST_UPDATE");
                oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SETUP_CATEGORY_IS_DELETED");
                oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_OWNER_ID");
            }
            return oSetup;
        }
        #endregion
        #region Get_Setup_By_OWNER_ID_Adv
        public List<Setup> Get_Setup_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Area_kpi> Get_Area_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_OWNER_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Data_source_By_OWNER_ID_Adv
        public List<Data_source> Get_Data_source_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Data_source> oList_Data_source = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Data_source = new List<Data_source>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Data_source oData_source = new Data_source();
                        Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                        oData_source.Data_source_authentication = new Data_source_authentication();
                        oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                        oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                        oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                        oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                        oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                        oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                        oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                        oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                        oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                        oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                        oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                        oList_Data_source.Add(oData_source);
                    }
                }
            }
            return oList_Data_source;
        }
        #endregion
        #region Get_Data_source_By_DATA_SOURCE_AUTHENTICATION_ID_Adv
        public List<Data_source> Get_Data_source_By_DATA_SOURCE_AUTHENTICATION_ID_Adv(int? DATA_SOURCE_AUTHENTICATION_ID)
        {
            List<Data_source> oList_Data_source = null;
            dynamic _params = new ExpandoObject();
            _params.DATA_SOURCE_AUTHENTICATION_ID = DATA_SOURCE_AUTHENTICATION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_DATA_SOURCE_AUTHENTICATION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Data_source = new List<Data_source>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Data_source oData_source = new Data_source();
                        Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                        oData_source.Data_source_authentication = new Data_source_authentication();
                        oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                        oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                        oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                        oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                        oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                        oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                        oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                        oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                        oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                        oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                        oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                        oList_Data_source.Add(oData_source);
                    }
                }
            }
            return oList_Data_source;
        }
        #endregion
        #region Get_Data_source_By_OWNER_ID_IS_DELETED_Adv
        public List<Data_source> Get_Data_source_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Data_source> oList_Data_source = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Data_source = new List<Data_source>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Data_source oData_source = new Data_source();
                        Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                        oData_source.Data_source_authentication = new Data_source_authentication();
                        oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                        oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                        oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                        oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                        oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                        oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                        oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                        oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                        oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                        oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                        oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                        oList_Data_source.Add(oData_source);
                    }
                }
            }
            return oList_Data_source;
        }
        #endregion
        #region Get_District_By_OWNER_ID_IS_DELETED_Adv
        public List<District> Get_District_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_OWNER_ID_Adv
        public List<District> Get_District_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_REGION_ID_Adv
        public List<District> Get_District_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_TOP_LEVEL_ID_Adv
        public List<District> Get_District_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_OWNER_ID_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_DATA_SOURCE_ID_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_DATA_SOURCE_ID_Adv(int? DATA_SOURCE_ID)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DATA_SOURCE_ID = DATA_SOURCE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_DATA_SOURCE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_KPI_ID_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_KPI_ID_Adv(int? KPI_ID)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.KPI_ID = KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_ORGANIZATION_ID_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_ORGANIZATION_ID_Adv(int? ORGANIZATION_ID)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_ID = ORGANIZATION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_ORGANIZATION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_OWNER_ID_IS_DELETED_Adv
        public List<Floor> Get_Floor_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Floor> oList_Floor = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Floor = new List<Floor>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Floor oFloor = new Floor();
                        Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                        oFloor.Entity = new Entity();
                        oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oList_Floor.Add(oFloor);
                    }
                }
            }
            return oList_Floor;
        }
        #endregion
        #region Get_Floor_By_OWNER_ID_Adv
        public List<Floor> Get_Floor_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Floor> oList_Floor = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Floor = new List<Floor>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Floor oFloor = new Floor();
                        Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                        oFloor.Entity = new Entity();
                        oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oList_Floor.Add(oFloor);
                    }
                }
            }
            return oList_Floor;
        }
        #endregion
        #region Get_Floor_By_ENTITY_ID_Adv
        public List<Floor> Get_Floor_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Floor> oList_Floor = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Floor = new List<Floor>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Floor oFloor = new Floor();
                        Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                        oFloor.Entity = new Entity();
                        oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oList_Floor.Add(oFloor);
                    }
                }
            }
            return oList_Floor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_OWNER_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_USER_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_OWNER_ID_Adv
        public List<Space> Get_Space_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Space> oList_Space = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Space = new List<Space>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Space oSpace = new Space();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                        oSpace.Floor = new Floor();
                        oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                        oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                        oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                        oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                        oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                        oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                        oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                        oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                        oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                        oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                        oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                        oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                        oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                        oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                        oList_Space.Add(oSpace);
                    }
                }
            }
            return oList_Space;
        }
        #endregion
        #region Get_Space_By_FLOOR_ID_Adv
        public List<Space> Get_Space_By_FLOOR_ID_Adv(long? FLOOR_ID)
        {
            List<Space> oList_Space = null;
            dynamic _params = new ExpandoObject();
            _params.FLOOR_ID = FLOOR_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_FLOOR_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Space = new List<Space>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Space oSpace = new Space();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                        oSpace.Floor = new Floor();
                        oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                        oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                        oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                        oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                        oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                        oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                        oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                        oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                        oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                        oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                        oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                        oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                        oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                        oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                        oList_Space.Add(oSpace);
                    }
                }
            }
            return oList_Space;
        }
        #endregion
        #region Get_Space_By_OWNER_ID_IS_DELETED_Adv
        public List<Space> Get_Space_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Space> oList_Space = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Space = new List<Space>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Space oSpace = new Space();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                        oSpace.Floor = new Floor();
                        oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                        oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                        oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                        oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                        oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                        oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                        oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                        oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                        oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                        oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                        oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                        oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                        oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                        oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                        oList_Space.Add(oSpace);
                    }
                }
            }
            return oList_Space;
        }
        #endregion
        #region Get_Site_By_OWNER_ID_IS_DELETED_Adv
        public List<Site> Get_Site_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_OWNER_ID_Adv
        public List<Site> Get_Site_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_AREA_ID_Adv
        public List<Site> Get_Site_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_DISTRICT_ID_Adv
        public List<Site> Get_Site_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_REGION_ID_Adv
        public List<Site> Get_Site_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_TOP_LEVEL_ID_Adv
        public List<Site> Get_Site_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Kpi_By_DIMENSION_ID_List_Adv
        public List<Kpi> Get_Kpi_By_DIMENSION_ID_List_Adv(IEnumerable<int?> DIMENSION_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (DIMENSION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DIMENSION_ID_LIST = string.Join(",", DIMENSION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_DIMENSION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_SETUP_CATEGORY_ID_List_Adv
        public List<Kpi> Get_Kpi_By_SETUP_CATEGORY_ID_List_Adv(IEnumerable<int?> SETUP_CATEGORY_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (SETUP_CATEGORY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SETUP_CATEGORY_ID_LIST = string.Join(",", SETUP_CATEGORY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_SETUP_CATEGORY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_MIN_DATA_LEVEL_SETUP_ID_List_Adv
        public List<Kpi> Get_Kpi_By_MIN_DATA_LEVEL_SETUP_ID_List_Adv(IEnumerable<long?> MIN_DATA_LEVEL_SETUP_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (MIN_DATA_LEVEL_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.MIN_DATA_LEVEL_SETUP_ID_LIST = string.Join(",", MIN_DATA_LEVEL_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_MIN_DATA_LEVEL_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_MAX_DATA_LEVEL_SETUP_ID_List_Adv
        public List<Kpi> Get_Kpi_By_MAX_DATA_LEVEL_SETUP_ID_List_Adv(IEnumerable<long?> MAX_DATA_LEVEL_SETUP_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (MAX_DATA_LEVEL_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.MAX_DATA_LEVEL_SETUP_ID_LIST = string.Join(",", MAX_DATA_LEVEL_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_MAX_DATA_LEVEL_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Kpi_By_KPI_TYPE_SETUP_ID_List_Adv
        public List<Kpi> Get_Kpi_By_KPI_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> KPI_TYPE_SETUP_ID_LIST)
        {
            List<Kpi> oList_Kpi = null;
            if (KPI_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.KPI_TYPE_SETUP_ID_LIST = string.Join(",", KPI_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_KPI_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Kpi = new List<Kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Kpi oKpi = new Kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                            oKpi.Dimension = new Dimension();
                            oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                            oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                            oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                            oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                            oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                            oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                            oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                            oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                            oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                            oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                            oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                            oKpi.Kpi_type_setup = new Setup();
                            oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                            oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                            oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                            oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                            oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                            oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                            oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                            oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                            oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                            oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                            oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                            oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                            oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                            oKpi.Max_data_level_setup = new Setup();
                            oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Min_data_level_setup = new Setup();
                            oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                            oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                            oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                            oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                            oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                            oKpi.Setup_category = new Setup_category();
                            oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Kpi.Add(oKpi);
                        }
                    }
                }
            }
            return oList_Kpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_USER_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_USER_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_ORGANIZATION_TYPE_SETUP_ID_List_Adv
        public List<Organization> Get_Organization_By_ORGANIZATION_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> ORGANIZATION_TYPE_SETUP_ID_LIST)
        {
            List<Organization> oList_Organization = null;
            if (ORGANIZATION_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_TYPE_SETUP_ID_LIST = string.Join(",", ORGANIZATION_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_ORGANIZATION_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization = new List<Organization>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization oOrganization = new Organization();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                            oOrganization.Organization_type_setup = new Setup();
                            oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                            oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                            oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                            oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                            oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                            oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                            oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                            oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                            oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                            oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                            oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                            oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                            oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                            oList_Organization.Add(oOrganization);
                        }
                    }
                }
            }
            return oList_Organization;
        }
        #endregion
        #region Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_SITE_ID_List_Adv
        public List<Entity> Get_Entity_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_AREA_ID_List_Adv
        public List<Entity> Get_Entity_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_DISTRICT_ID_List_Adv
        public List<Entity> Get_Entity_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_REGION_ID_List_Adv
        public List<Entity> Get_Entity_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_TOP_LEVEL_ID_List_Adv
        public List<Entity> Get_Entity_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_ENTITY_TYPE_SETUP_ID_List_Adv
        public List<Entity> Get_Entity_By_ENTITY_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> ENTITY_TYPE_SETUP_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (ENTITY_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_TYPE_SETUP_ID_LIST = string.Join(",", ENTITY_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_USER_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_DISTRICT_ID_List_Adv
        public List<Area> Get_Area_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_REGION_ID_List_Adv
        public List<Area> Get_Area_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_TOP_LEVEL_ID_List_Adv
        public List<Area> Get_Area_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_List_Adv
        public List<Setup> Get_Setup_By_SETUP_CATEGORY_ID_List_Adv(IEnumerable<int?> SETUP_CATEGORY_ID_LIST)
        {
            List<Setup> oList_Setup = null;
            if (SETUP_CATEGORY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SETUP_CATEGORY_ID_LIST = string.Join(",", SETUP_CATEGORY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Setup = new List<Setup>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Setup oSetup = new Setup();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                            oSetup.Setup_category = new Setup_category();
                            oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Setup.Add(oSetup);
                        }
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Data_source_By_DATA_SOURCE_AUTHENTICATION_ID_List_Adv
        public List<Data_source> Get_Data_source_By_DATA_SOURCE_AUTHENTICATION_ID_List_Adv(IEnumerable<int?> DATA_SOURCE_AUTHENTICATION_ID_LIST)
        {
            List<Data_source> oList_Data_source = null;
            if (DATA_SOURCE_AUTHENTICATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DATA_SOURCE_AUTHENTICATION_ID_LIST = string.Join(",", DATA_SOURCE_AUTHENTICATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_DATA_SOURCE_AUTHENTICATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Data_source = new List<Data_source>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Data_source oData_source = new Data_source();
                            Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                            oData_source.Data_source_authentication = new Data_source_authentication();
                            oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                            oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                            oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                            oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                            oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                            oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                            oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                            oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                            oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                            oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                            oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                            oList_Data_source.Add(oData_source);
                        }
                    }
                }
            }
            return oList_Data_source;
        }
        #endregion
        #region Get_District_By_REGION_ID_List_Adv
        public List<District> Get_District_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<District> oList_District = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_TOP_LEVEL_ID_List_Adv
        public List<District> Get_District_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<District> oList_District = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_DATA_SOURCE_ID_List_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_DATA_SOURCE_ID_List_Adv(IEnumerable<int?> DATA_SOURCE_ID_LIST)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            if (DATA_SOURCE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DATA_SOURCE_ID_LIST = string.Join(",", DATA_SOURCE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_DATA_SOURCE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                            oOrganization_data_source_kpi.Data_source = new Data_source();
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                            oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                            oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                            oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                            oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                            oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                            oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                            oOrganization_data_source_kpi.Kpi = new Kpi();
                            oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                            oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                            oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                            oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                            oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                            oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                            oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                            oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                            oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                            oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                            oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                            oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                            oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                            oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                            oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                            oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                            oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                            oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                            oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                            oOrganization_data_source_kpi.Organization = new Organization();
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                        }
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_KPI_ID_List_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_KPI_ID_List_Adv(IEnumerable<int?> KPI_ID_LIST)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            if (KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.KPI_ID_LIST = string.Join(",", KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                            oOrganization_data_source_kpi.Data_source = new Data_source();
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                            oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                            oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                            oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                            oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                            oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                            oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                            oOrganization_data_source_kpi.Kpi = new Kpi();
                            oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                            oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                            oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                            oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                            oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                            oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                            oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                            oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                            oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                            oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                            oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                            oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                            oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                            oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                            oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                            oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                            oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                            oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                            oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                            oOrganization_data_source_kpi.Organization = new Organization();
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                        }
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_ORGANIZATION_ID_List_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_ORGANIZATION_ID_List_Adv(IEnumerable<int?> ORGANIZATION_ID_LIST)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            if (ORGANIZATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_ID_LIST = string.Join(",", ORGANIZATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_ORGANIZATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                            oOrganization_data_source_kpi.Data_source = new Data_source();
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                            oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                            oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                            oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                            oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                            oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                            oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                            oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                            oOrganization_data_source_kpi.Kpi = new Kpi();
                            oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                            oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                            oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                            oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                            oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                            oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                            oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                            oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                            oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                            oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                            oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                            oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                            oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                            oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                            oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                            oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                            oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                            oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                            oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                            oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                            oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                            oOrganization_data_source_kpi.Organization = new Organization();
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                        }
                    }
                }
            }
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_ENTITY_ID_List_Adv
        public List<Floor> Get_Floor_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Floor> oList_Floor = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Floor = new List<Floor>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Floor oFloor = new Floor();
                            Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                            oFloor.Entity = new Entity();
                            oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oList_Floor.Add(oFloor);
                        }
                    }
                }
            }
            return oList_Floor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_USER_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_FLOOR_ID_List_Adv
        public List<Space> Get_Space_By_FLOOR_ID_List_Adv(IEnumerable<long?> FLOOR_ID_LIST)
        {
            List<Space> oList_Space = null;
            if (FLOOR_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.FLOOR_ID_LIST = string.Join(",", FLOOR_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_FLOOR_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Space = new List<Space>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Space oSpace = new Space();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                            oSpace.Floor = new Floor();
                            oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                            oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                            oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                            oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                            oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                            oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                            oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                            oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                            oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                            oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                            oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                            oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                            oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                            oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                            oList_Space.Add(oSpace);
                        }
                    }
                }
            }
            return oList_Space;
        }
        #endregion
        #region Get_Site_By_AREA_ID_List_Adv
        public List<Site> Get_Site_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_DISTRICT_ID_List_Adv
        public List<Site> Get_Site_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_REGION_ID_List_Adv
        public List<Site> Get_Site_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_TOP_LEVEL_ID_List_Adv
        public List<Site> Get_Site_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Kpi_By_Where_Adv
        public List<Kpi> Get_Kpi_By_Where_Adv(string NAME, string UNIT, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.UNIT = UNIT;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Kpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_Where_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_Where_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_Where_Adv
        public List<Organization> Get_Organization_By_Where_Adv(string ORGANIZATION_NAME, string ORGANIZATION_EMAIL, string ORGANIZATION_PHONE_NUMBER, string ORGANIZATION_ADDRESS, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization> oList_Organization = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_NAME = ORGANIZATION_NAME;
            _params.ORGANIZATION_EMAIL = ORGANIZATION_EMAIL;
            _params.ORGANIZATION_PHONE_NUMBER = ORGANIZATION_PHONE_NUMBER;
            _params.ORGANIZATION_ADDRESS = ORGANIZATION_ADDRESS;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization = new List<Organization>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization oOrganization = new Organization();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                        oOrganization.Organization_type_setup = new Setup();
                        oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                        oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                        oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                        oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                        oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                        oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                        oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                        oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                        oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                        oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                        oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                        oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                        oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                        oList_Organization.Add(oOrganization);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization;
        }
        #endregion
        #region Get_Entity_kpi_By_Where_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_Where_Adv
        public List<Entity> Get_Entity_By_Where_Adv(string NAME, string GLA_UNIT, string UNIT, string IMAGE_URL, string SOLID_GLTF_URL, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.GLA_UNIT = GLA_UNIT;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_Where_Adv
        public List<District_kpi> Get_District_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_Where_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_Where_Adv
        public List<Area> Get_Area_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area;
        }
        #endregion
        #region Get_Site_kpi_By_Where_Adv
        public List<Site_kpi> Get_Site_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Setup_By_Where_Adv
        public List<Setup> Get_Setup_By_Where_Adv(string VALUE, string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.VALUE = VALUE;
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_Where_Adv
        public List<Area_kpi> Get_Area_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Data_source_By_Where_Adv
        public List<Data_source> Get_Data_source_By_Where_Adv(string NAME, string API_URL, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Data_source> oList_Data_source = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.API_URL = API_URL;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Data_source = new List<Data_source>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Data_source oData_source = new Data_source();
                        Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                        oData_source.Data_source_authentication = new Data_source_authentication();
                        oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                        oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                        oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                        oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                        oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                        oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                        oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                        oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                        oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                        oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                        oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                        oList_Data_source.Add(oData_source);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Data_source;
        }
        #endregion
        #region Get_District_By_Where_Adv
        public List<District> Get_District_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_Where_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_Where_Adv
        public List<Floor> Get_Floor_By_Where_Adv(string SHELL_GLTF_URL, string CLIPPED_GLTF_URL, string ADVANCED_GLTF_URL, string UNIT, string NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Floor> oList_Floor = null;
            dynamic _params = new ExpandoObject();
            _params.SHELL_GLTF_URL = SHELL_GLTF_URL;
            _params.CLIPPED_GLTF_URL = CLIPPED_GLTF_URL;
            _params.ADVANCED_GLTF_URL = ADVANCED_GLTF_URL;
            _params.UNIT = UNIT;
            _params.NAME = NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Floor = new List<Floor>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Floor oFloor = new Floor();
                        Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                        oFloor.Entity = new Entity();
                        oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oList_Floor.Add(oFloor);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Floor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_Where_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_Where_Adv
        public List<Space> Get_Space_By_Where_Adv(string NAME, string UNIT, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Space> oList_Space = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.UNIT = UNIT;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Space = new List<Space>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Space oSpace = new Space();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                        oSpace.Floor = new Floor();
                        oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                        oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                        oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                        oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                        oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                        oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                        oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                        oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                        oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                        oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                        oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                        oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                        oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                        oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                        oList_Space.Add(oSpace);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Space;
        }
        #endregion
        #region Get_Site_By_Where_Adv
        public List<Site> Get_Site_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site;
        }
        #endregion
        #region Get_Kpi_By_Where_In_List_Adv
        public List<Kpi> Get_Kpi_By_Where_In_List_Adv(string NAME, string UNIT, IEnumerable<int?> DIMENSION_ID_LIST, IEnumerable<int?> SETUP_CATEGORY_ID_LIST, IEnumerable<long?> KPI_TYPE_SETUP_ID_LIST, IEnumerable<long?> MIN_DATA_LEVEL_SETUP_ID_LIST, IEnumerable<long?> MAX_DATA_LEVEL_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Kpi> oList_Kpi = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.UNIT = UNIT;
            _params.DIMENSION_ID_LIST = DIMENSION_ID_LIST != null ? string.Join(",", DIMENSION_ID_LIST) : "";
            _params.SETUP_CATEGORY_ID_LIST = SETUP_CATEGORY_ID_LIST != null ? string.Join(",", SETUP_CATEGORY_ID_LIST) : "";
            _params.KPI_TYPE_SETUP_ID_LIST = KPI_TYPE_SETUP_ID_LIST != null ? string.Join(",", KPI_TYPE_SETUP_ID_LIST) : "";
            _params.MIN_DATA_LEVEL_SETUP_ID_LIST = MIN_DATA_LEVEL_SETUP_ID_LIST != null ? string.Join(",", MIN_DATA_LEVEL_SETUP_ID_LIST) : "";
            _params.MAX_DATA_LEVEL_SETUP_ID_LIST = MAX_DATA_LEVEL_SETUP_ID_LIST != null ? string.Join(",", MAX_DATA_LEVEL_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Kpi = new List<Kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Kpi oKpi = new Kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oKpi);
                        oKpi.Dimension = new Dimension();
                        oKpi.Dimension.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ID");
                        oKpi.Dimension.NAME = Get_Data_Record_Value<string>(element, "T_DIMENSION_NAME");
                        oKpi.Dimension.DIMENSION_ICON = Get_Data_Record_Value<string>(element, "T_DIMENSION_DIMENSION_ICON");
                        oKpi.Dimension.DIMENSION_ORDER = Get_Data_Record_Value<int?>(element, "T_DIMENSION_DIMENSION_ORDER");
                        oKpi.Dimension.ICON_URL = Get_Data_Record_Value<string>(element, "T_DIMENSION_ICON_URL");
                        oKpi.Dimension.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LATEST_DATA_CREATION_DATE");
                        oKpi.Dimension.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DIMENSION_ENTRY_USER_ID");
                        oKpi.Dimension.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_ENTRY_DATE");
                        oKpi.Dimension.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DIMENSION_LAST_UPDATE");
                        oKpi.Dimension.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DIMENSION_IS_DELETED");
                        oKpi.Dimension.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DIMENSION_OWNER_ID");
                        oKpi.Kpi_type_setup = new Setup();
                        oKpi.Kpi_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_SETUP_ID");
                        oKpi.Kpi_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Kpi_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_SYSTEM");
                        oKpi.Kpi_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETEABLE");
                        oKpi.Kpi_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_UPDATEABLE");
                        oKpi.Kpi_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_DELETED");
                        oKpi.Kpi_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_KPI_TYPE_SETUP_IS_VISIBLE");
                        oKpi.Kpi_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_DISPLAY_ORDER");
                        oKpi.Kpi_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_VALUE");
                        oKpi.Kpi_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_DESCRIPTION");
                        oKpi.Kpi_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_TYPE_SETUP_ENTRY_USER_ID");
                        oKpi.Kpi_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_ENTRY_DATE");
                        oKpi.Kpi_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_TYPE_SETUP_LAST_UPDATE");
                        oKpi.Kpi_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_TYPE_SETUP_OWNER_ID");
                        oKpi.Max_data_level_setup = new Setup();
                        oKpi.Max_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Max_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Max_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Max_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Max_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Max_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Max_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MAX_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Max_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Max_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Max_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Max_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Max_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Max_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MAX_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Max_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MAX_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Min_data_level_setup = new Setup();
                        oKpi.Min_data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_ID");
                        oKpi.Min_data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oKpi.Min_data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oKpi.Min_data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oKpi.Min_data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oKpi.Min_data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_DELETED");
                        oKpi.Min_data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_MIN_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oKpi.Min_data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oKpi.Min_data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_VALUE");
                        oKpi.Min_data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_DESCRIPTION");
                        oKpi.Min_data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oKpi.Min_data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oKpi.Min_data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_MIN_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oKpi.Min_data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_MIN_DATA_LEVEL_SETUP_OWNER_ID");
                        oKpi.Setup_category = new Setup_category();
                        oKpi.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oKpi.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oKpi.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oKpi.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oKpi.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oKpi.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oKpi.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oKpi.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Kpi.Add(oKpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Kpi;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_Where_In_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> AREA_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_Where_In_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> SITE_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Organization_By_Where_In_List_Adv
        public List<Organization> Get_Organization_By_Where_In_List_Adv(string ORGANIZATION_NAME, string ORGANIZATION_EMAIL, string ORGANIZATION_PHONE_NUMBER, string ORGANIZATION_ADDRESS, IEnumerable<long?> ORGANIZATION_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization> oList_Organization = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_NAME = ORGANIZATION_NAME;
            _params.ORGANIZATION_EMAIL = ORGANIZATION_EMAIL;
            _params.ORGANIZATION_PHONE_NUMBER = ORGANIZATION_PHONE_NUMBER;
            _params.ORGANIZATION_ADDRESS = ORGANIZATION_ADDRESS;
            _params.ORGANIZATION_TYPE_SETUP_ID_LIST = ORGANIZATION_TYPE_SETUP_ID_LIST != null ? string.Join(",", ORGANIZATION_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization = new List<Organization>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization oOrganization = new Organization();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization);
                        oOrganization.Organization_type_setup = new Setup();
                        oOrganization.Organization_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_ID");
                        oOrganization.Organization_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oOrganization.Organization_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_SYSTEM");
                        oOrganization.Organization_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETEABLE");
                        oOrganization.Organization_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_UPDATEABLE");
                        oOrganization.Organization_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_DELETED");
                        oOrganization.Organization_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_TYPE_SETUP_IS_VISIBLE");
                        oOrganization.Organization_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_DISPLAY_ORDER");
                        oOrganization.Organization_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_VALUE");
                        oOrganization.Organization_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_DESCRIPTION");
                        oOrganization.Organization_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_USER_ID");
                        oOrganization.Organization_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_ENTRY_DATE");
                        oOrganization.Organization_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_TYPE_SETUP_LAST_UPDATE");
                        oOrganization.Organization_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TYPE_SETUP_OWNER_ID");
                        oList_Organization.Add(oOrganization);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization;
        }
        #endregion
        #region Get_Entity_kpi_By_Where_In_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> ENTITY_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_Where_In_List_Adv
        public List<Entity> Get_Entity_By_Where_In_List_Adv(string NAME, string GLA_UNIT, string UNIT, string IMAGE_URL, string SOLID_GLTF_URL, IEnumerable<long?> SITE_ID_LIST, IEnumerable<long?> AREA_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, IEnumerable<long?> ENTITY_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.GLA_UNIT = GLA_UNIT;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.ENTITY_TYPE_SETUP_ID_LIST = ENTITY_TYPE_SETUP_ID_LIST != null ? string.Join(",", ENTITY_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_Where_In_List_Adv
        public List<District_kpi> Get_District_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_Where_In_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> ENTITY_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Area_By_Where_In_List_Adv
        public List<Area> Get_Area_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area;
        }
        #endregion
        #region Get_Site_kpi_By_Where_In_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> SITE_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Setup_By_Where_In_List_Adv
        public List<Setup> Get_Setup_By_Where_In_List_Adv(string VALUE, string DESCRIPTION, IEnumerable<int?> SETUP_CATEGORY_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.VALUE = VALUE;
            _params.DESCRIPTION = DESCRIPTION;
            _params.SETUP_CATEGORY_ID_LIST = SETUP_CATEGORY_ID_LIST != null ? string.Join(",", SETUP_CATEGORY_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_Where_In_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> AREA_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Data_source_By_Where_In_List_Adv
        public List<Data_source> Get_Data_source_By_Where_In_List_Adv(string NAME, string API_URL, IEnumerable<int?> DATA_SOURCE_AUTHENTICATION_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Data_source> oList_Data_source = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.API_URL = API_URL;
            _params.DATA_SOURCE_AUTHENTICATION_ID_LIST = DATA_SOURCE_AUTHENTICATION_ID_LIST != null ? string.Join(",", DATA_SOURCE_AUTHENTICATION_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DATA_SOURCE_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Data_source = new List<Data_source>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Data_source oData_source = new Data_source();
                        Props.Copy_Prop_Values_From_Data_Record(element, oData_source);
                        oData_source.Data_source_authentication = new Data_source_authentication();
                        oData_source.Data_source_authentication.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_DATA_SOURCE_AUTHENTICATION_ID");
                        oData_source.Data_source_authentication.AUTH_ENDPOINT = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_ENDPOINT");
                        oData_source.Data_source_authentication.AUTH_TYPE_SETUP_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_AUTH_TYPE_SETUP_ID");
                        oData_source.Data_source_authentication.USERNAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_USERNAME");
                        oData_source.Data_source_authentication.PASSWORD = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_PASSWORD");
                        oData_source.Data_source_authentication.API_KEY = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_API_KEY");
                        oData_source.Data_source_authentication.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_USER_ID");
                        oData_source.Data_source_authentication.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_ENTRY_DATE");
                        oData_source.Data_source_authentication.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_AUTHENTICATION_LAST_UPDATE");
                        oData_source.Data_source_authentication.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_AUTHENTICATION_IS_DELETED");
                        oData_source.Data_source_authentication.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_AUTHENTICATION_OWNER_ID");
                        oList_Data_source.Add(oData_source);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Data_source;
        }
        #endregion
        #region Get_District_By_Where_In_List_Adv
        public List<District> Get_District_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District;
        }
        #endregion
        #region Get_Organization_data_source_kpi_By_Where_In_List_Adv
        public List<Organization_data_source_kpi> Get_Organization_data_source_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<int?> DATA_SOURCE_ID_LIST, IEnumerable<int?> KPI_ID_LIST, IEnumerable<int?> ORGANIZATION_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization_data_source_kpi> oList_Organization_data_source_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.DATA_SOURCE_ID_LIST = DATA_SOURCE_ID_LIST != null ? string.Join(",", DATA_SOURCE_ID_LIST) : "";
            _params.KPI_ID_LIST = KPI_ID_LIST != null ? string.Join(",", KPI_ID_LIST) : "";
            _params.ORGANIZATION_ID_LIST = ORGANIZATION_ID_LIST != null ? string.Join(",", ORGANIZATION_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_DATA_SOURCE_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_data_source_kpi = new List<Organization_data_source_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_data_source_kpi oOrganization_data_source_kpi = new Organization_data_source_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_data_source_kpi);
                        oOrganization_data_source_kpi.Data_source = new Data_source();
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_ID");
                        oOrganization_data_source_kpi.Data_source.NAME = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_NAME");
                        oOrganization_data_source_kpi.Data_source.API_URL = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_API_URL");
                        oOrganization_data_source_kpi.Data_source.MIN_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MIN_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.MAX_DWELL_TIME_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_MAX_DWELL_TIME_IN_MINUTES");
                        oOrganization_data_source_kpi.Data_source.DATA_SOURCE_AUTHENTICATION_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_DATA_SOURCE_AUTHENTICATION_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_SOURCE_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Data_source.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_ENTRY_DATE");
                        oOrganization_data_source_kpi.Data_source.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_SOURCE_LAST_UPDATE");
                        oOrganization_data_source_kpi.Data_source.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_SOURCE_IS_DELETED");
                        oOrganization_data_source_kpi.Data_source.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_SOURCE_OWNER_ID");
                        oOrganization_data_source_kpi.Kpi = new Kpi();
                        oOrganization_data_source_kpi.Kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_KPI_KPI_ID");
                        oOrganization_data_source_kpi.Kpi.DIMENSION_ID = Get_Data_Record_Value<int?>(element, "T_KPI_DIMENSION_ID");
                        oOrganization_data_source_kpi.Kpi.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_KPI_SETUP_CATEGORY_ID");
                        oOrganization_data_source_kpi.Kpi.NAME = Get_Data_Record_Value<string>(element, "T_KPI_NAME");
                        oOrganization_data_source_kpi.Kpi.UNIT = Get_Data_Record_Value<string>(element, "T_KPI_UNIT");
                        oOrganization_data_source_kpi.Kpi.KPI_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_KPI_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.HAS_CORRELATION = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_CORRELATION");
                        oOrganization_data_source_kpi.Kpi.IS_TRENDLINE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_TRENDLINE");
                        oOrganization_data_source_kpi.Kpi.IS_DECIMAL_VALUE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DECIMAL_VALUE");
                        oOrganization_data_source_kpi.Kpi.HAS_SQM = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_SQM");
                        oOrganization_data_source_kpi.Kpi.IS_BY_SEVERITY = Get_Data_Record_Value<bool>(element, "T_KPI_IS_BY_SEVERITY");
                        oOrganization_data_source_kpi.Kpi.IS_ADDITIVE_DATA = Get_Data_Record_Value<bool>(element, "T_KPI_IS_ADDITIVE_DATA");
                        oOrganization_data_source_kpi.Kpi.MINIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MINIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.MAXIMUM_VALUE = Get_Data_Record_Value<decimal?>(element, "T_KPI_MAXIMUM_VALUE");
                        oOrganization_data_source_kpi.Kpi.LATEST_DATA_CREATION_DATE = Get_Data_Record_Value<string>(element, "T_KPI_LATEST_DATA_CREATION_DATE");
                        oOrganization_data_source_kpi.Kpi.IS_AUTO_GENERATE = Get_Data_Record_Value<bool>(element, "T_KPI_IS_AUTO_GENERATE");
                        oOrganization_data_source_kpi.Kpi.MIN_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MIN_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.MAX_DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_KPI_MAX_DATA_LEVEL_SETUP_ID");
                        oOrganization_data_source_kpi.Kpi.IS_EXTERNAL = Get_Data_Record_Value<bool>(element, "T_KPI_IS_EXTERNAL");
                        oOrganization_data_source_kpi.Kpi.HAS_ALERTS = Get_Data_Record_Value<bool>(element, "T_KPI_HAS_ALERTS");
                        oOrganization_data_source_kpi.Kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_KPI_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_KPI_ENTRY_DATE");
                        oOrganization_data_source_kpi.Kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_KPI_LAST_UPDATE");
                        oOrganization_data_source_kpi.Kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_KPI_IS_DELETED");
                        oOrganization_data_source_kpi.Kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_KPI_OWNER_ID");
                        oOrganization_data_source_kpi.Organization = new Organization();
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oOrganization_data_source_kpi.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oOrganization_data_source_kpi.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oOrganization_data_source_kpi.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oOrganization_data_source_kpi.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oOrganization_data_source_kpi.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oOrganization_data_source_kpi.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oOrganization_data_source_kpi.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oOrganization_data_source_kpi.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oOrganization_data_source_kpi.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oOrganization_data_source_kpi.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oOrganization_data_source_kpi.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oList_Organization_data_source_kpi.Add(oOrganization_data_source_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization_data_source_kpi;
        }
        #endregion
        #region Get_Floor_By_Where_In_List_Adv
        public List<Floor> Get_Floor_By_Where_In_List_Adv(string SHELL_GLTF_URL, string CLIPPED_GLTF_URL, string ADVANCED_GLTF_URL, string UNIT, string NAME, IEnumerable<long?> ENTITY_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Floor> oList_Floor = null;
            dynamic _params = new ExpandoObject();
            _params.SHELL_GLTF_URL = SHELL_GLTF_URL;
            _params.CLIPPED_GLTF_URL = CLIPPED_GLTF_URL;
            _params.ADVANCED_GLTF_URL = ADVANCED_GLTF_URL;
            _params.UNIT = UNIT;
            _params.NAME = NAME;
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_FLOOR_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Floor = new List<Floor>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Floor oFloor = new Floor();
                        Props.Copy_Prop_Values_From_Data_Record(element, oFloor);
                        oFloor.Entity = new Entity();
                        oFloor.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oFloor.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oFloor.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oFloor.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oFloor.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oFloor.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oFloor.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oFloor.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oFloor.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oFloor.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oFloor.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oFloor.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oFloor.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oFloor.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oFloor.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oFloor.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oFloor.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oFloor.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oFloor.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oFloor.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oFloor.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oFloor.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oFloor.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oFloor.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oFloor.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oFloor.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oFloor.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oFloor.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oFloor.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oFloor.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oFloor.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oFloor.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oList_Floor.Add(oFloor);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Floor;
        }
        #endregion
        #region Get_District_kpi_user_access_By_Where_In_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_Space_By_Where_In_List_Adv
        public List<Space> Get_Space_By_Where_In_List_Adv(string NAME, string UNIT, IEnumerable<long?> FLOOR_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Space> oList_Space = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.UNIT = UNIT;
            _params.FLOOR_ID_LIST = FLOOR_ID_LIST != null ? string.Join(",", FLOOR_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SPACE_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Space = new List<Space>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Space oSpace = new Space();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSpace);
                        oSpace.Floor = new Floor();
                        oSpace.Floor.FLOOR_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_FLOOR_ID");
                        oSpace.Floor.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTITY_ID");
                        oSpace.Floor.FLOOR_NUMBER = Get_Data_Record_Value<int?>(element, "T_FLOOR_FLOOR_NUMBER");
                        oSpace.Floor.SHELL_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_SHELL_GLTF_URL");
                        oSpace.Floor.CLIPPED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_CLIPPED_GLTF_URL");
                        oSpace.Floor.ADVANCED_GLTF_URL = Get_Data_Record_Value<string>(element, "T_FLOOR_ADVANCED_GLTF_URL");
                        oSpace.Floor.AREA = Get_Data_Record_Value<decimal?>(element, "T_FLOOR_AREA");
                        oSpace.Floor.UNIT = Get_Data_Record_Value<string>(element, "T_FLOOR_UNIT");
                        oSpace.Floor.NAME = Get_Data_Record_Value<string>(element, "T_FLOOR_NAME");
                        oSpace.Floor.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_FLOOR_ENTRY_USER_ID");
                        oSpace.Floor.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_FLOOR_ENTRY_DATE");
                        oSpace.Floor.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_FLOOR_LAST_UPDATE");
                        oSpace.Floor.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_FLOOR_IS_DELETED");
                        oSpace.Floor.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_FLOOR_OWNER_ID");
                        oList_Space.Add(oSpace);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Space;
        }
        #endregion
        #region Get_Site_By_Where_In_List_Adv
        public List<Site> Get_Site_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> AREA_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site;
        }
        #endregion
    }
}
