using System;
using SmartrTools;
using System.Data;
using System.Linq;
using System.Dynamic;
using System.Collections.Generic;

namespace DALC
{
    public partial class MSSQL_DALC : DALC
    {
        #region Get_Site_view_By_SITE_VIEW_ID_Adv
        public Site_view Get_Site_view_By_SITE_VIEW_ID_Adv(long? SITE_VIEW_ID)
        {
            Site_view oSite_view = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_VIEW_ID = SITE_VIEW_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_SITE_VIEW_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite_view = new Site_view();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite_view);
                oSite_view.Site = new Site();
                oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oSite_view.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oSite_view.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
                oSite_view.View_type_setup = new Setup();
                oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_ID");
                oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETED");
                oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_VALUE");
                oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_OWNER_ID");
            }
            return oSite_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_REMOVED_EXTRUSION_ID_Adv
        public Removed_extrusion Get_Removed_extrusion_By_REMOVED_EXTRUSION_ID_Adv(int? REMOVED_EXTRUSION_ID)
        {
            Removed_extrusion oRemoved_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.REMOVED_EXTRUSION_ID = REMOVED_EXTRUSION_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_REMOVED_EXTRUSION_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oRemoved_extrusion = new Removed_extrusion();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oRemoved_extrusion);
                oRemoved_extrusion.Data_level_setup = new Setup();
                oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_LEVEL_SETUP_SETUP_ID");
                oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_DELETED");
                oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_VALUE");
                oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_OWNER_ID");
            }
            return oRemoved_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_ENTITY_VIEW_ID_Adv
        public Entity_view Get_Entity_view_By_ENTITY_VIEW_ID_Adv(long? ENTITY_VIEW_ID)
        {
            Entity_view oEntity_view = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_VIEW_ID = ENTITY_VIEW_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_ENTITY_VIEW_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity_view = new Entity_view();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity_view);
                oEntity_view.Entity = new Entity();
                oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
                oEntity_view.View_type_setup = new Setup();
                oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_ID");
                oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETED");
                oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_VALUE");
                oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_OWNER_ID");
            }
            return oEntity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_Adv
        public Area_kpi_user_access Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_Adv(long? AREA_KPI_USER_ACCESS_ID)
        {
            Area_kpi_user_access oArea_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_KPI_USER_ACCESS_ID = AREA_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea_kpi_user_access = new Area_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea_kpi_user_access);
                oArea_kpi_user_access.Area = new Area();
                oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oArea_kpi_user_access.User = new User();
                oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oArea_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_Adv
        public Site_kpi_user_access Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_Adv(long? SITE_KPI_USER_ACCESS_ID)
        {
            Site_kpi_user_access oSite_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_KPI_USER_ACCESS_ID = SITE_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite_kpi_user_access = new Site_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite_kpi_user_access);
                oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oSite_kpi_user_access.Site = new Site();
                oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
                oSite_kpi_user_access.User = new User();
                oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oSite_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_KPI_ID_Adv
        public Entity_kpi Get_Entity_kpi_By_ENTITY_KPI_ID_Adv(long? ENTITY_KPI_ID)
        {
            Entity_kpi oEntity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_KPI_ID = ENTITY_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity_kpi = new Entity_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity_kpi);
                oEntity_kpi.Entity = new Entity();
                oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
                oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oEntity_kpi;
        }
        #endregion
        #region Get_Entity_By_ENTITY_ID_Adv
        public Entity Get_Entity_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            Entity oEntity = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity = new Entity();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity);
                oEntity.Area = new Area();
                oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oEntity.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oEntity.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oEntity.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oEntity.District = new District();
                oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oEntity.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oEntity.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oEntity.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oEntity.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oEntity.Region = new Region();
                oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oEntity.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oEntity.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oEntity.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oEntity.Site = new Site();
                oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oEntity.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oEntity.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oEntity.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
                oEntity.Top_level = new Top_level();
                oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oEntity.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
                oEntity.Entity_type_setup = new Setup();
                oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_VALUE");
                oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_TYPE_SETUP_OWNER_ID");
            }
            return oEntity;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_KPI_ID_Adv
        public District_kpi Get_District_kpi_By_DISTRICT_KPI_ID_Adv(long? DISTRICT_KPI_ID)
        {
            District_kpi oDistrict_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_KPI_ID = DISTRICT_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict_kpi = new District_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict_kpi);
                oDistrict_kpi.District = new District();
                oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oDistrict_kpi;
        }
        #endregion
        #region Get_User_level_access_By_USER_LEVEL_ACCESS_ID_Adv
        public User_level_access Get_User_level_access_By_USER_LEVEL_ACCESS_ID_Adv(long? USER_LEVEL_ACCESS_ID)
        {
            User_level_access oUser_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_LEVEL_ACCESS_ID = USER_LEVEL_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_USER_LEVEL_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser_level_access = new User_level_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser_level_access);
                oUser_level_access.Organization_level_access = new Organization_level_access();
                oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                oUser_level_access.Data_level_setup = new Setup();
                oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_LEVEL_SETUP_SETUP_ID");
                oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_DELETED");
                oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_VALUE");
                oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DATA_LEVEL_SETUP_OWNER_ID");
                oUser_level_access.User = new User();
                oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oUser_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_USER_DISTRICTNEX_MODULE_ID_Adv
        public User_districtnex_module Get_User_districtnex_module_By_USER_DISTRICTNEX_MODULE_ID_Adv(long? USER_DISTRICTNEX_MODULE_ID)
        {
            User_districtnex_module oUser_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.USER_DISTRICTNEX_MODULE_ID = USER_DISTRICTNEX_MODULE_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_USER_DISTRICTNEX_MODULE_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser_districtnex_module = new User_districtnex_module();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser_districtnex_module);
                oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICTNEX_MODULE_NAME");
                oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICTNEX_MODULE_IS_DELETED");
                oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICTNEX_MODULE_OWNER_ID");
                oUser_districtnex_module.User = new User();
                oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oUser_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_Adv
        public Entity_kpi_user_access Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_Adv(long? ENTITY_KPI_USER_ACCESS_ID)
        {
            Entity_kpi_user_access oEntity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_KPI_USER_ACCESS_ID = ENTITY_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oEntity_kpi_user_access = new Entity_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oEntity_kpi_user_access);
                oEntity_kpi_user_access.Entity = new Entity();
                oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_ID");
                oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_SITE_ID");
                oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_AREA_ID");
                oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_DISTRICT_ID");
                oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_REGION_ID");
                oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_TOP_LEVEL_ID");
                oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_NAME");
                oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_NUMBER_OF_FLOORS");
                oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLA");
                oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_GLA_UNIT");
                oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_AREA");
                oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_UNIT");
                oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_SCALE");
                oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONX");
                oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONY");
                oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_ROTATIONZ");
                oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LATITUDE");
                oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_GLTF_LONGITUDE");
                oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LATITUDE");
                oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_CENTER_LONGITUDE");
                oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_RADIUS_IN_METERS");
                oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_IMAGE_URL");
                oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_SOLID_GLTF_URL");
                oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUL_ALT_X");
                oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Y");
                oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(_query_response, "T_ENTITY_POPUP_ALT_Z");
                oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ENTITY_ENTRY_USER_ID");
                oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_ENTRY_DATE");
                oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ENTITY_LAST_UPDATE");
                oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ENTITY_IS_DELETED");
                oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ENTITY_OWNER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oEntity_kpi_user_access.User = new User();
                oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oEntity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_DISTRICT_VIEW_ID_Adv
        public District_view Get_District_view_By_DISTRICT_VIEW_ID_Adv(long? DISTRICT_VIEW_ID)
        {
            District_view oDistrict_view = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_VIEW_ID = DISTRICT_VIEW_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_DISTRICT_VIEW_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict_view = new District_view();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict_view);
                oDistrict_view.District = new District();
                oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oDistrict_view.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oDistrict_view.View_type_setup = new Setup();
                oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_ID");
                oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETED");
                oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_VALUE");
                oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_OWNER_ID");
            }
            return oDistrict_view;
        }
        #endregion
        #region Get_Area_By_AREA_ID_Adv
        public Area Get_Area_By_AREA_ID_Adv(long? AREA_ID)
        {
            Area oArea = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_BY_AREA_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea = new Area();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea);
                oArea.District = new District();
                oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oArea.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oArea.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oArea.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oArea.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oArea.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oArea.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oArea.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oArea.Region = new Region();
                oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oArea.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oArea.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oArea.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oArea.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oArea.Top_level = new Top_level();
                oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oArea.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oArea;
        }
        #endregion
        #region Get_Area_view_By_AREA_VIEW_ID_Adv
        public Area_view Get_Area_view_By_AREA_VIEW_ID_Adv(long? AREA_VIEW_ID)
        {
            Area_view oArea_view = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_VIEW_ID = AREA_VIEW_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_AREA_VIEW_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea_view = new Area_view();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea_view);
                oArea_view.Area = new Area();
                oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oArea_view.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oArea_view.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oArea_view.View_type_setup = new Setup();
                oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_ID");
                oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETED");
                oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_VALUE");
                oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_OWNER_ID");
            }
            return oArea_view;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_KPI_ID_Adv
        public Site_kpi Get_Site_kpi_By_SITE_KPI_ID_Adv(long? SITE_KPI_ID)
        {
            Site_kpi oSite_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_KPI_ID = SITE_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite_kpi = new Site_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite_kpi);
                oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oSite_kpi.Site = new Site();
                oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_SITE_ID");
                oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_AREA_ID");
                oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_DISTRICT_ID");
                oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_REGION_ID");
                oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_TOP_LEVEL_ID");
                oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_NAME");
                oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOCATION");
                oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_AREA");
                oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(_query_response, "T_SITE_UNIT");
                oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_SCALE");
                oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONX");
                oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONY");
                oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_ROTATIONZ");
                oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LATITUDE");
                oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_GLTF_LONGITUDE");
                oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LATITUDE");
                oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_CENTER_LONGITUDE");
                oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_SITE_RADIUS_IN_METERS");
                oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_IMAGE_URL");
                oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_LOGO_URL");
                oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_SITE_SOLID_GLTF_URL");
                oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_AREA_COLOR");
                oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_SITE_BORDER_COLOR");
                oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_SITE_STUDY_ZONE_NAME");
                oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SITE_ENTRY_USER_ID");
                oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_ENTRY_DATE");
                oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SITE_LAST_UPDATE");
                oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SITE_IS_DELETED");
                oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SITE_OWNER_ID");
            }
            return oSite_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_ORGANIZATION_RELATION_ID_Adv
        public Organization_relation Get_Organization_relation_By_ORGANIZATION_RELATION_ID_Adv(int? ORGANIZATION_RELATION_ID)
        {
            Organization_relation oOrganization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_RELATION_ID = ORGANIZATION_RELATION_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_ORGANIZATION_RELATION_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oOrganization_relation = new Organization_relation();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oOrganization_relation);
                oOrganization_relation.User = new User();
                oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oOrganization_relation;
        }
        #endregion
        #region Get_Setup_By_SETUP_ID_Adv
        public Setup Get_Setup_By_SETUP_ID_Adv(long? SETUP_ID)
        {
            Setup oSetup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_ID = SETUP_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSetup = new Setup();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSetup);
                oSetup.Setup_category = new Setup_category();
                oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_DESCRIPTION");
                oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_ENTRY_DATE");
                oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_LAST_UPDATE");
                oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SETUP_CATEGORY_IS_DELETED");
                oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_OWNER_ID");
            }
            return oSetup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_KPI_ID_Adv
        public Area_kpi Get_Area_kpi_By_AREA_KPI_ID_Adv(long? AREA_KPI_ID)
        {
            Area_kpi oArea_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_KPI_ID = AREA_KPI_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_KPI_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oArea_kpi = new Area_kpi();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oArea_kpi);
                oArea_kpi.Area = new Area();
                oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
            }
            return oArea_kpi;
        }
        #endregion
        #region Get_Region_By_REGION_ID_Adv
        public Region Get_Region_By_REGION_ID_Adv(long? REGION_ID)
        {
            Region oRegion = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_REGION_BY_REGION_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oRegion = new Region();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oRegion);
                oRegion.Top_level = new Top_level();
                oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oRegion.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oRegion;
        }
        #endregion
        #region Get_District_By_DISTRICT_ID_Adv
        public District Get_District_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            District oDistrict = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_DISTRICT_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict = new District();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict);
                oDistrict.Region = new Region();
                oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oDistrict.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oDistrict.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oDistrict.Top_level = new Top_level();
                oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oDistrict;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_Adv
        public District_kpi_user_access Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_Adv(long? DISTRICT_KPI_USER_ACCESS_ID)
        {
            District_kpi_user_access oDistrict_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_KPI_USER_ACCESS_ID = DISTRICT_KPI_USER_ACCESS_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_KPI_USER_ACCESS_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oDistrict_kpi_user_access = new District_kpi_user_access();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oDistrict_kpi_user_access);
                oDistrict_kpi_user_access.District = new District();
                oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                oDistrict_kpi_user_access.User = new User();
                oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oDistrict_kpi_user_access;
        }
        #endregion
        #region Get_User_By_USER_ID_Adv
        public User Get_User_By_USER_ID_Adv(long? USER_ID)
        {
            User oUser = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_BY_USER_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser = new User();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser);
                oUser.Organization = new Organization();
                oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_ORGANIZATION_ID");
                oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_NAME");
                oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATE_DELETED");
                oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ENTRY_USER_ID");
                oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ENTRY_DATE");
                oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LAST_UPDATE");
                oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_ACTIVE");
                oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_DELETED");
                oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_OWNER_ID");
                oUser.User_type_setup = new Setup();
                oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_SETUP_ID");
                oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_SYSTEM");
                oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETED");
                oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_VISIBLE");
                oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_VALUE");
                oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_DESCRIPTION");
                oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_ENTRY_DATE");
                oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_LAST_UPDATE");
                oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_OWNER_ID");
            }
            return oUser;
        }
        #endregion
        #region Get_Site_By_SITE_ID_Adv
        public Site Get_Site_By_SITE_ID_Adv(long? SITE_ID)
        {
            Site oSite = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SITE_BY_SITE_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSite = new Site();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSite);
                oSite.Area = new Area();
                oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_AREA_ID");
                oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_DISTRICT_ID");
                oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_REGION_ID");
                oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_TOP_LEVEL_ID");
                oSite.Area.NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_NAME");
                oSite.Area.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOCATION");
                oSite.Area.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_AREA");
                oSite.Area.UNIT = Get_Data_Record_Value<string>(_query_response, "T_AREA_UNIT");
                oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_SCALE");
                oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONX");
                oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONY");
                oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_ROTATIONZ");
                oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LATITUDE");
                oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_GLTF_LONGITUDE");
                oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LATITUDE");
                oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_CENTER_LONGITUDE");
                oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_AREA_RADIUS_IN_METERS");
                oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_IMAGE_URL");
                oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_LOGO_URL");
                oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_AREA_SOLID_GLTF_URL");
                oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_AREA_COLOR");
                oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_AREA_BORDER_COLOR");
                oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_AREA_STUDY_ZONE_NAME");
                oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_AREA_ENTRY_USER_ID");
                oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_ENTRY_DATE");
                oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_AREA_LAST_UPDATE");
                oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_AREA_IS_DELETED");
                oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_AREA_OWNER_ID");
                oSite.District = new District();
                oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_DISTRICT_ID");
                oSite.District.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_REGION_ID");
                oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_TOP_LEVEL_ID");
                oSite.District.NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_NAME");
                oSite.District.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOCATION");
                oSite.District.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_AREA");
                oSite.District.UNIT = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_UNIT");
                oSite.District.SCALE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_SCALE");
                oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONX");
                oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONY");
                oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_ROTATIONZ");
                oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LATITUDE");
                oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_GLTF_LONGITUDE");
                oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LATITUDE");
                oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_CENTER_LONGITUDE");
                oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(_query_response, "T_DISTRICT_RADIUS_IN_METERS");
                oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_IMAGE_URL");
                oSite.District.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LOGO_URL");
                oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_SOLID_GLTF_URL");
                oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_AREA_COLOR");
                oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_BORDER_COLOR");
                oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_STUDY_ZONE_NAME");
                oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_DISTRICT_ENTRY_USER_ID");
                oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_ENTRY_DATE");
                oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_DISTRICT_LAST_UPDATE");
                oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_DISTRICT_IS_DELETED");
                oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_DISTRICT_OWNER_ID");
                oSite.Region = new Region();
                oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oSite.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oSite.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oSite.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oSite.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oSite.Top_level = new Top_level();
                oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_TOP_LEVEL_ID");
                oSite.Top_level.NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_NAME");
                oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOCATION");
                oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_TOP_LEVEL_AREA");
                oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_IMAGE_URL");
                oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LOGO_URL");
                oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_AREA_COLOR");
                oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_BORDER_COLOR");
                oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_LOW_THRESHOLD");
                oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_HIGH_THRESHOLD");
                oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_TOP_LEVEL_ENTRY_USER_ID");
                oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_ENTRY_DATE");
                oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_TOP_LEVEL_LAST_UPDATE");
                oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_TOP_LEVEL_IS_DELETED");
                oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_TOP_LEVEL_OWNER_ID");
            }
            return oSite;
        }
        #endregion
        #region Get_User_theme_By_USER_THEME_ID_Adv
        public User_theme Get_User_theme_By_USER_THEME_ID_Adv(int? USER_THEME_ID)
        {
            User_theme oUser_theme = null;
            dynamic _params = new ExpandoObject();
            _params.USER_THEME_ID = USER_THEME_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_USER_THEME_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser_theme = new User_theme();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser_theme);
                oUser_theme.Organization_theme = new Organization_theme();
                oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_THEME_THEME_NAME");
                oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_THEME_THEME_CLASS");
                oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_THEME_ENTRY_DATE");
                oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_THEME_LAST_UPDATE");
                oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_THEME_IS_DELETED");
                oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_THEME_OWNER_ID");
                oUser_theme.User = new User();
                oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_ID");
                oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_ORGANIZATION_ID");
                oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_USER_TYPE_SETUP_ID");
                oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_OWNER_ID");
                oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_FIRST_NAME");
                oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_NAME");
                oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(_query_response, "T_USER_USERNAME");
                oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(_query_response, "T_USER_PASSWORD");
                oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(_query_response, "T_USER_EMAIL");
                oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_USER_PHONE_NUMBER");
                oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_USER_IMAGE_URL");
                oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_ACTIVE");
                oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_DELETED");
                oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(_query_response, "T_USER_IS_RECEIVE_EMAIL");
                oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_USER_DATA_RETENTION_PERIOD");
                oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(_query_response, "T_USER_USER_ADMIN_WALKTHROUGH");
                oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_USER_DATE_DELETED");
                oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_ENTRY_DATE");
                oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_ENTRY_USER_ID");
                oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_LAST_UPDATE");
            }
            return oUser_theme;
        }
        #endregion
        #region Get_Region_view_By_REGION_VIEW_ID_Adv
        public Region_view Get_Region_view_By_REGION_VIEW_ID_Adv(long? REGION_VIEW_ID)
        {
            Region_view oRegion_view = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_VIEW_ID = REGION_VIEW_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_REGION_VIEW_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oRegion_view = new Region_view();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oRegion_view);
                oRegion_view.Region = new Region();
                oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_REGION_ID");
                oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_TOP_LEVEL_ID");
                oRegion_view.Region.NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_NAME");
                oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOCATION");
                oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(_query_response, "T_REGION_AREA");
                oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(_query_response, "T_REGION_UNIT");
                oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_IMAGE_URL");
                oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(_query_response, "T_REGION_LOGO_URL");
                oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_AREA_COLOR");
                oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(_query_response, "T_REGION_BORDER_COLOR");
                oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(_query_response, "T_REGION_STUDY_ZONE_NAME");
                oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_REGION_ENTRY_USER_ID");
                oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_ENTRY_DATE");
                oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_REGION_LAST_UPDATE");
                oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_REGION_IS_DELETED");
                oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_REGION_OWNER_ID");
                oRegion_view.View_type_setup = new Setup();
                oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_ID");
                oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_DELETED");
                oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_VALUE");
                oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_VIEW_TYPE_SETUP_OWNER_ID");
            }
            return oRegion_view;
        }
        #endregion
        #region Get_Site_view_By_SITE_VIEW_ID_List_Adv
        public List<Site_view> Get_Site_view_By_SITE_VIEW_ID_List_Adv(IEnumerable<long?> SITE_VIEW_ID_LIST)
        {
            List<Site_view> oList_Site_view = null;
            if (SITE_VIEW_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_VIEW_ID_LIST = string.Join(",", SITE_VIEW_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_SITE_VIEW_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_view = new List<Site_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_view oSite_view = new Site_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                            oSite_view.Site = new Site();
                            oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_view.View_type_setup = new Setup();
                            oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Site_view.Add(oSite_view);
                        }
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_REMOVED_EXTRUSION_ID_List_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_REMOVED_EXTRUSION_ID_List_Adv(IEnumerable<int?> REMOVED_EXTRUSION_ID_LIST)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            if (REMOVED_EXTRUSION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REMOVED_EXTRUSION_ID_LIST = string.Join(",", REMOVED_EXTRUSION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_REMOVED_EXTRUSION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Removed_extrusion = new List<Removed_extrusion>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                            oRemoved_extrusion.Data_level_setup = new Setup();
                            oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oList_Removed_extrusion.Add(oRemoved_extrusion);
                        }
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_ENTITY_VIEW_ID_List_Adv
        public List<Entity_view> Get_Entity_view_By_ENTITY_VIEW_ID_List_Adv(IEnumerable<long?> ENTITY_VIEW_ID_LIST)
        {
            List<Entity_view> oList_Entity_view = null;
            if (ENTITY_VIEW_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_VIEW_ID_LIST = string.Join(",", ENTITY_VIEW_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_ENTITY_VIEW_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_view = new List<Entity_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_view oEntity_view = new Entity_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                            oEntity_view.Entity = new Entity();
                            oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_view.View_type_setup = new Setup();
                            oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Entity_view.Add(oEntity_view);
                        }
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> AREA_KPI_USER_ACCESS_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (AREA_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_KPI_USER_ACCESS_ID_LIST = string.Join(",", AREA_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> SITE_KPI_USER_ACCESS_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (SITE_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_KPI_USER_ACCESS_ID_LIST = string.Join(",", SITE_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_KPI_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_KPI_ID_List_Adv(IEnumerable<long?> ENTITY_KPI_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ENTITY_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_KPI_ID_LIST = string.Join(",", ENTITY_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_ENTITY_ID_List_Adv
        public List<Entity> Get_Entity_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_KPI_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_KPI_ID_List_Adv(IEnumerable<long?> DISTRICT_KPI_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (DISTRICT_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_KPI_ID_LIST = string.Join(",", DISTRICT_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_User_level_access_By_USER_LEVEL_ACCESS_ID_List_Adv
        public List<User_level_access> Get_User_level_access_By_USER_LEVEL_ACCESS_ID_List_Adv(IEnumerable<long?> USER_LEVEL_ACCESS_ID_LIST)
        {
            List<User_level_access> oList_User_level_access = null;
            if (USER_LEVEL_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_LEVEL_ACCESS_ID_LIST = string.Join(",", USER_LEVEL_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_USER_LEVEL_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_level_access = new List<User_level_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_level_access oUser_level_access = new User_level_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                            oUser_level_access.Organization_level_access = new Organization_level_access();
                            oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                            oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                            oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                            oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                            oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                            oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                            oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                            oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                            oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                            oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                            oUser_level_access.Data_level_setup = new Setup();
                            oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oUser_level_access.User = new User();
                            oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_level_access.Add(oUser_level_access);
                        }
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_USER_DISTRICTNEX_MODULE_ID_List_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_USER_DISTRICTNEX_MODULE_ID_List_Adv(IEnumerable<long?> USER_DISTRICTNEX_MODULE_ID_LIST)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            if (USER_DISTRICTNEX_MODULE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_DISTRICTNEX_MODULE_ID_LIST = string.Join(",", USER_DISTRICTNEX_MODULE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_USER_DISTRICTNEX_MODULE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_districtnex_module = new List<User_districtnex_module>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                            oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                            oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                            oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                            oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                            oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                            oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                            oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                            oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                            oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                            oUser_districtnex_module.User = new User();
                            oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_districtnex_module.Add(oUser_districtnex_module);
                        }
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> ENTITY_KPI_USER_ACCESS_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ENTITY_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_KPI_USER_ACCESS_ID_LIST = string.Join(",", ENTITY_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_DISTRICT_VIEW_ID_List_Adv
        public List<District_view> Get_District_view_By_DISTRICT_VIEW_ID_List_Adv(IEnumerable<long?> DISTRICT_VIEW_ID_LIST)
        {
            List<District_view> oList_District_view = null;
            if (DISTRICT_VIEW_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_VIEW_ID_LIST = string.Join(",", DISTRICT_VIEW_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_DISTRICT_VIEW_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_view = new List<District_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_view oDistrict_view = new District_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                            oDistrict_view.District = new District();
                            oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_view.View_type_setup = new Setup();
                            oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_District_view.Add(oDistrict_view);
                        }
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_Area_By_AREA_ID_List_Adv
        public List<Area> Get_Area_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_view_By_AREA_VIEW_ID_List_Adv
        public List<Area_view> Get_Area_view_By_AREA_VIEW_ID_List_Adv(IEnumerable<long?> AREA_VIEW_ID_LIST)
        {
            List<Area_view> oList_Area_view = null;
            if (AREA_VIEW_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_VIEW_ID_LIST = string.Join(",", AREA_VIEW_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_AREA_VIEW_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_view = new List<Area_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_view oArea_view = new Area_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                            oArea_view.Area = new Area();
                            oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_view.View_type_setup = new Setup();
                            oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Area_view.Add(oArea_view);
                        }
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_KPI_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_KPI_ID_List_Adv(IEnumerable<long?> SITE_KPI_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (SITE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_KPI_ID_LIST = string.Join(",", SITE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_ORGANIZATION_RELATION_ID_List_Adv
        public List<Organization_relation> Get_Organization_relation_By_ORGANIZATION_RELATION_ID_List_Adv(IEnumerable<int?> ORGANIZATION_RELATION_ID_LIST)
        {
            List<Organization_relation> oList_Organization_relation = null;
            if (ORGANIZATION_RELATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_RELATION_ID_LIST = string.Join(",", ORGANIZATION_RELATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_ORGANIZATION_RELATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_relation = new List<Organization_relation>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_relation oOrganization_relation = new Organization_relation();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                            oOrganization_relation.User = new User();
                            oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Organization_relation.Add(oOrganization_relation);
                        }
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Setup_By_SETUP_ID_List_Adv
        public List<Setup> Get_Setup_By_SETUP_ID_List_Adv(IEnumerable<long?> SETUP_ID_LIST)
        {
            List<Setup> oList_Setup = null;
            if (SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SETUP_ID_LIST = string.Join(",", SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Setup = new List<Setup>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Setup oSetup = new Setup();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                            oSetup.Setup_category = new Setup_category();
                            oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Setup.Add(oSetup);
                        }
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_KPI_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_KPI_ID_List_Adv(IEnumerable<long?> AREA_KPI_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (AREA_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_KPI_ID_LIST = string.Join(",", AREA_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Region_By_REGION_ID_List_Adv
        public List<Region> Get_Region_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Region> oList_Region = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Region = new List<Region>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Region oRegion = new Region();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                            oRegion.Top_level = new Top_level();
                            oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Region.Add(oRegion);
                        }
                    }
                }
            }
            return oList_Region;
        }
        #endregion
        #region Get_District_By_DISTRICT_ID_List_Adv
        public List<District> Get_District_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District> oList_District = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_KPI_USER_ACCESS_ID_List_Adv(IEnumerable<long?> DISTRICT_KPI_USER_ACCESS_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (DISTRICT_KPI_USER_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_KPI_USER_ACCESS_ID_LIST = string.Join(",", DISTRICT_KPI_USER_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_KPI_USER_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_User_By_USER_ID_List_Adv
        public List<User> Get_User_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<User> oList_User = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User = new List<User>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User oUser = new User();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                            oUser.Organization = new Organization();
                            oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oUser.User_type_setup = new Setup();
                            oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                            oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                            oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                            oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                            oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                            oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                            oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                            oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                            oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                            oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                            oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                            oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                            oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                            oList_User.Add(oUser);
                        }
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_Site_By_SITE_ID_List_Adv
        public List<Site> Get_Site_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_User_theme_By_USER_THEME_ID_List_Adv
        public List<User_theme> Get_User_theme_By_USER_THEME_ID_List_Adv(IEnumerable<int?> USER_THEME_ID_LIST)
        {
            List<User_theme> oList_User_theme = null;
            if (USER_THEME_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_THEME_ID_LIST = string.Join(",", USER_THEME_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_USER_THEME_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_theme = new List<User_theme>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_theme oUser_theme = new User_theme();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                            oUser_theme.Organization_theme = new Organization_theme();
                            oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                            oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                            oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                            oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                            oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                            oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                            oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                            oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                            oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                            oUser_theme.User = new User();
                            oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_theme.Add(oUser_theme);
                        }
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_Region_view_By_REGION_VIEW_ID_List_Adv
        public List<Region_view> Get_Region_view_By_REGION_VIEW_ID_List_Adv(IEnumerable<long?> REGION_VIEW_ID_LIST)
        {
            List<Region_view> oList_Region_view = null;
            if (REGION_VIEW_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_VIEW_ID_LIST = string.Join(",", REGION_VIEW_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_REGION_VIEW_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Region_view = new List<Region_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Region_view oRegion_view = new Region_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                            oRegion_view.Region = new Region();
                            oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oRegion_view.View_type_setup = new Setup();
                            oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Region_view.Add(oRegion_view);
                        }
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Site_view_By_OWNER_ID_IS_DELETED_Adv
        public List<Site_view> Get_Site_view_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Site_view_By_VIEW_TYPE_SETUP_ID_Adv
        public List<Site_view> Get_Site_view_By_VIEW_TYPE_SETUP_ID_Adv(long? VIEW_TYPE_SETUP_ID)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.VIEW_TYPE_SETUP_ID = VIEW_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_VIEW_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Site_view_By_OWNER_ID_Adv
        public List<Site_view> Get_Site_view_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Site_view_By_SITE_ID_Adv
        public List<Site_view> Get_Site_view_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_OWNER_ID_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Removed_extrusion_By_LEVEL_ID_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_LEVEL_ID_Adv(long? LEVEL_ID)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.LEVEL_ID = LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Removed_extrusion_By_DATA_LEVEL_SETUP_ID_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_DATA_LEVEL_SETUP_ID_Adv(long? DATA_LEVEL_SETUP_ID)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.DATA_LEVEL_SETUP_ID = DATA_LEVEL_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_DATA_LEVEL_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Removed_extrusion_By_OWNER_ID_IS_DELETED_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_OWNER_ID_Adv
        public List<Entity_view> Get_Entity_view_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Entity_view_By_VIEW_TYPE_SETUP_ID_Adv
        public List<Entity_view> Get_Entity_view_By_VIEW_TYPE_SETUP_ID_Adv(long? VIEW_TYPE_SETUP_ID)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.VIEW_TYPE_SETUP_ID = VIEW_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_VIEW_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Entity_view_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity_view> Get_Entity_view_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Entity_view_By_ENTITY_ID_Adv
        public List<Entity_view> Get_Entity_view_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_OWNER_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_USER_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_OWNER_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_USER_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_OWNER_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_ID_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity> Get_Entity_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_OWNER_ID_Adv
        public List<Entity> Get_Entity_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_SITE_ID_Adv
        public List<Entity> Get_Entity_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_AREA_ID_Adv
        public List<Entity> Get_Entity_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_DISTRICT_ID_Adv
        public List<Entity> Get_Entity_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_REGION_ID_Adv
        public List<Entity> Get_Entity_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_TOP_LEVEL_ID_Adv
        public List<Entity> Get_Entity_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_ENTITY_TYPE_SETUP_ID_Adv
        public List<Entity> Get_Entity_By_ENTITY_TYPE_SETUP_ID_Adv(long? ENTITY_TYPE_SETUP_ID)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_TYPE_SETUP_ID = ENTITY_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_OWNER_ID_Adv
        public List<District_kpi> Get_District_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<District_kpi> Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<District_kpi> Get_District_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_ID_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_User_level_access_By_OWNER_ID_Adv
        public List<User_level_access> Get_User_level_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_ORGANIZATION_LEVEL_ACCESS_ID_Adv
        public List<User_level_access> Get_User_level_access_By_ORGANIZATION_LEVEL_ACCESS_ID_Adv(long? ORGANIZATION_LEVEL_ACCESS_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_LEVEL_ACCESS_ID = ORGANIZATION_LEVEL_ACCESS_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_ORGANIZATION_LEVEL_ACCESS_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_USER_ID_Adv
        public List<User_level_access> Get_User_level_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_LEVEL_ID_Adv
        public List<User_level_access> Get_User_level_access_By_LEVEL_ID_Adv(long? LEVEL_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.LEVEL_ID = LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_DATA_LEVEL_SETUP_ID_Adv
        public List<User_level_access> Get_User_level_access_By_DATA_LEVEL_SETUP_ID_Adv(long? DATA_LEVEL_SETUP_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.DATA_LEVEL_SETUP_ID = DATA_LEVEL_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_DATA_LEVEL_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_OWNER_ID_IS_DELETED_Adv
        public List<User_level_access> Get_User_level_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_USER_ID_DATA_LEVEL_SETUP_ID_Adv
        public List<User_level_access> Get_User_level_access_By_USER_ID_DATA_LEVEL_SETUP_ID_Adv(long? USER_ID, long? DATA_LEVEL_SETUP_ID)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            _params.DATA_LEVEL_SETUP_ID = DATA_LEVEL_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_USER_ID_DATA_LEVEL_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_OWNER_ID_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_User_districtnex_module_By_USER_ID_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_USER_ID_Adv(long? USER_ID)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_User_districtnex_module_By_DISTRICTNEX_MODULE_ID_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_DISTRICTNEX_MODULE_ID_Adv(int? DISTRICTNEX_MODULE_ID)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICTNEX_MODULE_ID = DISTRICTNEX_MODULE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_DISTRICTNEX_MODULE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_User_districtnex_module_By_OWNER_ID_IS_DELETED_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_OWNER_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_USER_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_ID_Adv(long? ENTITY_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ENTITY_ID = ENTITY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_OWNER_ID_Adv
        public List<District_view> Get_District_view_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_District_view_By_DISTRICT_ID_Adv
        public List<District_view> Get_District_view_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_District_view_By_VIEW_TYPE_SETUP_ID_Adv
        public List<District_view> Get_District_view_By_VIEW_TYPE_SETUP_ID_Adv(long? VIEW_TYPE_SETUP_ID)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.VIEW_TYPE_SETUP_ID = VIEW_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_VIEW_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_District_view_By_OWNER_ID_IS_DELETED_Adv
        public List<District_view> Get_District_view_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_Area_By_OWNER_ID_IS_DELETED_Adv
        public List<Area> Get_Area_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_OWNER_ID_Adv
        public List<Area> Get_Area_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_DISTRICT_ID_Adv
        public List<Area> Get_Area_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_REGION_ID_Adv
        public List<Area> Get_Area_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_TOP_LEVEL_ID_Adv
        public List<Area> Get_Area_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_view_By_OWNER_ID_Adv
        public List<Area_view> Get_Area_view_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Area_view_By_AREA_ID_Adv
        public List<Area_view> Get_Area_view_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Area_view_By_VIEW_TYPE_SETUP_ID_Adv
        public List<Area_view> Get_Area_view_By_VIEW_TYPE_SETUP_ID_Adv(long? VIEW_TYPE_SETUP_ID)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.VIEW_TYPE_SETUP_ID = VIEW_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_VIEW_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Area_view_By_OWNER_ID_IS_DELETED_Adv
        public List<Area_view> Get_Area_view_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Site_kpi_By_OWNER_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Site_kpi> Get_Site_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_ID_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_ID_Adv(long? SITE_ID)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.SITE_ID = SITE_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_OWNER_ID_IS_DELETED_Adv
        public List<Organization_relation> Get_Organization_relation_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_OWNER_ID_Adv
        public List<Organization_relation> Get_Organization_relation_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_PARENT_ORGANIZATION_ID_Adv
        public List<Organization_relation> Get_Organization_relation_By_PARENT_ORGANIZATION_ID_Adv(int? PARENT_ORGANIZATION_ID)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.PARENT_ORGANIZATION_ID = PARENT_ORGANIZATION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_PARENT_ORGANIZATION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_CHILD_ORGANIZATION_ID_Adv
        public List<Organization_relation> Get_Organization_relation_By_CHILD_ORGANIZATION_ID_Adv(int? CHILD_ORGANIZATION_ID)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.CHILD_ORGANIZATION_ID = CHILD_ORGANIZATION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_CHILD_ORGANIZATION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_USER_ID_Adv
        public List<Organization_relation> Get_Organization_relation_By_USER_ID_Adv(long? USER_ID)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Setup_By_OWNER_ID_IS_DELETED_Adv
        public List<Setup> Get_Setup_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_Adv
        public List<Setup> Get_Setup_By_SETUP_CATEGORY_ID_Adv(int? SETUP_CATEGORY_ID)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_CATEGORY_ID = SETUP_CATEGORY_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_VALUE_Adv
        public Setup Get_Setup_By_SETUP_CATEGORY_ID_VALUE_Adv(int? SETUP_CATEGORY_ID, string VALUE)
        {
            Setup oSetup = null;
            dynamic _params = new ExpandoObject();
            _params.SETUP_CATEGORY_ID = SETUP_CATEGORY_ID;
            _params.VALUE = VALUE;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_VALUE_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oSetup = new Setup();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oSetup);
                oSetup.Setup_category = new Setup_category();
                oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_DESCRIPTION");
                oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_ENTRY_DATE");
                oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_SETUP_CATEGORY_LAST_UPDATE");
                oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_SETUP_CATEGORY_IS_DELETED");
                oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_SETUP_CATEGORY_OWNER_ID");
            }
            return oSetup;
        }
        #endregion
        #region Get_Setup_By_OWNER_ID_Adv
        public List<Setup> Get_Setup_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_OWNER_ID_IS_DELETED_Adv
        public List<Area_kpi> Get_Area_kpi_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_OWNER_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<Area_kpi> Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Region_By_OWNER_ID_IS_DELETED_Adv
        public List<Region> Get_Region_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Region> oList_Region = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Region = new List<Region>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region oRegion = new Region();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                        oRegion.Top_level = new Top_level();
                        oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Region.Add(oRegion);
                    }
                }
            }
            return oList_Region;
        }
        #endregion
        #region Get_Region_By_OWNER_ID_Adv
        public List<Region> Get_Region_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Region> oList_Region = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Region = new List<Region>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region oRegion = new Region();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                        oRegion.Top_level = new Top_level();
                        oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Region.Add(oRegion);
                    }
                }
            }
            return oList_Region;
        }
        #endregion
        #region Get_Region_By_TOP_LEVEL_ID_Adv
        public List<Region> Get_Region_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Region> oList_Region = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Region = new List<Region>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region oRegion = new Region();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                        oRegion.Top_level = new Top_level();
                        oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Region.Add(oRegion);
                    }
                }
            }
            return oList_Region;
        }
        #endregion
        #region Get_District_By_OWNER_ID_IS_DELETED_Adv
        public List<District> Get_District_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_OWNER_ID_Adv
        public List<District> Get_District_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_REGION_ID_Adv
        public List<District> Get_District_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_TOP_LEVEL_ID_Adv
        public List<District> Get_District_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_OWNER_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_USER_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_USER_ID_Adv(long? USER_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_Adv(int? ORGANIZATION_DATA_SOURCE_KPI_ID)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID = ORGANIZATION_DATA_SOURCE_KPI_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_User_By_OWNER_ID_IS_DELETED_Adv
        public List<User> Get_User_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_USERNAME_OWNER_ID_Adv
        public User Get_User_By_USERNAME_OWNER_ID_Adv(string USERNAME, int? OWNER_ID)
        {
            User oUser = null;
            dynamic _params = new ExpandoObject();
            _params.USERNAME = USERNAME;
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_BY_USERNAME_OWNER_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser = new User();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser);
                oUser.Organization = new Organization();
                oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_ORGANIZATION_ID");
                oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_NAME");
                oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATE_DELETED");
                oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ENTRY_USER_ID");
                oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ENTRY_DATE");
                oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LAST_UPDATE");
                oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_ACTIVE");
                oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_DELETED");
                oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_OWNER_ID");
                oUser.User_type_setup = new Setup();
                oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_SETUP_ID");
                oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_SYSTEM");
                oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETED");
                oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_VISIBLE");
                oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_VALUE");
                oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_DESCRIPTION");
                oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_ENTRY_DATE");
                oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_LAST_UPDATE");
                oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_OWNER_ID");
            }
            return oUser;
        }
        #endregion
        #region Get_User_By_EMAIL_OWNER_ID_Adv
        public User Get_User_By_EMAIL_OWNER_ID_Adv(string EMAIL, int? OWNER_ID)
        {
            User oUser = null;
            dynamic _params = new ExpandoObject();
            _params.EMAIL = EMAIL;
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> query = ExecuteSelectQuery("UPG_GET_USER_BY_EMAIL_OWNER_ID_ADV", _params);
            var _query_response = query.FirstOrDefault();
            if (_query_response != null)
            {
                oUser = new User();
                Props.Copy_Prop_Values_From_Data_Record(_query_response, oUser);
                oUser.Organization = new Organization();
                oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_ORGANIZATION_ID");
                oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_NAME");
                oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_DATE_DELETED");
                oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_ORGANIZATION_ENTRY_USER_ID");
                oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_ENTRY_DATE");
                oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_ORGANIZATION_LAST_UPDATE");
                oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_ACTIVE");
                oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_ORGANIZATION_IS_DELETED");
                oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_ORGANIZATION_OWNER_ID");
                oUser.User_type_setup = new Setup();
                oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_SETUP_ID");
                oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_SYSTEM");
                oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_DELETED");
                oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(_query_response, "T_USER_TYPE_SETUP_IS_VISIBLE");
                oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_VALUE");
                oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_DESCRIPTION");
                oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(_query_response, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_ENTRY_DATE");
                oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(_query_response, "T_USER_TYPE_SETUP_LAST_UPDATE");
                oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(_query_response, "T_USER_TYPE_SETUP_OWNER_ID");
            }
            return oUser;
        }
        #endregion
        #region Get_User_By_USER_TYPE_SETUP_ID_Adv
        public List<User> Get_User_By_USER_TYPE_SETUP_ID_Adv(long? USER_TYPE_SETUP_ID)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.USER_TYPE_SETUP_ID = USER_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_USER_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_ORGANIZATION_ID_Adv
        public List<User> Get_User_By_ORGANIZATION_ID_Adv(int? ORGANIZATION_ID)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_ID = ORGANIZATION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_ORGANIZATION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_OWNER_ID_Adv
        public List<User> Get_User_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_IS_RECEIVE_EMAIL_Adv
        public List<User> Get_User_By_IS_RECEIVE_EMAIL_Adv(bool IS_RECEIVE_EMAIL)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.IS_RECEIVE_EMAIL = IS_RECEIVE_EMAIL;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_IS_RECEIVE_EMAIL_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_IS_DELETED_Adv
        public List<User> Get_User_By_IS_DELETED_Adv(bool IS_DELETED)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_OWNER_ID_IS_ACTIVE_IS_DELETED_Adv
        public List<User> Get_User_By_OWNER_ID_IS_ACTIVE_IS_DELETED_Adv(int? OWNER_ID, bool IS_ACTIVE, bool IS_DELETED)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_ACTIVE = IS_ACTIVE;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_OWNER_ID_IS_ACTIVE_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_Site_By_OWNER_ID_IS_DELETED_Adv
        public List<Site> Get_Site_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_OWNER_ID_Adv
        public List<Site> Get_Site_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_AREA_ID_Adv
        public List<Site> Get_Site_By_AREA_ID_Adv(long? AREA_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.AREA_ID = AREA_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_AREA_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_DISTRICT_ID_Adv
        public List<Site> Get_Site_By_DISTRICT_ID_Adv(long? DISTRICT_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.DISTRICT_ID = DISTRICT_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_DISTRICT_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_REGION_ID_Adv
        public List<Site> Get_Site_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_TOP_LEVEL_ID_Adv
        public List<Site> Get_Site_By_TOP_LEVEL_ID_Adv(long? TOP_LEVEL_ID)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.TOP_LEVEL_ID = TOP_LEVEL_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_TOP_LEVEL_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_User_theme_By_OWNER_ID_Adv
        public List<User_theme> Get_User_theme_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_User_theme_By_USER_ID_Adv
        public List<User_theme> Get_User_theme_By_USER_ID_Adv(long? USER_ID)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.USER_ID = USER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_USER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_User_theme_By_ORGANIZATION_THEME_ID_Adv
        public List<User_theme> Get_User_theme_By_ORGANIZATION_THEME_ID_Adv(int? ORGANIZATION_THEME_ID)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.ORGANIZATION_THEME_ID = ORGANIZATION_THEME_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_ORGANIZATION_THEME_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_User_theme_By_OWNER_ID_IS_DELETED_Adv
        public List<User_theme> Get_User_theme_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_Region_view_By_OWNER_ID_Adv
        public List<Region_view> Get_Region_view_By_OWNER_ID_Adv(int? OWNER_ID)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_OWNER_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Region_view_By_REGION_ID_Adv
        public List<Region_view> Get_Region_view_By_REGION_ID_Adv(long? REGION_ID)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.REGION_ID = REGION_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_REGION_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Region_view_By_VIEW_TYPE_SETUP_ID_Adv
        public List<Region_view> Get_Region_view_By_VIEW_TYPE_SETUP_ID_Adv(long? VIEW_TYPE_SETUP_ID)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.VIEW_TYPE_SETUP_ID = VIEW_TYPE_SETUP_ID;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_VIEW_TYPE_SETUP_ID_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Region_view_By_OWNER_ID_IS_DELETED_Adv
        public List<Region_view> Get_Region_view_By_OWNER_ID_IS_DELETED_Adv(int? OWNER_ID, bool IS_DELETED)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.OWNER_ID = OWNER_ID;
            _params.IS_DELETED = IS_DELETED;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_OWNER_ID_IS_DELETED_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Site_view_By_VIEW_TYPE_SETUP_ID_List_Adv
        public List<Site_view> Get_Site_view_By_VIEW_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST)
        {
            List<Site_view> oList_Site_view = null;
            if (VIEW_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.VIEW_TYPE_SETUP_ID_LIST = string.Join(",", VIEW_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_VIEW_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_view = new List<Site_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_view oSite_view = new Site_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                            oSite_view.Site = new Site();
                            oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_view.View_type_setup = new Setup();
                            oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Site_view.Add(oSite_view);
                        }
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Site_view_By_SITE_ID_List_Adv
        public List<Site_view> Get_Site_view_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site_view> oList_Site_view = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_view = new List<Site_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_view oSite_view = new Site_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                            oSite_view.Site = new Site();
                            oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_view.View_type_setup = new Setup();
                            oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Site_view.Add(oSite_view);
                        }
                    }
                }
            }
            return oList_Site_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_LEVEL_ID_List_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_LEVEL_ID_List_Adv(IEnumerable<long?> LEVEL_ID_LIST)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            if (LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.LEVEL_ID_LIST = string.Join(",", LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Removed_extrusion = new List<Removed_extrusion>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                            oRemoved_extrusion.Data_level_setup = new Setup();
                            oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oList_Removed_extrusion.Add(oRemoved_extrusion);
                        }
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Removed_extrusion_By_DATA_LEVEL_SETUP_ID_List_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_DATA_LEVEL_SETUP_ID_List_Adv(IEnumerable<long?> DATA_LEVEL_SETUP_ID_LIST)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            if (DATA_LEVEL_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DATA_LEVEL_SETUP_ID_LIST = string.Join(",", DATA_LEVEL_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_DATA_LEVEL_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Removed_extrusion = new List<Removed_extrusion>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                            oRemoved_extrusion.Data_level_setup = new Setup();
                            oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oList_Removed_extrusion.Add(oRemoved_extrusion);
                        }
                    }
                }
            }
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_VIEW_TYPE_SETUP_ID_List_Adv
        public List<Entity_view> Get_Entity_view_By_VIEW_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST)
        {
            List<Entity_view> oList_Entity_view = null;
            if (VIEW_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.VIEW_TYPE_SETUP_ID_LIST = string.Join(",", VIEW_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_VIEW_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_view = new List<Entity_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_view oEntity_view = new Entity_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                            oEntity_view.Entity = new Entity();
                            oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_view.View_type_setup = new Setup();
                            oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Entity_view.Add(oEntity_view);
                        }
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Entity_view_By_ENTITY_ID_List_Adv
        public List<Entity_view> Get_Entity_view_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity_view> oList_Entity_view = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_view = new List<Entity_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_view oEntity_view = new Entity_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                            oEntity_view.Entity = new Entity();
                            oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_view.View_type_setup = new Setup();
                            oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Entity_view.Add(oEntity_view);
                        }
                    }
                }
            }
            return oList_Entity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_USER_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_AREA_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                            oArea_kpi_user_access.Area = new Area();
                            oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oArea_kpi_user_access.User = new User();
                            oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_USER_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_SITE_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                            oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi_user_access.Site = new Site();
                            oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oSite_kpi_user_access.User = new User();
                            oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_kpi_By_ENTITY_ID_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi = new List<Entity_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi oEntity_kpi = new Entity_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                            oEntity_kpi.Entity = new Entity();
                            oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Entity_kpi.Add(oEntity_kpi);
                        }
                    }
                }
            }
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_SITE_ID_List_Adv
        public List<Entity> Get_Entity_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_AREA_ID_List_Adv
        public List<Entity> Get_Entity_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_DISTRICT_ID_List_Adv
        public List<Entity> Get_Entity_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_REGION_ID_List_Adv
        public List<Entity> Get_Entity_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_TOP_LEVEL_ID_List_Adv
        public List<Entity> Get_Entity_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_Entity_By_ENTITY_TYPE_SETUP_ID_List_Adv
        public List<Entity> Get_Entity_By_ENTITY_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> ENTITY_TYPE_SETUP_ID_LIST)
        {
            List<Entity> oList_Entity = null;
            if (ENTITY_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_TYPE_SETUP_ID_LIST = string.Join(",", ENTITY_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_ENTITY_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity = new List<Entity>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity oEntity = new Entity();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                            oEntity.Area = new Area();
                            oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oEntity.District = new District();
                            oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oEntity.Region = new Region();
                            oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oEntity.Site = new Site();
                            oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oEntity.Top_level = new Top_level();
                            oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oEntity.Entity_type_setup = new Setup();
                            oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                            oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                            oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                            oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                            oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                            oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                            oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                            oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                            oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                            oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                            oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                            oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                            oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                            oList_Entity.Add(oEntity);
                        }
                    }
                }
            }
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_District_kpi_By_DISTRICT_ID_List_Adv
        public List<District_kpi> Get_District_kpi_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District_kpi> oList_District_kpi = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi = new List<District_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi oDistrict_kpi = new District_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                            oDistrict_kpi.District = new District();
                            oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_District_kpi.Add(oDistrict_kpi);
                        }
                    }
                }
            }
            return oList_District_kpi;
        }
        #endregion
        #region Get_User_level_access_By_ORGANIZATION_LEVEL_ACCESS_ID_List_Adv
        public List<User_level_access> Get_User_level_access_By_ORGANIZATION_LEVEL_ACCESS_ID_List_Adv(IEnumerable<long?> ORGANIZATION_LEVEL_ACCESS_ID_LIST)
        {
            List<User_level_access> oList_User_level_access = null;
            if (ORGANIZATION_LEVEL_ACCESS_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_LEVEL_ACCESS_ID_LIST = string.Join(",", ORGANIZATION_LEVEL_ACCESS_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_ORGANIZATION_LEVEL_ACCESS_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_level_access = new List<User_level_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_level_access oUser_level_access = new User_level_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                            oUser_level_access.Organization_level_access = new Organization_level_access();
                            oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                            oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                            oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                            oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                            oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                            oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                            oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                            oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                            oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                            oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                            oUser_level_access.Data_level_setup = new Setup();
                            oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oUser_level_access.User = new User();
                            oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_level_access.Add(oUser_level_access);
                        }
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_USER_ID_List_Adv
        public List<User_level_access> Get_User_level_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<User_level_access> oList_User_level_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_level_access = new List<User_level_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_level_access oUser_level_access = new User_level_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                            oUser_level_access.Organization_level_access = new Organization_level_access();
                            oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                            oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                            oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                            oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                            oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                            oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                            oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                            oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                            oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                            oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                            oUser_level_access.Data_level_setup = new Setup();
                            oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oUser_level_access.User = new User();
                            oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_level_access.Add(oUser_level_access);
                        }
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_LEVEL_ID_List_Adv
        public List<User_level_access> Get_User_level_access_By_LEVEL_ID_List_Adv(IEnumerable<long?> LEVEL_ID_LIST)
        {
            List<User_level_access> oList_User_level_access = null;
            if (LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.LEVEL_ID_LIST = string.Join(",", LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_level_access = new List<User_level_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_level_access oUser_level_access = new User_level_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                            oUser_level_access.Organization_level_access = new Organization_level_access();
                            oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                            oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                            oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                            oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                            oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                            oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                            oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                            oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                            oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                            oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                            oUser_level_access.Data_level_setup = new Setup();
                            oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oUser_level_access.User = new User();
                            oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_level_access.Add(oUser_level_access);
                        }
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_level_access_By_DATA_LEVEL_SETUP_ID_List_Adv
        public List<User_level_access> Get_User_level_access_By_DATA_LEVEL_SETUP_ID_List_Adv(IEnumerable<long?> DATA_LEVEL_SETUP_ID_LIST)
        {
            List<User_level_access> oList_User_level_access = null;
            if (DATA_LEVEL_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DATA_LEVEL_SETUP_ID_LIST = string.Join(",", DATA_LEVEL_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_DATA_LEVEL_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_level_access = new List<User_level_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_level_access oUser_level_access = new User_level_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                            oUser_level_access.Organization_level_access = new Organization_level_access();
                            oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                            oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                            oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                            oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                            oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                            oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                            oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                            oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                            oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                            oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                            oUser_level_access.Data_level_setup = new Setup();
                            oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                            oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                            oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                            oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                            oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                            oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                            oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                            oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                            oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                            oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                            oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                            oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                            oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                            oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                            oUser_level_access.User = new User();
                            oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_level_access.Add(oUser_level_access);
                        }
                    }
                }
            }
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_USER_ID_List_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_districtnex_module = new List<User_districtnex_module>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                            oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                            oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                            oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                            oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                            oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                            oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                            oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                            oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                            oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                            oUser_districtnex_module.User = new User();
                            oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_districtnex_module.Add(oUser_districtnex_module);
                        }
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_User_districtnex_module_By_DISTRICTNEX_MODULE_ID_List_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_DISTRICTNEX_MODULE_ID_List_Adv(IEnumerable<int?> DISTRICTNEX_MODULE_ID_LIST)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            if (DISTRICTNEX_MODULE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICTNEX_MODULE_ID_LIST = string.Join(",", DISTRICTNEX_MODULE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_DISTRICTNEX_MODULE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_districtnex_module = new List<User_districtnex_module>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                            oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                            oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                            oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                            oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                            oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                            oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                            oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                            oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                            oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                            oUser_districtnex_module.User = new User();
                            oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_districtnex_module.Add(oUser_districtnex_module);
                        }
                    }
                }
            }
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_USER_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ENTITY_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ENTITY_ID_List_Adv(IEnumerable<long?> ENTITY_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ENTITY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ENTITY_ID_LIST = string.Join(",", ENTITY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ENTITY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                            oEntity_kpi_user_access.Entity = new Entity();
                            oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                            oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                            oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                            oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                            oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                            oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                            oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                            oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                            oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                            oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                            oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                            oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                            oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                            oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                            oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                            oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                            oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                            oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                            oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                            oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                            oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                            oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                            oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                            oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                            oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                            oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                            oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                            oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oEntity_kpi_user_access.User = new User();
                            oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                        }
                    }
                }
            }
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_DISTRICT_ID_List_Adv
        public List<District_view> Get_District_view_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District_view> oList_District_view = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_view = new List<District_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_view oDistrict_view = new District_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                            oDistrict_view.District = new District();
                            oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_view.View_type_setup = new Setup();
                            oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_District_view.Add(oDistrict_view);
                        }
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_District_view_By_VIEW_TYPE_SETUP_ID_List_Adv
        public List<District_view> Get_District_view_By_VIEW_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST)
        {
            List<District_view> oList_District_view = null;
            if (VIEW_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.VIEW_TYPE_SETUP_ID_LIST = string.Join(",", VIEW_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_VIEW_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_view = new List<District_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_view oDistrict_view = new District_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                            oDistrict_view.District = new District();
                            oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_view.View_type_setup = new Setup();
                            oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_District_view.Add(oDistrict_view);
                        }
                    }
                }
            }
            return oList_District_view;
        }
        #endregion
        #region Get_Area_By_DISTRICT_ID_List_Adv
        public List<Area> Get_Area_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_REGION_ID_List_Adv
        public List<Area> Get_Area_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_By_TOP_LEVEL_ID_List_Adv
        public List<Area> Get_Area_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Area> oList_Area = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area = new List<Area>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area oArea = new Area();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                            oArea.District = new District();
                            oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oArea.Region = new Region();
                            oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oArea.Top_level = new Top_level();
                            oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Area.Add(oArea);
                        }
                    }
                }
            }
            return oList_Area;
        }
        #endregion
        #region Get_Area_view_By_AREA_ID_List_Adv
        public List<Area_view> Get_Area_view_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area_view> oList_Area_view = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_view = new List<Area_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_view oArea_view = new Area_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                            oArea_view.Area = new Area();
                            oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_view.View_type_setup = new Setup();
                            oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Area_view.Add(oArea_view);
                        }
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Area_view_By_VIEW_TYPE_SETUP_ID_List_Adv
        public List<Area_view> Get_Area_view_By_VIEW_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST)
        {
            List<Area_view> oList_Area_view = null;
            if (VIEW_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.VIEW_TYPE_SETUP_ID_LIST = string.Join(",", VIEW_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_VIEW_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_view = new List<Area_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_view oArea_view = new Area_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                            oArea_view.Area = new Area();
                            oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_view.View_type_setup = new Setup();
                            oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Area_view.Add(oArea_view);
                        }
                    }
                }
            }
            return oList_Area_view;
        }
        #endregion
        #region Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Site_kpi_By_SITE_ID_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_SITE_ID_List_Adv(IEnumerable<long?> SITE_ID_LIST)
        {
            List<Site_kpi> oList_Site_kpi = null;
            if (SITE_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SITE_ID_LIST = string.Join(",", SITE_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_SITE_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site_kpi = new List<Site_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site_kpi oSite_kpi = new Site_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                            oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oSite_kpi.Site = new Site();
                            oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                            oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                            oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                            oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                            oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                            oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                            oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                            oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                            oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                            oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                            oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                            oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                            oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                            oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                            oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                            oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                            oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                            oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                            oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                            oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                            oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                            oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                            oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                            oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                            oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                            oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                            oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                            oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                            oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                            oList_Site_kpi.Add(oSite_kpi);
                        }
                    }
                }
            }
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_PARENT_ORGANIZATION_ID_List_Adv
        public List<Organization_relation> Get_Organization_relation_By_PARENT_ORGANIZATION_ID_List_Adv(IEnumerable<int?> PARENT_ORGANIZATION_ID_LIST)
        {
            List<Organization_relation> oList_Organization_relation = null;
            if (PARENT_ORGANIZATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.PARENT_ORGANIZATION_ID_LIST = string.Join(",", PARENT_ORGANIZATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_PARENT_ORGANIZATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_relation = new List<Organization_relation>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_relation oOrganization_relation = new Organization_relation();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                            oOrganization_relation.User = new User();
                            oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Organization_relation.Add(oOrganization_relation);
                        }
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_CHILD_ORGANIZATION_ID_List_Adv
        public List<Organization_relation> Get_Organization_relation_By_CHILD_ORGANIZATION_ID_List_Adv(IEnumerable<int?> CHILD_ORGANIZATION_ID_LIST)
        {
            List<Organization_relation> oList_Organization_relation = null;
            if (CHILD_ORGANIZATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.CHILD_ORGANIZATION_ID_LIST = string.Join(",", CHILD_ORGANIZATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_CHILD_ORGANIZATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_relation = new List<Organization_relation>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_relation oOrganization_relation = new Organization_relation();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                            oOrganization_relation.User = new User();
                            oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Organization_relation.Add(oOrganization_relation);
                        }
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Organization_relation_By_USER_ID_List_Adv
        public List<Organization_relation> Get_Organization_relation_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<Organization_relation> oList_Organization_relation = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Organization_relation = new List<Organization_relation>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Organization_relation oOrganization_relation = new Organization_relation();
                            Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                            oOrganization_relation.User = new User();
                            oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_Organization_relation.Add(oOrganization_relation);
                        }
                    }
                }
            }
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Setup_By_SETUP_CATEGORY_ID_List_Adv
        public List<Setup> Get_Setup_By_SETUP_CATEGORY_ID_List_Adv(IEnumerable<int?> SETUP_CATEGORY_ID_LIST)
        {
            List<Setup> oList_Setup = null;
            if (SETUP_CATEGORY_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.SETUP_CATEGORY_ID_LIST = string.Join(",", SETUP_CATEGORY_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_SETUP_CATEGORY_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Setup = new List<Setup>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Setup oSetup = new Setup();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                            oSetup.Setup_category = new Setup_category();
                            oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                            oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                            oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                            oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                            oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                            oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                            oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                            oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                            oList_Setup.Add(oSetup);
                        }
                    }
                }
            }
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_AREA_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<Area_kpi> oList_Area_kpi = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Area_kpi = new List<Area_kpi>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Area_kpi oArea_kpi = new Area_kpi();
                            Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                            oArea_kpi.Area = new Area();
                            oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oList_Area_kpi.Add(oArea_kpi);
                        }
                    }
                }
            }
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Region_By_TOP_LEVEL_ID_List_Adv
        public List<Region> Get_Region_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Region> oList_Region = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Region = new List<Region>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Region oRegion = new Region();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                            oRegion.Top_level = new Top_level();
                            oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Region.Add(oRegion);
                        }
                    }
                }
            }
            return oList_Region;
        }
        #endregion
        #region Get_District_By_REGION_ID_List_Adv
        public List<District> Get_District_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<District> oList_District = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_By_TOP_LEVEL_ID_List_Adv
        public List<District> Get_District_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<District> oList_District = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District = new List<District>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District oDistrict = new District();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                            oDistrict.Region = new Region();
                            oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oDistrict.Top_level = new Top_level();
                            oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_District.Add(oDistrict);
                        }
                    }
                }
            }
            return oList_District;
        }
        #endregion
        #region Get_District_kpi_user_access_By_USER_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_DISTRICT_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_ORGANIZATION_DATA_SOURCE_KPI_ID_List_Adv(IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            if (ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_ORGANIZATION_DATA_SOURCE_KPI_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_District_kpi_user_access = new List<District_kpi_user_access>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                            Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                            oDistrict_kpi_user_access.District = new District();
                            oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                            oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                            oDistrict_kpi_user_access.User = new User();
                            oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                        }
                    }
                }
            }
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_User_By_USER_TYPE_SETUP_ID_List_Adv
        public List<User> Get_User_By_USER_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> USER_TYPE_SETUP_ID_LIST)
        {
            List<User> oList_User = null;
            if (USER_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_TYPE_SETUP_ID_LIST = string.Join(",", USER_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_USER_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User = new List<User>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User oUser = new User();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                            oUser.Organization = new Organization();
                            oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oUser.User_type_setup = new Setup();
                            oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                            oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                            oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                            oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                            oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                            oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                            oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                            oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                            oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                            oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                            oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                            oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                            oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                            oList_User.Add(oUser);
                        }
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_User_By_ORGANIZATION_ID_List_Adv
        public List<User> Get_User_By_ORGANIZATION_ID_List_Adv(IEnumerable<int?> ORGANIZATION_ID_LIST)
        {
            List<User> oList_User = null;
            if (ORGANIZATION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_ID_LIST = string.Join(",", ORGANIZATION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_ORGANIZATION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User = new List<User>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User oUser = new User();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                            oUser.Organization = new Organization();
                            oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                            oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                            oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                            oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                            oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                            oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                            oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                            oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                            oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                            oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                            oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                            oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                            oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                            oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                            oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                            oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                            oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                            oUser.User_type_setup = new Setup();
                            oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                            oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                            oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                            oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                            oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                            oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                            oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                            oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                            oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                            oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                            oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                            oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                            oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                            oList_User.Add(oUser);
                        }
                    }
                }
            }
            return oList_User;
        }
        #endregion
        #region Get_Site_By_AREA_ID_List_Adv
        public List<Site> Get_Site_By_AREA_ID_List_Adv(IEnumerable<long?> AREA_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (AREA_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.AREA_ID_LIST = string.Join(",", AREA_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_AREA_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_DISTRICT_ID_List_Adv
        public List<Site> Get_Site_By_DISTRICT_ID_List_Adv(IEnumerable<long?> DISTRICT_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (DISTRICT_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.DISTRICT_ID_LIST = string.Join(",", DISTRICT_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_DISTRICT_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_REGION_ID_List_Adv
        public List<Site> Get_Site_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_Site_By_TOP_LEVEL_ID_List_Adv
        public List<Site> Get_Site_By_TOP_LEVEL_ID_List_Adv(IEnumerable<long?> TOP_LEVEL_ID_LIST)
        {
            List<Site> oList_Site = null;
            if (TOP_LEVEL_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.TOP_LEVEL_ID_LIST = string.Join(",", TOP_LEVEL_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_TOP_LEVEL_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Site = new List<Site>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Site oSite = new Site();
                            Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                            oSite.Area = new Area();
                            oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                            oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                            oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                            oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                            oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                            oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                            oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                            oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                            oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                            oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                            oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                            oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                            oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                            oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                            oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                            oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                            oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                            oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                            oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                            oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                            oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                            oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                            oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                            oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                            oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                            oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                            oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                            oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                            oSite.District = new District();
                            oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                            oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                            oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                            oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                            oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                            oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                            oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                            oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                            oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                            oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                            oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                            oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                            oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                            oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                            oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                            oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                            oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                            oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                            oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                            oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                            oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                            oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                            oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                            oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                            oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                            oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                            oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                            oSite.Region = new Region();
                            oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oSite.Top_level = new Top_level();
                            oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                            oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                            oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                            oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                            oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                            oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                            oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                            oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                            oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                            oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                            oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                            oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                            oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                            oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                            oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                            oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                            oList_Site.Add(oSite);
                        }
                    }
                }
            }
            return oList_Site;
        }
        #endregion
        #region Get_User_theme_By_USER_ID_List_Adv
        public List<User_theme> Get_User_theme_By_USER_ID_List_Adv(IEnumerable<long?> USER_ID_LIST)
        {
            List<User_theme> oList_User_theme = null;
            if (USER_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.USER_ID_LIST = string.Join(",", USER_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_USER_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_theme = new List<User_theme>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_theme oUser_theme = new User_theme();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                            oUser_theme.Organization_theme = new Organization_theme();
                            oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                            oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                            oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                            oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                            oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                            oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                            oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                            oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                            oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                            oUser_theme.User = new User();
                            oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_theme.Add(oUser_theme);
                        }
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_User_theme_By_ORGANIZATION_THEME_ID_List_Adv
        public List<User_theme> Get_User_theme_By_ORGANIZATION_THEME_ID_List_Adv(IEnumerable<int?> ORGANIZATION_THEME_ID_LIST)
        {
            List<User_theme> oList_User_theme = null;
            if (ORGANIZATION_THEME_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.ORGANIZATION_THEME_ID_LIST = string.Join(",", ORGANIZATION_THEME_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_ORGANIZATION_THEME_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_User_theme = new List<User_theme>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            User_theme oUser_theme = new User_theme();
                            Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                            oUser_theme.Organization_theme = new Organization_theme();
                            oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                            oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                            oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                            oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                            oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                            oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                            oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                            oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                            oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                            oUser_theme.User = new User();
                            oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                            oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                            oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                            oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                            oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                            oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                            oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                            oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                            oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                            oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                            oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                            oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                            oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                            oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                            oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                            oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                            oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                            oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                            oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                            oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                            oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                            oList_User_theme.Add(oUser_theme);
                        }
                    }
                }
            }
            return oList_User_theme;
        }
        #endregion
        #region Get_Region_view_By_REGION_ID_List_Adv
        public List<Region_view> Get_Region_view_By_REGION_ID_List_Adv(IEnumerable<long?> REGION_ID_LIST)
        {
            List<Region_view> oList_Region_view = null;
            if (REGION_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.REGION_ID_LIST = string.Join(",", REGION_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_REGION_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Region_view = new List<Region_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Region_view oRegion_view = new Region_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                            oRegion_view.Region = new Region();
                            oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oRegion_view.View_type_setup = new Setup();
                            oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Region_view.Add(oRegion_view);
                        }
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Region_view_By_VIEW_TYPE_SETUP_ID_List_Adv
        public List<Region_view> Get_Region_view_By_VIEW_TYPE_SETUP_ID_List_Adv(IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST)
        {
            List<Region_view> oList_Region_view = null;
            if (VIEW_TYPE_SETUP_ID_LIST != null)
            {
                dynamic _params = new ExpandoObject();
                _params.VIEW_TYPE_SETUP_ID_LIST = string.Join(",", VIEW_TYPE_SETUP_ID_LIST);
                IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_VIEW_TYPE_SETUP_ID_LIST_ADV", _params);
                if (_query_response != null)
                {
                    oList_Region_view = new List<Region_view>();
                    if (_query_response.Count() > 0)
                    {
                        foreach (var element in _query_response)
                        {
                            Region_view oRegion_view = new Region_view();
                            Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                            oRegion_view.Region = new Region();
                            oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                            oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                            oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                            oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                            oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                            oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                            oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                            oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                            oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                            oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                            oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                            oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                            oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                            oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                            oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                            oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                            oRegion_view.View_type_setup = new Setup();
                            oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                            oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                            oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                            oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                            oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                            oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                            oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                            oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                            oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                            oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                            oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                            oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                            oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                            oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                            oList_Region_view.Add(oRegion_view);
                        }
                    }
                }
            }
            return oList_Region_view;
        }
        #endregion
        #region Get_Site_view_By_Where_Adv
        public List<Site_view> Get_Site_view_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_Where_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_Where_Adv(string EXTRUSION_IDENTIFIER, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.EXTRUSION_IDENTIFIER = EXTRUSION_IDENTIFIER;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_Where_Adv
        public List<Entity_view> Get_Entity_view_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_Where_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_Where_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_Where_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_Where_Adv
        public List<Entity> Get_Entity_By_Where_Adv(string NAME, string GLA_UNIT, string UNIT, string IMAGE_URL, string SOLID_GLTF_URL, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.GLA_UNIT = GLA_UNIT;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_Where_Adv
        public List<District_kpi> Get_District_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi;
        }
        #endregion
        #region Get_User_level_access_By_Where_Adv
        public List<User_level_access> Get_User_level_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_Where_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_Where_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_Where_Adv
        public List<District_view> Get_District_view_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_view;
        }
        #endregion
        #region Get_Area_By_Where_Adv
        public List<Area> Get_Area_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area;
        }
        #endregion
        #region Get_Area_view_By_Where_Adv
        public List<Area_view> Get_Area_view_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_view;
        }
        #endregion
        #region Get_Site_kpi_By_Where_Adv
        public List<Site_kpi> Get_Site_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_Where_Adv
        public List<Organization_relation> Get_Organization_relation_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Setup_By_Where_Adv
        public List<Setup> Get_Setup_By_Where_Adv(string VALUE, string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.VALUE = VALUE;
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_Where_Adv
        public List<Area_kpi> Get_Area_kpi_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Region_By_Where_Adv
        public List<Region> Get_Region_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Region> oList_Region = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Region = new List<Region>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region oRegion = new Region();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                        oRegion.Top_level = new Top_level();
                        oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Region.Add(oRegion);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Region;
        }
        #endregion
        #region Get_District_By_Where_Adv
        public List<District> Get_District_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District;
        }
        #endregion
        #region Get_District_kpi_user_access_By_Where_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_User_By_Where_Adv
        public List<User> Get_User_By_Where_Adv(string FIRST_NAME, string LAST_NAME, string USERNAME, string PASSWORD, string EMAIL, string PHONE_NUMBER, string IMAGE_URL, string USER_DISTRICTNEX_WALKTHROUGH, string USER_ADMIN_WALKTHROUGH, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.FIRST_NAME = FIRST_NAME;
            _params.LAST_NAME = LAST_NAME;
            _params.USERNAME = USERNAME;
            _params.PASSWORD = PASSWORD;
            _params.EMAIL = EMAIL;
            _params.PHONE_NUMBER = PHONE_NUMBER;
            _params.IMAGE_URL = IMAGE_URL;
            _params.USER_DISTRICTNEX_WALKTHROUGH = USER_DISTRICTNEX_WALKTHROUGH;
            _params.USER_ADMIN_WALKTHROUGH = USER_ADMIN_WALKTHROUGH;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User;
        }
        #endregion
        #region Get_Site_By_Where_Adv
        public List<Site> Get_Site_By_Where_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site;
        }
        #endregion
        #region Get_User_theme_By_Where_Adv
        public List<User_theme> Get_User_theme_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_theme;
        }
        #endregion
        #region Get_Region_view_By_Where_Adv
        public List<Region_view> Get_Region_view_By_Where_Adv(string DESCRIPTION, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_WHERE_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Region_view;
        }
        #endregion
        #region Get_Site_view_By_Where_In_List_Adv
        public List<Site_view> Get_Site_view_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> SITE_ID_LIST, IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_view> oList_Site_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.VIEW_TYPE_SETUP_ID_LIST = VIEW_TYPE_SETUP_ID_LIST != null ? string.Join(",", VIEW_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_VIEW_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_view = new List<Site_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_view oSite_view = new Site_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_view);
                        oSite_view.Site = new Site();
                        oSite_view.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_view.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_view.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_view.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_view.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_view.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_view.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_view.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_view.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_view.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_view.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_view.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_view.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_view.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_view.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_view.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_view.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_view.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_view.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_view.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_view.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_view.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_view.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_view.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_view.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_view.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_view.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_view.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_view.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_view.View_type_setup = new Setup();
                        oSite_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oSite_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oSite_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oSite_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oSite_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oSite_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oSite_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oSite_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oSite_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oSite_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oSite_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oSite_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oSite_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oSite_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Site_view.Add(oSite_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_view;
        }
        #endregion
        #region Get_Removed_extrusion_By_Where_In_List_Adv
        public List<Removed_extrusion> Get_Removed_extrusion_By_Where_In_List_Adv(string EXTRUSION_IDENTIFIER, IEnumerable<long?> DATA_LEVEL_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Removed_extrusion> oList_Removed_extrusion = null;
            dynamic _params = new ExpandoObject();
            _params.EXTRUSION_IDENTIFIER = EXTRUSION_IDENTIFIER;
            _params.DATA_LEVEL_SETUP_ID_LIST = DATA_LEVEL_SETUP_ID_LIST != null ? string.Join(",", DATA_LEVEL_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REMOVED_EXTRUSION_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Removed_extrusion = new List<Removed_extrusion>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Removed_extrusion oRemoved_extrusion = new Removed_extrusion();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRemoved_extrusion);
                        oRemoved_extrusion.Data_level_setup = new Setup();
                        oRemoved_extrusion.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oRemoved_extrusion.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oRemoved_extrusion.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oRemoved_extrusion.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oRemoved_extrusion.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oRemoved_extrusion.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oRemoved_extrusion.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oRemoved_extrusion.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oRemoved_extrusion.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oRemoved_extrusion.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oRemoved_extrusion.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oRemoved_extrusion.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oRemoved_extrusion.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oList_Removed_extrusion.Add(oRemoved_extrusion);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Removed_extrusion;
        }
        #endregion
        #region Get_Entity_view_By_Where_In_List_Adv
        public List<Entity_view> Get_Entity_view_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> ENTITY_ID_LIST, IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_view> oList_Entity_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.VIEW_TYPE_SETUP_ID_LIST = VIEW_TYPE_SETUP_ID_LIST != null ? string.Join(",", VIEW_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_VIEW_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_view = new List<Entity_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_view oEntity_view = new Entity_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_view);
                        oEntity_view.Entity = new Entity();
                        oEntity_view.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_view.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_view.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_view.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_view.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_view.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_view.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_view.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_view.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_view.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_view.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_view.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_view.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_view.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_view.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_view.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_view.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_view.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_view.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_view.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_view.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_view.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_view.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_view.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_view.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_view.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_view.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_view.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_view.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_view.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_view.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_view.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_view.View_type_setup = new Setup();
                        oEntity_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oEntity_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oEntity_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oEntity_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oEntity_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oEntity_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oEntity_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oEntity_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oEntity_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oEntity_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Entity_view.Add(oEntity_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_view;
        }
        #endregion
        #region Get_Area_kpi_user_access_By_Where_In_List_Adv
        public List<Area_kpi_user_access> Get_Area_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> AREA_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi_user_access> oList_Area_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi_user_access = new List<Area_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi_user_access oArea_kpi_user_access = new Area_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi_user_access);
                        oArea_kpi_user_access.Area = new Area();
                        oArea_kpi_user_access.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi_user_access.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi_user_access.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi_user_access.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi_user_access.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi_user_access.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi_user_access.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi_user_access.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi_user_access.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi_user_access.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi_user_access.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi_user_access.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi_user_access.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi_user_access.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi_user_access.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi_user_access.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi_user_access.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi_user_access.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi_user_access.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi_user_access.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi_user_access.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi_user_access.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi_user_access.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi_user_access.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi_user_access.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi_user_access.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi_user_access.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi_user_access.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oArea_kpi_user_access.User = new User();
                        oArea_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oArea_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oArea_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oArea_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oArea_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oArea_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oArea_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oArea_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oArea_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oArea_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oArea_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oArea_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oArea_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oArea_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oArea_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oArea_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oArea_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oArea_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oArea_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oArea_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oArea_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Area_kpi_user_access.Add(oArea_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi_user_access;
        }
        #endregion
        #region Get_Site_kpi_user_access_By_Where_In_List_Adv
        public List<Site_kpi_user_access> Get_Site_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> SITE_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi_user_access> oList_Site_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi_user_access = new List<Site_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi_user_access oSite_kpi_user_access = new Site_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi_user_access);
                        oSite_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi_user_access.Site = new Site();
                        oSite_kpi_user_access.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi_user_access.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi_user_access.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi_user_access.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi_user_access.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi_user_access.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi_user_access.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi_user_access.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi_user_access.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi_user_access.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi_user_access.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi_user_access.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi_user_access.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi_user_access.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi_user_access.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi_user_access.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi_user_access.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi_user_access.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi_user_access.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi_user_access.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi_user_access.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi_user_access.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi_user_access.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi_user_access.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi_user_access.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi_user_access.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi_user_access.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi_user_access.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi_user_access.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oSite_kpi_user_access.User = new User();
                        oSite_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oSite_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oSite_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oSite_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oSite_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oSite_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oSite_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oSite_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oSite_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oSite_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oSite_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oSite_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oSite_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oSite_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oSite_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oSite_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oSite_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oSite_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oSite_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oSite_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oSite_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Site_kpi_user_access.Add(oSite_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi_user_access;
        }
        #endregion
        #region Get_Entity_kpi_By_Where_In_List_Adv
        public List<Entity_kpi> Get_Entity_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> ENTITY_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi> oList_Entity_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi = new List<Entity_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi oEntity_kpi = new Entity_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi);
                        oEntity_kpi.Entity = new Entity();
                        oEntity_kpi.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Entity_kpi.Add(oEntity_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi;
        }
        #endregion
        #region Get_Entity_By_Where_In_List_Adv
        public List<Entity> Get_Entity_By_Where_In_List_Adv(string NAME, string GLA_UNIT, string UNIT, string IMAGE_URL, string SOLID_GLTF_URL, IEnumerable<long?> SITE_ID_LIST, IEnumerable<long?> AREA_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, IEnumerable<long?> ENTITY_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity> oList_Entity = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.GLA_UNIT = GLA_UNIT;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.ENTITY_TYPE_SETUP_ID_LIST = ENTITY_TYPE_SETUP_ID_LIST != null ? string.Join(",", ENTITY_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity = new List<Entity>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity oEntity = new Entity();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity);
                        oEntity.Area = new Area();
                        oEntity.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oEntity.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oEntity.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oEntity.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oEntity.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oEntity.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oEntity.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oEntity.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oEntity.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oEntity.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oEntity.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oEntity.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oEntity.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oEntity.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oEntity.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oEntity.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oEntity.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oEntity.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oEntity.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oEntity.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oEntity.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oEntity.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oEntity.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oEntity.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oEntity.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oEntity.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oEntity.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oEntity.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oEntity.District = new District();
                        oEntity.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oEntity.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oEntity.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oEntity.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oEntity.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oEntity.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oEntity.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oEntity.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oEntity.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oEntity.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oEntity.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oEntity.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oEntity.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oEntity.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oEntity.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oEntity.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oEntity.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oEntity.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oEntity.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oEntity.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oEntity.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oEntity.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oEntity.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oEntity.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oEntity.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oEntity.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oEntity.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oEntity.Region = new Region();
                        oEntity.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oEntity.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oEntity.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oEntity.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oEntity.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oEntity.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oEntity.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oEntity.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oEntity.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oEntity.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oEntity.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oEntity.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oEntity.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oEntity.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oEntity.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oEntity.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oEntity.Site = new Site();
                        oEntity.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oEntity.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oEntity.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oEntity.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oEntity.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oEntity.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oEntity.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oEntity.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oEntity.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oEntity.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oEntity.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oEntity.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oEntity.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oEntity.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oEntity.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oEntity.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oEntity.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oEntity.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oEntity.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oEntity.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oEntity.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oEntity.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oEntity.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oEntity.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oEntity.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oEntity.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oEntity.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oEntity.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oEntity.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oEntity.Top_level = new Top_level();
                        oEntity.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oEntity.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oEntity.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oEntity.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oEntity.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oEntity.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oEntity.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oEntity.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oEntity.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oEntity.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oEntity.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oEntity.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oEntity.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oEntity.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oEntity.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oEntity.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oEntity.Entity_type_setup = new Setup();
                        oEntity.Entity_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_SETUP_ID");
                        oEntity.Entity_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oEntity.Entity_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_SYSTEM");
                        oEntity.Entity_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETEABLE");
                        oEntity.Entity_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_UPDATEABLE");
                        oEntity.Entity_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_DELETED");
                        oEntity.Entity_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_ENTITY_TYPE_SETUP_IS_VISIBLE");
                        oEntity.Entity_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_DISPLAY_ORDER");
                        oEntity.Entity_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_VALUE");
                        oEntity.Entity_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_DESCRIPTION");
                        oEntity.Entity_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TYPE_SETUP_ENTRY_USER_ID");
                        oEntity.Entity_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_ENTRY_DATE");
                        oEntity.Entity_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_TYPE_SETUP_LAST_UPDATE");
                        oEntity.Entity_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_TYPE_SETUP_OWNER_ID");
                        oList_Entity.Add(oEntity);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity;
        }
        #endregion
        #region Get_District_kpi_By_Where_In_List_Adv
        public List<District_kpi> Get_District_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi> oList_District_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi = new List<District_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi oDistrict_kpi = new District_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi);
                        oDistrict_kpi.District = new District();
                        oDistrict_kpi.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_District_kpi.Add(oDistrict_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi;
        }
        #endregion
        #region Get_User_level_access_By_Where_In_List_Adv
        public List<User_level_access> Get_User_level_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> ORGANIZATION_LEVEL_ACCESS_ID_LIST, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> DATA_LEVEL_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_level_access> oList_User_level_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.ORGANIZATION_LEVEL_ACCESS_ID_LIST = ORGANIZATION_LEVEL_ACCESS_ID_LIST != null ? string.Join(",", ORGANIZATION_LEVEL_ACCESS_ID_LIST) : "";
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.DATA_LEVEL_SETUP_ID_LIST = DATA_LEVEL_SETUP_ID_LIST != null ? string.Join(",", DATA_LEVEL_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_LEVEL_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_User_level_access = new List<User_level_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_level_access oUser_level_access = new User_level_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_level_access);
                        oUser_level_access.Organization_level_access = new Organization_level_access();
                        oUser_level_access.Organization_level_access.ORGANIZATION_LEVEL_ACCESS_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_LEVEL_ACCESS_ID");
                        oUser_level_access.Organization_level_access.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ORGANIZATION_ID");
                        oUser_level_access.Organization_level_access.LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_LEVEL_ID");
                        oUser_level_access.Organization_level_access.DATA_LEVEL_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_DATA_LEVEL_SETUP_ID");
                        oUser_level_access.Organization_level_access.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_USER_ID");
                        oUser_level_access.Organization_level_access.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_ENTRY_DATE");
                        oUser_level_access.Organization_level_access.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_LAST_UPDATE");
                        oUser_level_access.Organization_level_access.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_LEVEL_ACCESS_IS_DELETED");
                        oUser_level_access.Organization_level_access.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_LEVEL_ACCESS_OWNER_ID");
                        oUser_level_access.Organization_level_access.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LEVEL_ACCESS_DESCRIPTION");
                        oUser_level_access.Data_level_setup = new Setup();
                        oUser_level_access.Data_level_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_SETUP_ID");
                        oUser_level_access.Data_level_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_SETUP_CATEGORY_ID");
                        oUser_level_access.Data_level_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_SYSTEM");
                        oUser_level_access.Data_level_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETEABLE");
                        oUser_level_access.Data_level_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_UPDATEABLE");
                        oUser_level_access.Data_level_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_DELETED");
                        oUser_level_access.Data_level_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_DATA_LEVEL_SETUP_IS_VISIBLE");
                        oUser_level_access.Data_level_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_DISPLAY_ORDER");
                        oUser_level_access.Data_level_setup.VALUE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_VALUE");
                        oUser_level_access.Data_level_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_DESCRIPTION");
                        oUser_level_access.Data_level_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DATA_LEVEL_SETUP_ENTRY_USER_ID");
                        oUser_level_access.Data_level_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_ENTRY_DATE");
                        oUser_level_access.Data_level_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DATA_LEVEL_SETUP_LAST_UPDATE");
                        oUser_level_access.Data_level_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DATA_LEVEL_SETUP_OWNER_ID");
                        oUser_level_access.User = new User();
                        oUser_level_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_level_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_level_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_level_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_level_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_level_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_level_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_level_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_level_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_level_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_level_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_level_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_level_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_level_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_level_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_level_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_level_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_level_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_level_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_level_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_level_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_level_access.Add(oUser_level_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_level_access;
        }
        #endregion
        #region Get_User_districtnex_module_By_Where_In_List_Adv
        public List<User_districtnex_module> Get_User_districtnex_module_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<int?> DISTRICTNEX_MODULE_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_districtnex_module> oList_User_districtnex_module = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.DISTRICTNEX_MODULE_ID_LIST = DISTRICTNEX_MODULE_ID_LIST != null ? string.Join(",", DISTRICTNEX_MODULE_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_DISTRICTNEX_MODULE_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_User_districtnex_module = new List<User_districtnex_module>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_districtnex_module oUser_districtnex_module = new User_districtnex_module();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_districtnex_module);
                        oUser_districtnex_module.Districtnex_module = new Districtnex_module();
                        oUser_districtnex_module.Districtnex_module.DISTRICTNEX_MODULE_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISTRICTNEX_MODULE_ID");
                        oUser_districtnex_module.Districtnex_module.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_NAME");
                        oUser_districtnex_module.Districtnex_module.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_DISPLAY_ORDER");
                        oUser_districtnex_module.Districtnex_module.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICTNEX_MODULE_ENTRY_USER_ID");
                        oUser_districtnex_module.Districtnex_module.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_ENTRY_DATE");
                        oUser_districtnex_module.Districtnex_module.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICTNEX_MODULE_LAST_UPDATE");
                        oUser_districtnex_module.Districtnex_module.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICTNEX_MODULE_IS_DELETED");
                        oUser_districtnex_module.Districtnex_module.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICTNEX_MODULE_OWNER_ID");
                        oUser_districtnex_module.User = new User();
                        oUser_districtnex_module.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_districtnex_module.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_districtnex_module.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_districtnex_module.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_districtnex_module.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_districtnex_module.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_districtnex_module.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_districtnex_module.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_districtnex_module.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_districtnex_module.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_districtnex_module.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_districtnex_module.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_districtnex_module.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_districtnex_module.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_districtnex_module.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_districtnex_module.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_districtnex_module.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_districtnex_module.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_districtnex_module.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_districtnex_module.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_districtnex_module.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_districtnex_module.Add(oUser_districtnex_module);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_districtnex_module;
        }
        #endregion
        #region Get_Entity_kpi_user_access_By_Where_In_List_Adv
        public List<Entity_kpi_user_access> Get_Entity_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> ENTITY_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Entity_kpi_user_access> oList_Entity_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.ENTITY_ID_LIST = ENTITY_ID_LIST != null ? string.Join(",", ENTITY_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ENTITY_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Entity_kpi_user_access = new List<Entity_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Entity_kpi_user_access oEntity_kpi_user_access = new Entity_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oEntity_kpi_user_access);
                        oEntity_kpi_user_access.Entity = new Entity();
                        oEntity_kpi_user_access.Entity.ENTITY_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_ID");
                        oEntity_kpi_user_access.Entity.SITE_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_SITE_ID");
                        oEntity_kpi_user_access.Entity.AREA_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_AREA_ID");
                        oEntity_kpi_user_access.Entity.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_DISTRICT_ID");
                        oEntity_kpi_user_access.Entity.REGION_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_REGION_ID");
                        oEntity_kpi_user_access.Entity.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_TOP_LEVEL_ID");
                        oEntity_kpi_user_access.Entity.ENTITY_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTITY_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.Entity.NAME = Get_Data_Record_Value<string>(element, "T_ENTITY_NAME");
                        oEntity_kpi_user_access.Entity.NUMBER_OF_FLOORS = Get_Data_Record_Value<int?>(element, "T_ENTITY_NUMBER_OF_FLOORS");
                        oEntity_kpi_user_access.Entity.GLA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLA");
                        oEntity_kpi_user_access.Entity.GLA_UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_GLA_UNIT");
                        oEntity_kpi_user_access.Entity.AREA = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_AREA");
                        oEntity_kpi_user_access.Entity.UNIT = Get_Data_Record_Value<string>(element, "T_ENTITY_UNIT");
                        oEntity_kpi_user_access.Entity.SCALE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_SCALE");
                        oEntity_kpi_user_access.Entity.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONX");
                        oEntity_kpi_user_access.Entity.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONY");
                        oEntity_kpi_user_access.Entity.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_ROTATIONZ");
                        oEntity_kpi_user_access.Entity.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LATITUDE");
                        oEntity_kpi_user_access.Entity.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_GLTF_LONGITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LATITUDE");
                        oEntity_kpi_user_access.Entity.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_CENTER_LONGITUDE");
                        oEntity_kpi_user_access.Entity.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_RADIUS_IN_METERS");
                        oEntity_kpi_user_access.Entity.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_IMAGE_URL");
                        oEntity_kpi_user_access.Entity.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_ENTITY_SOLID_GLTF_URL");
                        oEntity_kpi_user_access.Entity.POPUL_ALT_X = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUL_ALT_X");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Y = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Y");
                        oEntity_kpi_user_access.Entity.POPUP_ALT_Z = Get_Data_Record_Value<decimal?>(element, "T_ENTITY_POPUP_ALT_Z");
                        oEntity_kpi_user_access.Entity.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ENTITY_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Entity.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ENTITY_ENTRY_DATE");
                        oEntity_kpi_user_access.Entity.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ENTITY_LAST_UPDATE");
                        oEntity_kpi_user_access.Entity.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ENTITY_IS_DELETED");
                        oEntity_kpi_user_access.Entity.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ENTITY_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oEntity_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oEntity_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oEntity_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oEntity_kpi_user_access.User = new User();
                        oEntity_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oEntity_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oEntity_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oEntity_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oEntity_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oEntity_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oEntity_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oEntity_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oEntity_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oEntity_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oEntity_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oEntity_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oEntity_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oEntity_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oEntity_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oEntity_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oEntity_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oEntity_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oEntity_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oEntity_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oEntity_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Entity_kpi_user_access.Add(oEntity_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Entity_kpi_user_access;
        }
        #endregion
        #region Get_District_view_By_Where_In_List_Adv
        public List<District_view> Get_District_view_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_view> oList_District_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.VIEW_TYPE_SETUP_ID_LIST = VIEW_TYPE_SETUP_ID_LIST != null ? string.Join(",", VIEW_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_VIEW_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District_view = new List<District_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_view oDistrict_view = new District_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_view);
                        oDistrict_view.District = new District();
                        oDistrict_view.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_view.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_view.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_view.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_view.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_view.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_view.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_view.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_view.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_view.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_view.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_view.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_view.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_view.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_view.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_view.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_view.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_view.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_view.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_view.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_view.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_view.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_view.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_view.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_view.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_view.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_view.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_view.View_type_setup = new Setup();
                        oDistrict_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oDistrict_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oDistrict_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oDistrict_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oDistrict_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oDistrict_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oDistrict_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oDistrict_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oDistrict_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oDistrict_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oDistrict_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oDistrict_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oDistrict_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oDistrict_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_District_view.Add(oDistrict_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_view;
        }
        #endregion
        #region Get_Area_By_Where_In_List_Adv
        public List<Area> Get_Area_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area> oList_Area = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area = new List<Area>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area oArea = new Area();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea);
                        oArea.District = new District();
                        oArea.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oArea.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oArea.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oArea.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oArea.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oArea.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oArea.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oArea.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oArea.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oArea.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oArea.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oArea.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oArea.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oArea.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oArea.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oArea.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oArea.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oArea.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oArea.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oArea.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oArea.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oArea.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oArea.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oArea.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oArea.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oArea.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oArea.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oArea.Region = new Region();
                        oArea.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oArea.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oArea.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oArea.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oArea.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oArea.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oArea.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oArea.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oArea.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oArea.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oArea.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oArea.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oArea.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oArea.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oArea.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oArea.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oArea.Top_level = new Top_level();
                        oArea.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oArea.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oArea.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oArea.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oArea.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oArea.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oArea.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oArea.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oArea.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oArea.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oArea.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oArea.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oArea.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oArea.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oArea.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oArea.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Area.Add(oArea);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area;
        }
        #endregion
        #region Get_Area_view_By_Where_In_List_Adv
        public List<Area_view> Get_Area_view_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> AREA_ID_LIST, IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_view> oList_Area_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.VIEW_TYPE_SETUP_ID_LIST = VIEW_TYPE_SETUP_ID_LIST != null ? string.Join(",", VIEW_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_VIEW_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_view = new List<Area_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_view oArea_view = new Area_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_view);
                        oArea_view.Area = new Area();
                        oArea_view.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_view.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_view.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_view.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_view.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_view.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_view.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_view.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_view.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_view.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_view.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_view.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_view.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_view.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_view.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_view.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_view.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_view.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_view.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_view.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_view.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_view.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_view.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_view.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_view.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_view.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_view.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_view.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_view.View_type_setup = new Setup();
                        oArea_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oArea_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oArea_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oArea_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oArea_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oArea_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oArea_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oArea_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oArea_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oArea_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oArea_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oArea_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oArea_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oArea_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Area_view.Add(oArea_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_view;
        }
        #endregion
        #region Get_Site_kpi_By_Where_In_List_Adv
        public List<Site_kpi> Get_Site_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> SITE_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site_kpi> oList_Site_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.SITE_ID_LIST = SITE_ID_LIST != null ? string.Join(",", SITE_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site_kpi = new List<Site_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site_kpi oSite_kpi = new Site_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite_kpi);
                        oSite_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oSite_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oSite_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oSite_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oSite_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oSite_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oSite_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oSite_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oSite_kpi.Site = new Site();
                        oSite_kpi.Site.SITE_ID = Get_Data_Record_Value<long?>(element, "T_SITE_SITE_ID");
                        oSite_kpi.Site.AREA_ID = Get_Data_Record_Value<long?>(element, "T_SITE_AREA_ID");
                        oSite_kpi.Site.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_SITE_DISTRICT_ID");
                        oSite_kpi.Site.REGION_ID = Get_Data_Record_Value<long?>(element, "T_SITE_REGION_ID");
                        oSite_kpi.Site.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_SITE_TOP_LEVEL_ID");
                        oSite_kpi.Site.NAME = Get_Data_Record_Value<string>(element, "T_SITE_NAME");
                        oSite_kpi.Site.LOCATION = Get_Data_Record_Value<string>(element, "T_SITE_LOCATION");
                        oSite_kpi.Site.AREA = Get_Data_Record_Value<decimal?>(element, "T_SITE_AREA");
                        oSite_kpi.Site.UNIT = Get_Data_Record_Value<string>(element, "T_SITE_UNIT");
                        oSite_kpi.Site.SCALE = Get_Data_Record_Value<decimal?>(element, "T_SITE_SCALE");
                        oSite_kpi.Site.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONX");
                        oSite_kpi.Site.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONY");
                        oSite_kpi.Site.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_SITE_ROTATIONZ");
                        oSite_kpi.Site.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LATITUDE");
                        oSite_kpi.Site.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_GLTF_LONGITUDE");
                        oSite_kpi.Site.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LATITUDE");
                        oSite_kpi.Site.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_SITE_CENTER_LONGITUDE");
                        oSite_kpi.Site.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_SITE_RADIUS_IN_METERS");
                        oSite_kpi.Site.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_SITE_IMAGE_URL");
                        oSite_kpi.Site.LOGO_URL = Get_Data_Record_Value<string>(element, "T_SITE_LOGO_URL");
                        oSite_kpi.Site.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_SITE_SOLID_GLTF_URL");
                        oSite_kpi.Site.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_AREA_COLOR");
                        oSite_kpi.Site.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_SITE_BORDER_COLOR");
                        oSite_kpi.Site.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_SITE_STUDY_ZONE_NAME");
                        oSite_kpi.Site.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SITE_ENTRY_USER_ID");
                        oSite_kpi.Site.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SITE_ENTRY_DATE");
                        oSite_kpi.Site.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SITE_LAST_UPDATE");
                        oSite_kpi.Site.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SITE_IS_DELETED");
                        oSite_kpi.Site.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SITE_OWNER_ID");
                        oList_Site_kpi.Add(oSite_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site_kpi;
        }
        #endregion
        #region Get_Organization_relation_By_Where_In_List_Adv
        public List<Organization_relation> Get_Organization_relation_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Organization_relation> oList_Organization_relation = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_ORGANIZATION_RELATION_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Organization_relation = new List<Organization_relation>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Organization_relation oOrganization_relation = new Organization_relation();
                        Props.Copy_Prop_Values_From_Data_Record(element, oOrganization_relation);
                        oOrganization_relation.User = new User();
                        oOrganization_relation.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oOrganization_relation.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oOrganization_relation.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oOrganization_relation.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oOrganization_relation.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oOrganization_relation.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oOrganization_relation.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oOrganization_relation.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oOrganization_relation.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oOrganization_relation.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oOrganization_relation.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oOrganization_relation.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oOrganization_relation.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oOrganization_relation.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oOrganization_relation.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oOrganization_relation.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oOrganization_relation.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oOrganization_relation.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oOrganization_relation.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oOrganization_relation.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oOrganization_relation.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_Organization_relation.Add(oOrganization_relation);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Organization_relation;
        }
        #endregion
        #region Get_Setup_By_Where_In_List_Adv
        public List<Setup> Get_Setup_By_Where_In_List_Adv(string VALUE, string DESCRIPTION, IEnumerable<int?> SETUP_CATEGORY_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Setup> oList_Setup = null;
            dynamic _params = new ExpandoObject();
            _params.VALUE = VALUE;
            _params.DESCRIPTION = DESCRIPTION;
            _params.SETUP_CATEGORY_ID_LIST = SETUP_CATEGORY_ID_LIST != null ? string.Join(",", SETUP_CATEGORY_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SETUP_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Setup = new List<Setup>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Setup oSetup = new Setup();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSetup);
                        oSetup.Setup_category = new Setup_category();
                        oSetup.Setup_category.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_ID");
                        oSetup.Setup_category.SETUP_CATEGORY_NAME = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_SETUP_CATEGORY_NAME");
                        oSetup.Setup_category.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_DESCRIPTION");
                        oSetup.Setup_category.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_SETUP_CATEGORY_ENTRY_USER_ID");
                        oSetup.Setup_category.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_ENTRY_DATE");
                        oSetup.Setup_category.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_SETUP_CATEGORY_LAST_UPDATE");
                        oSetup.Setup_category.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_SETUP_CATEGORY_IS_DELETED");
                        oSetup.Setup_category.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_SETUP_CATEGORY_OWNER_ID");
                        oList_Setup.Add(oSetup);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Setup;
        }
        #endregion
        #region Get_Area_kpi_By_Where_In_List_Adv
        public List<Area_kpi> Get_Area_kpi_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> AREA_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Area_kpi> oList_Area_kpi = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_AREA_KPI_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Area_kpi = new List<Area_kpi>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Area_kpi oArea_kpi = new Area_kpi();
                        Props.Copy_Prop_Values_From_Data_Record(element, oArea_kpi);
                        oArea_kpi.Area = new Area();
                        oArea_kpi.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oArea_kpi.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oArea_kpi.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oArea_kpi.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oArea_kpi.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oArea_kpi.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oArea_kpi.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oArea_kpi.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oArea_kpi.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oArea_kpi.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oArea_kpi.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oArea_kpi.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oArea_kpi.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oArea_kpi.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oArea_kpi.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oArea_kpi.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oArea_kpi.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oArea_kpi.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oArea_kpi.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oArea_kpi.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oArea_kpi.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oArea_kpi.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oArea_kpi.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oArea_kpi.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oArea_kpi.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oArea_kpi.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oArea_kpi.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oArea_kpi.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oArea_kpi.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oArea_kpi.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oArea_kpi.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oArea_kpi.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oArea_kpi.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oArea_kpi.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oArea_kpi.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oList_Area_kpi.Add(oArea_kpi);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Area_kpi;
        }
        #endregion
        #region Get_Region_By_Where_In_List_Adv
        public List<Region> Get_Region_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Region> oList_Region = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Region = new List<Region>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region oRegion = new Region();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion);
                        oRegion.Top_level = new Top_level();
                        oRegion.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oRegion.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oRegion.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oRegion.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oRegion.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oRegion.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oRegion.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oRegion.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oRegion.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oRegion.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oRegion.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oRegion.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oRegion.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oRegion.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oRegion.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oRegion.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Region.Add(oRegion);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Region;
        }
        #endregion
        #region Get_District_By_Where_In_List_Adv
        public List<District> Get_District_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District> oList_District = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District = new List<District>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District oDistrict = new District();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict);
                        oDistrict.Region = new Region();
                        oDistrict.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oDistrict.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oDistrict.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oDistrict.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oDistrict.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oDistrict.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oDistrict.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oDistrict.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oDistrict.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oDistrict.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oDistrict.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oDistrict.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oDistrict.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oDistrict.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oDistrict.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oDistrict.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oDistrict.Top_level = new Top_level();
                        oDistrict.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oDistrict.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oDistrict.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oDistrict.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oDistrict.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oDistrict.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oDistrict.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oDistrict.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oDistrict.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oDistrict.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oDistrict.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oDistrict.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oDistrict.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oDistrict.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oDistrict.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oDistrict.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_District.Add(oDistrict);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District;
        }
        #endregion
        #region Get_District_kpi_user_access_By_Where_In_List_Adv
        public List<District_kpi_user_access> Get_District_kpi_user_access_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<int?> ORGANIZATION_DATA_SOURCE_KPI_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<District_kpi_user_access> oList_District_kpi_user_access = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.ORGANIZATION_DATA_SOURCE_KPI_ID_LIST = ORGANIZATION_DATA_SOURCE_KPI_ID_LIST != null ? string.Join(",", ORGANIZATION_DATA_SOURCE_KPI_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_DISTRICT_KPI_USER_ACCESS_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_District_kpi_user_access = new List<District_kpi_user_access>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        District_kpi_user_access oDistrict_kpi_user_access = new District_kpi_user_access();
                        Props.Copy_Prop_Values_From_Data_Record(element, oDistrict_kpi_user_access);
                        oDistrict_kpi_user_access.District = new District();
                        oDistrict_kpi_user_access.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oDistrict_kpi_user_access.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oDistrict_kpi_user_access.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oDistrict_kpi_user_access.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oDistrict_kpi_user_access.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oDistrict_kpi_user_access.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oDistrict_kpi_user_access.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oDistrict_kpi_user_access.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oDistrict_kpi_user_access.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oDistrict_kpi_user_access.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oDistrict_kpi_user_access.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oDistrict_kpi_user_access.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oDistrict_kpi_user_access.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oDistrict_kpi_user_access.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oDistrict_kpi_user_access.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oDistrict_kpi_user_access.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oDistrict_kpi_user_access.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oDistrict_kpi_user_access.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oDistrict_kpi_user_access.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oDistrict_kpi_user_access.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oDistrict_kpi_user_access.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oDistrict_kpi_user_access.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oDistrict_kpi_user_access.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oDistrict_kpi_user_access.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oDistrict_kpi_user_access.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi = new Organization_data_source_kpi();
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_DATA_SOURCE_KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_DATA_SOURCE_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DATA_SOURCE_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DATA_SOURCE_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.KPI_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_KPI_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_ENTRY_DATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_LAST_UPDATE");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_IS_DELETED");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_OWNER_ID");
                        oDistrict_kpi_user_access.Organization_data_source_kpi.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATA_SOURCE_KPI_DESCRIPTION");
                        oDistrict_kpi_user_access.User = new User();
                        oDistrict_kpi_user_access.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oDistrict_kpi_user_access.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oDistrict_kpi_user_access.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oDistrict_kpi_user_access.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oDistrict_kpi_user_access.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oDistrict_kpi_user_access.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oDistrict_kpi_user_access.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oDistrict_kpi_user_access.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oDistrict_kpi_user_access.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oDistrict_kpi_user_access.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oDistrict_kpi_user_access.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oDistrict_kpi_user_access.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oDistrict_kpi_user_access.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oDistrict_kpi_user_access.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oDistrict_kpi_user_access.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oDistrict_kpi_user_access.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oDistrict_kpi_user_access.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oDistrict_kpi_user_access.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oDistrict_kpi_user_access.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oDistrict_kpi_user_access.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_District_kpi_user_access.Add(oDistrict_kpi_user_access);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_District_kpi_user_access;
        }
        #endregion
        #region Get_User_By_Where_In_List_Adv
        public List<User> Get_User_By_Where_In_List_Adv(string FIRST_NAME, string LAST_NAME, string USERNAME, string PASSWORD, string EMAIL, string PHONE_NUMBER, string IMAGE_URL, string USER_DISTRICTNEX_WALKTHROUGH, string USER_ADMIN_WALKTHROUGH, IEnumerable<int?> ORGANIZATION_ID_LIST, IEnumerable<long?> USER_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User> oList_User = null;
            dynamic _params = new ExpandoObject();
            _params.FIRST_NAME = FIRST_NAME;
            _params.LAST_NAME = LAST_NAME;
            _params.USERNAME = USERNAME;
            _params.PASSWORD = PASSWORD;
            _params.EMAIL = EMAIL;
            _params.PHONE_NUMBER = PHONE_NUMBER;
            _params.IMAGE_URL = IMAGE_URL;
            _params.USER_DISTRICTNEX_WALKTHROUGH = USER_DISTRICTNEX_WALKTHROUGH;
            _params.USER_ADMIN_WALKTHROUGH = USER_ADMIN_WALKTHROUGH;
            _params.ORGANIZATION_ID_LIST = ORGANIZATION_ID_LIST != null ? string.Join(",", ORGANIZATION_ID_LIST) : "";
            _params.USER_TYPE_SETUP_ID_LIST = USER_TYPE_SETUP_ID_LIST != null ? string.Join(",", USER_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_User = new List<User>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User oUser = new User();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser);
                        oUser.Organization = new Organization();
                        oUser.Organization.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_ORGANIZATION_ID");
                        oUser.Organization.ORGANIZATION_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_NAME");
                        oUser.Organization.ORGANIZATION_EMAIL = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_EMAIL");
                        oUser.Organization.ORGANIZATION_PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_PHONE_NUMBER");
                        oUser.Organization.ORGANIZATION_ADDRESS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ORGANIZATION_ADDRESS");
                        oUser.Organization.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_DATA_RETENTION_PERIOD");
                        oUser.Organization.TICKET_DURATION_IN_MINUTES = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_TICKET_DURATION_IN_MINUTES");
                        oUser.Organization.ORGANIZATION_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ORGANIZATION_TYPE_SETUP_ID");
                        oUser.Organization.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_DATE_DELETED");
                        oUser.Organization.MAX_NUMBER_OF_ADMINS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_ADMINS");
                        oUser.Organization.MAX_NUMBER_OF_USERS = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_MAX_NUMBER_OF_USERS");
                        oUser.Organization.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_ENTRY_USER_ID");
                        oUser.Organization.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_ENTRY_DATE");
                        oUser.Organization.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_LAST_UPDATE");
                        oUser.Organization.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_ACTIVE");
                        oUser.Organization.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_IS_DELETED");
                        oUser.Organization.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_OWNER_ID");
                        oUser.User_type_setup = new Setup();
                        oUser.User_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_SETUP_ID");
                        oUser.User_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oUser.User_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_SYSTEM");
                        oUser.User_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETEABLE");
                        oUser.User_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_UPDATEABLE");
                        oUser.User_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_DELETED");
                        oUser.User_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_USER_TYPE_SETUP_IS_VISIBLE");
                        oUser.User_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_DISPLAY_ORDER");
                        oUser.User_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_VALUE");
                        oUser.User_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_DESCRIPTION");
                        oUser.User_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_TYPE_SETUP_ENTRY_USER_ID");
                        oUser.User_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_ENTRY_DATE");
                        oUser.User_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_TYPE_SETUP_LAST_UPDATE");
                        oUser.User_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_TYPE_SETUP_OWNER_ID");
                        oList_User.Add(oUser);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User;
        }
        #endregion
        #region Get_Site_By_Where_In_List_Adv
        public List<Site> Get_Site_By_Where_In_List_Adv(string NAME, string LOCATION, string UNIT, string IMAGE_URL, string LOGO_URL, string SOLID_GLTF_URL, string AREA_COLOR, string BORDER_COLOR, string STUDY_ZONE_NAME, IEnumerable<long?> AREA_ID_LIST, IEnumerable<long?> DISTRICT_ID_LIST, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> TOP_LEVEL_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Site> oList_Site = null;
            dynamic _params = new ExpandoObject();
            _params.NAME = NAME;
            _params.LOCATION = LOCATION;
            _params.UNIT = UNIT;
            _params.IMAGE_URL = IMAGE_URL;
            _params.LOGO_URL = LOGO_URL;
            _params.SOLID_GLTF_URL = SOLID_GLTF_URL;
            _params.AREA_COLOR = AREA_COLOR;
            _params.BORDER_COLOR = BORDER_COLOR;
            _params.STUDY_ZONE_NAME = STUDY_ZONE_NAME;
            _params.AREA_ID_LIST = AREA_ID_LIST != null ? string.Join(",", AREA_ID_LIST) : "";
            _params.DISTRICT_ID_LIST = DISTRICT_ID_LIST != null ? string.Join(",", DISTRICT_ID_LIST) : "";
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.TOP_LEVEL_ID_LIST = TOP_LEVEL_ID_LIST != null ? string.Join(",", TOP_LEVEL_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_SITE_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Site = new List<Site>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Site oSite = new Site();
                        Props.Copy_Prop_Values_From_Data_Record(element, oSite);
                        oSite.Area = new Area();
                        oSite.Area.AREA_ID = Get_Data_Record_Value<long?>(element, "T_AREA_AREA_ID");
                        oSite.Area.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_AREA_DISTRICT_ID");
                        oSite.Area.REGION_ID = Get_Data_Record_Value<long?>(element, "T_AREA_REGION_ID");
                        oSite.Area.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_AREA_TOP_LEVEL_ID");
                        oSite.Area.NAME = Get_Data_Record_Value<string>(element, "T_AREA_NAME");
                        oSite.Area.LOCATION = Get_Data_Record_Value<string>(element, "T_AREA_LOCATION");
                        oSite.Area.AREA = Get_Data_Record_Value<decimal?>(element, "T_AREA_AREA");
                        oSite.Area.UNIT = Get_Data_Record_Value<string>(element, "T_AREA_UNIT");
                        oSite.Area.SCALE = Get_Data_Record_Value<decimal?>(element, "T_AREA_SCALE");
                        oSite.Area.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONX");
                        oSite.Area.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONY");
                        oSite.Area.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_AREA_ROTATIONZ");
                        oSite.Area.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LATITUDE");
                        oSite.Area.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_GLTF_LONGITUDE");
                        oSite.Area.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LATITUDE");
                        oSite.Area.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_AREA_CENTER_LONGITUDE");
                        oSite.Area.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_AREA_RADIUS_IN_METERS");
                        oSite.Area.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_AREA_IMAGE_URL");
                        oSite.Area.LOGO_URL = Get_Data_Record_Value<string>(element, "T_AREA_LOGO_URL");
                        oSite.Area.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_AREA_SOLID_GLTF_URL");
                        oSite.Area.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_AREA_COLOR");
                        oSite.Area.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_AREA_BORDER_COLOR");
                        oSite.Area.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_AREA_STUDY_ZONE_NAME");
                        oSite.Area.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_AREA_ENTRY_USER_ID");
                        oSite.Area.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_AREA_ENTRY_DATE");
                        oSite.Area.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_AREA_LAST_UPDATE");
                        oSite.Area.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_AREA_IS_DELETED");
                        oSite.Area.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_AREA_OWNER_ID");
                        oSite.District = new District();
                        oSite.District.DISTRICT_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_DISTRICT_ID");
                        oSite.District.REGION_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_REGION_ID");
                        oSite.District.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_TOP_LEVEL_ID");
                        oSite.District.NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_NAME");
                        oSite.District.LOCATION = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOCATION");
                        oSite.District.AREA = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_AREA");
                        oSite.District.UNIT = Get_Data_Record_Value<string>(element, "T_DISTRICT_UNIT");
                        oSite.District.SCALE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_SCALE");
                        oSite.District.ROTATIONX = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONX");
                        oSite.District.ROTATIONY = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONY");
                        oSite.District.ROTATIONZ = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_ROTATIONZ");
                        oSite.District.GLTF_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LATITUDE");
                        oSite.District.GLTF_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_GLTF_LONGITUDE");
                        oSite.District.CENTER_LATITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LATITUDE");
                        oSite.District.CENTER_LONGITUDE = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_CENTER_LONGITUDE");
                        oSite.District.RADIUS_IN_METERS = Get_Data_Record_Value<decimal?>(element, "T_DISTRICT_RADIUS_IN_METERS");
                        oSite.District.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_IMAGE_URL");
                        oSite.District.LOGO_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_LOGO_URL");
                        oSite.District.SOLID_GLTF_URL = Get_Data_Record_Value<string>(element, "T_DISTRICT_SOLID_GLTF_URL");
                        oSite.District.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_AREA_COLOR");
                        oSite.District.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_DISTRICT_BORDER_COLOR");
                        oSite.District.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_DISTRICT_STUDY_ZONE_NAME");
                        oSite.District.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_DISTRICT_ENTRY_USER_ID");
                        oSite.District.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_ENTRY_DATE");
                        oSite.District.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_DISTRICT_LAST_UPDATE");
                        oSite.District.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_DISTRICT_IS_DELETED");
                        oSite.District.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_DISTRICT_OWNER_ID");
                        oSite.Region = new Region();
                        oSite.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oSite.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oSite.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oSite.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oSite.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oSite.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oSite.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oSite.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oSite.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oSite.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oSite.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oSite.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oSite.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oSite.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oSite.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oSite.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oSite.Top_level = new Top_level();
                        oSite.Top_level.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_TOP_LEVEL_ID");
                        oSite.Top_level.NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_NAME");
                        oSite.Top_level.LOCATION = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOCATION");
                        oSite.Top_level.AREA = Get_Data_Record_Value<decimal?>(element, "T_TOP_LEVEL_AREA");
                        oSite.Top_level.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_IMAGE_URL");
                        oSite.Top_level.LOGO_URL = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LOGO_URL");
                        oSite.Top_level.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_AREA_COLOR");
                        oSite.Top_level.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_BORDER_COLOR");
                        oSite.Top_level.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_STUDY_ZONE_NAME");
                        oSite.Top_level.LOW_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_LOW_THRESHOLD");
                        oSite.Top_level.HIGH_THRESHOLD = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_HIGH_THRESHOLD");
                        oSite.Top_level.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_TOP_LEVEL_ENTRY_USER_ID");
                        oSite.Top_level.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_ENTRY_DATE");
                        oSite.Top_level.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_TOP_LEVEL_LAST_UPDATE");
                        oSite.Top_level.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_TOP_LEVEL_IS_DELETED");
                        oSite.Top_level.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_TOP_LEVEL_OWNER_ID");
                        oList_Site.Add(oSite);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Site;
        }
        #endregion
        #region Get_User_theme_By_Where_In_List_Adv
        public List<User_theme> Get_User_theme_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> USER_ID_LIST, IEnumerable<int?> ORGANIZATION_THEME_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<User_theme> oList_User_theme = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.USER_ID_LIST = USER_ID_LIST != null ? string.Join(",", USER_ID_LIST) : "";
            _params.ORGANIZATION_THEME_ID_LIST = ORGANIZATION_THEME_ID_LIST != null ? string.Join(",", ORGANIZATION_THEME_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_USER_THEME_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_User_theme = new List<User_theme>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        User_theme oUser_theme = new User_theme();
                        Props.Copy_Prop_Values_From_Data_Record(element, oUser_theme);
                        oUser_theme.Organization_theme = new Organization_theme();
                        oUser_theme.Organization_theme.ORGANIZATION_THEME_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_THEME_ID");
                        oUser_theme.Organization_theme.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_ORGANIZATION_ID");
                        oUser_theme.Organization_theme.THEME_NAME = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_NAME");
                        oUser_theme.Organization_theme.THEME_CLASS = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_THEME_CLASS");
                        oUser_theme.Organization_theme.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_ORGANIZATION_THEME_ENTRY_USER_ID");
                        oUser_theme.Organization_theme.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_ENTRY_DATE");
                        oUser_theme.Organization_theme.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_ORGANIZATION_THEME_LAST_UPDATE");
                        oUser_theme.Organization_theme.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_ORGANIZATION_THEME_IS_DELETED");
                        oUser_theme.Organization_theme.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_ORGANIZATION_THEME_OWNER_ID");
                        oUser_theme.User = new User();
                        oUser_theme.User.USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_ID");
                        oUser_theme.User.ORGANIZATION_ID = Get_Data_Record_Value<int?>(element, "T_USER_ORGANIZATION_ID");
                        oUser_theme.User.USER_TYPE_SETUP_ID = Get_Data_Record_Value<long?>(element, "T_USER_USER_TYPE_SETUP_ID");
                        oUser_theme.User.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_USER_OWNER_ID");
                        oUser_theme.User.FIRST_NAME = Get_Data_Record_Value<string>(element, "T_USER_FIRST_NAME");
                        oUser_theme.User.LAST_NAME = Get_Data_Record_Value<string>(element, "T_USER_LAST_NAME");
                        oUser_theme.User.USERNAME = Get_Data_Record_Value<string>(element, "T_USER_USERNAME");
                        oUser_theme.User.PASSWORD = Get_Data_Record_Value<string>(element, "T_USER_PASSWORD");
                        oUser_theme.User.EMAIL = Get_Data_Record_Value<string>(element, "T_USER_EMAIL");
                        oUser_theme.User.PHONE_NUMBER = Get_Data_Record_Value<string>(element, "T_USER_PHONE_NUMBER");
                        oUser_theme.User.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_USER_IMAGE_URL");
                        oUser_theme.User.IS_ACTIVE = Get_Data_Record_Value<bool>(element, "T_USER_IS_ACTIVE");
                        oUser_theme.User.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_USER_IS_DELETED");
                        oUser_theme.User.IS_RECEIVE_EMAIL = Get_Data_Record_Value<bool>(element, "T_USER_IS_RECEIVE_EMAIL");
                        oUser_theme.User.DATA_RETENTION_PERIOD = Get_Data_Record_Value<int?>(element, "T_USER_DATA_RETENTION_PERIOD");
                        oUser_theme.User.USER_DISTRICTNEX_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_DISTRICTNEX_WALKTHROUGH");
                        oUser_theme.User.USER_ADMIN_WALKTHROUGH = Get_Data_Record_Value<string>(element, "T_USER_USER_ADMIN_WALKTHROUGH");
                        oUser_theme.User.DATE_DELETED = Get_Data_Record_Value<string>(element, "T_USER_DATE_DELETED");
                        oUser_theme.User.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_USER_ENTRY_DATE");
                        oUser_theme.User.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_USER_ENTRY_USER_ID");
                        oUser_theme.User.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_USER_LAST_UPDATE");
                        oList_User_theme.Add(oUser_theme);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_User_theme;
        }
        #endregion
        #region Get_Region_view_By_Where_In_List_Adv
        public List<Region_view> Get_Region_view_By_Where_In_List_Adv(string DESCRIPTION, IEnumerable<long?> REGION_ID_LIST, IEnumerable<long?> VIEW_TYPE_SETUP_ID_LIST, int? OWNER_ID, long? OFFSET, long? FETCH_NEXT, ref long? TOTAL_COUNT)
        {
            List<Region_view> oList_Region_view = null;
            dynamic _params = new ExpandoObject();
            _params.DESCRIPTION = DESCRIPTION;
            _params.REGION_ID_LIST = REGION_ID_LIST != null ? string.Join(",", REGION_ID_LIST) : "";
            _params.VIEW_TYPE_SETUP_ID_LIST = VIEW_TYPE_SETUP_ID_LIST != null ? string.Join(",", VIEW_TYPE_SETUP_ID_LIST) : "";
            _params.OWNER_ID = OWNER_ID;
            _params.OFFSET = OFFSET;
            _params.FETCH_NEXT = FETCH_NEXT;
            _params.TOTAL_COUNT = TOTAL_COUNT;
            IEnumerable<IDataRecord> _query_response = ExecuteSelectQuery("UPG_GET_REGION_VIEW_BY_WHERE_IN_LIST_ADV", _params);
            if (_query_response != null)
            {
                oList_Region_view = new List<Region_view>();
                if (_query_response.Count() > 0)
                {
                    foreach (var element in _query_response)
                    {
                        Region_view oRegion_view = new Region_view();
                        Props.Copy_Prop_Values_From_Data_Record(element, oRegion_view);
                        oRegion_view.Region = new Region();
                        oRegion_view.Region.REGION_ID = Get_Data_Record_Value<long?>(element, "T_REGION_REGION_ID");
                        oRegion_view.Region.TOP_LEVEL_ID = Get_Data_Record_Value<long?>(element, "T_REGION_TOP_LEVEL_ID");
                        oRegion_view.Region.NAME = Get_Data_Record_Value<string>(element, "T_REGION_NAME");
                        oRegion_view.Region.LOCATION = Get_Data_Record_Value<string>(element, "T_REGION_LOCATION");
                        oRegion_view.Region.AREA = Get_Data_Record_Value<decimal?>(element, "T_REGION_AREA");
                        oRegion_view.Region.UNIT = Get_Data_Record_Value<string>(element, "T_REGION_UNIT");
                        oRegion_view.Region.IMAGE_URL = Get_Data_Record_Value<string>(element, "T_REGION_IMAGE_URL");
                        oRegion_view.Region.LOGO_URL = Get_Data_Record_Value<string>(element, "T_REGION_LOGO_URL");
                        oRegion_view.Region.AREA_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_AREA_COLOR");
                        oRegion_view.Region.BORDER_COLOR = Get_Data_Record_Value<string>(element, "T_REGION_BORDER_COLOR");
                        oRegion_view.Region.STUDY_ZONE_NAME = Get_Data_Record_Value<string>(element, "T_REGION_STUDY_ZONE_NAME");
                        oRegion_view.Region.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_REGION_ENTRY_USER_ID");
                        oRegion_view.Region.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_REGION_ENTRY_DATE");
                        oRegion_view.Region.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_REGION_LAST_UPDATE");
                        oRegion_view.Region.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_REGION_IS_DELETED");
                        oRegion_view.Region.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_REGION_OWNER_ID");
                        oRegion_view.View_type_setup = new Setup();
                        oRegion_view.View_type_setup.SETUP_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_SETUP_ID");
                        oRegion_view.View_type_setup.SETUP_CATEGORY_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_SETUP_CATEGORY_ID");
                        oRegion_view.View_type_setup.IS_SYSTEM = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_SYSTEM");
                        oRegion_view.View_type_setup.IS_DELETEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETEABLE");
                        oRegion_view.View_type_setup.IS_UPDATEABLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_UPDATEABLE");
                        oRegion_view.View_type_setup.IS_DELETED = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_DELETED");
                        oRegion_view.View_type_setup.IS_VISIBLE = Get_Data_Record_Value<bool>(element, "T_VIEW_TYPE_SETUP_IS_VISIBLE");
                        oRegion_view.View_type_setup.DISPLAY_ORDER = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_DISPLAY_ORDER");
                        oRegion_view.View_type_setup.VALUE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_VALUE");
                        oRegion_view.View_type_setup.DESCRIPTION = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_DESCRIPTION");
                        oRegion_view.View_type_setup.ENTRY_USER_ID = Get_Data_Record_Value<long?>(element, "T_VIEW_TYPE_SETUP_ENTRY_USER_ID");
                        oRegion_view.View_type_setup.ENTRY_DATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_ENTRY_DATE");
                        oRegion_view.View_type_setup.LAST_UPDATE = Get_Data_Record_Value<string>(element, "T_VIEW_TYPE_SETUP_LAST_UPDATE");
                        oRegion_view.View_type_setup.OWNER_ID = Get_Data_Record_Value<int?>(element, "T_VIEW_TYPE_SETUP_OWNER_ID");
                        oList_Region_view.Add(oRegion_view);
                    }
                }
            }
            TOTAL_COUNT = _params.TOTAL_COUNT;
            return oList_Region_view;
        }
        #endregion
    }
}
